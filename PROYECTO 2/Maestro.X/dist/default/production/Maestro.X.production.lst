

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed May 25 21:17:57 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0013                     _SSPBUF	set	19
   214  0014                     _SSPCONbits	set	20
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0005                     _PORTA	set	5
   219  001E                     _ADRESH	set	30
   220  001F                     _ADCON0bits	set	31
   221  000C                     _PIR1bits	set	12
   222  0009                     _PORTEbits	set	9
   223  0006                     _PORTBbits	set	6
   224  000B                     _INTCONbits	set	11
   225  0091                     _SSPCON2bits	set	145
   226  008C                     _PIE1bits	set	140
   227  0094                     _SSPSTATbits	set	148
   228  0093                     _SSPADD	set	147
   229  0096                     _IOCBbits	set	150
   230  0095                     _WPUBbits	set	149
   231  0081                     _OPTION_REGbits	set	129
   232  0086                     _TRISBbits	set	134
   233  009F                     _ADCON1bits	set	159
   234  0089                     _TRISE	set	137
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0085                     _TRISA	set	133
   238  008F                     _OSCCONbits	set	143
   239  048E                     _ACKSTAT	set	1166
   240  010C                     _EEDAT	set	268
   241  010D                     _EEADR	set	269
   242  018D                     _EECON2	set	397
   243  018C                     _EECON1bits	set	396
   244  0189                     _ANSELH	set	393
   245  0188                     _ANSEL	set	392
   246                           
   247                           	psect	cinit
   248  000F                     start_initialization:	
   249                           ; #config settings
   250                           
   251  000F                     __initialization:
   252                           
   253                           ; Clear objects allocated to COMMON
   254  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   255  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   256  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   257  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   258  0013  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   259  0014  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   260  0015                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  0015                     __end_of__initialization:
   264  0015  0183               	clrf	3
   265  0016  120A  118A  2938   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268  0077                     __pbssCOMMON:
   269  0077                     _data:
   270  0077                     	ds	1
   271  0078                     _POT4:
   272  0078                     	ds	1
   273  0079                     _POT3:
   274  0079                     	ds	1
   275  007A                     _POT2:
   276  007A                     	ds	1
   277  007B                     _POT1:
   278  007B                     	ds	1
   279  007C                     _modo:
   280  007C                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_write_I2C:
   285  0070                     ?_write_EEPROM:	
   286                           ; 1 bit 
   287                           
   288  0070                     ?_read_EEPROM:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ??_read_EEPROM:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_setup:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_start_I2C:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_stop_I2C:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_isr:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_wait_I2C:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     read_EEPROM@address:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     write_EEPROM@data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318                           
   319                           ; 1 bytes @ 0x0
   320  0070                     	ds	1
   321  0071                     ??_write_EEPROM:
   322                           
   323                           ; 1 bytes @ 0x1
   324  0071                     	ds	2
   325  0073                     write_EEPROM@address:
   326                           
   327                           ; 1 bytes @ 0x3
   328  0073                     	ds	1
   329  0074                     ??_isr:
   330                           
   331                           ; 1 bytes @ 0x4
   332  0074                     	ds	3
   333                           
   334                           	psect	cstackBANK0
   335  0020                     __pcstackBANK0:
   336  0020                     ??_setup:
   337  0020                     ??_start_I2C:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0020                     ??_write_I2C:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0020                     ??_stop_I2C:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0020                     ??_wait_I2C:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0020                     write_I2C@data:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0020                     	ds	1
   355  0021                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x1
   358  0021                     	ds	2
   359                           
   360                           	psect	maintext
   361  0138                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 110 in file "main_M.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          0       2       0       0       0
   384 ;;      Totals:         0       2       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels required when called: 4
   387 ;; This function calls:
   388 ;;		_setup
   389 ;;		_start_I2C
   390 ;;		_stop_I2C
   391 ;;		_write_I2C
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397  0138                     _main:	
   398                           ;psect for function _main
   399                           
   400  0138                     l1227:	
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403                           
   404                           
   405                           ;main_M.c: 111:     setup();
   406  0138  120A  118A  21AB  120A  118A  	fcall	_setup
   407  013D                     l1229:
   408                           
   409                           ;main_M.c: 113:         if(ADCON0bits.GO == 0){
   410  013D  1283               	bcf	3,5	;RP0=0, select bank0
   411  013E  1303               	bcf	3,6	;RP1=0, select bank0
   412  013F  189F               	btfsc	31,1	;volatile
   413  0140  2942               	goto	u441
   414  0141  2943               	goto	u440
   415  0142                     u441:
   416  0142  2983               	goto	l1251
   417  0143                     u440:
   418  0143                     l1231:
   419                           
   420                           ;main_M.c: 114:             if(ADCON0bits.CHS == 0b0000)
   421  0143  0C1F               	rrf	31,w	;volatile
   422  0144  00A1               	movwf	??_main
   423  0145  0C21               	rrf	??_main,w
   424  0146  390F               	andlw	15
   425  0147  3A00               	xorlw	0
   426  0148  1D03               	skipz
   427  0149  294B               	goto	u451
   428  014A  294C               	goto	u450
   429  014B                     u451:
   430  014B  2951               	goto	l1235
   431  014C                     u450:
   432  014C                     l1233:
   433                           
   434                           ;main_M.c: 115:                 ADCON0bits.CHS = 0b0001;
   435  014C  081F               	movf	31,w	;volatile
   436  014D  39C3               	andlw	-61
   437  014E  3804               	iorlw	4
   438  014F  009F               	movwf	31	;volatile
   439  0150  2979               	goto	l1247
   440  0151                     l1235:
   441  0151  0C1F               	rrf	31,w	;volatile
   442  0152  00A1               	movwf	??_main
   443  0153  0C21               	rrf	??_main,w
   444  0154  390F               	andlw	15
   445  0155  3A01               	xorlw	1
   446  0156  1D03               	skipz
   447  0157  2959               	goto	u461
   448  0158  295A               	goto	u460
   449  0159                     u461:
   450  0159  295F               	goto	l1239
   451  015A                     u460:
   452  015A                     l1237:
   453                           
   454                           ;main_M.c: 117:                 ADCON0bits.CHS = 0b0010;
   455  015A  081F               	movf	31,w	;volatile
   456  015B  39C3               	andlw	-61
   457  015C  3808               	iorlw	8
   458  015D  009F               	movwf	31	;volatile
   459  015E  2979               	goto	l1247
   460  015F                     l1239:
   461  015F  0C1F               	rrf	31,w	;volatile
   462  0160  00A1               	movwf	??_main
   463  0161  0C21               	rrf	??_main,w
   464  0162  390F               	andlw	15
   465  0163  3A02               	xorlw	2
   466  0164  1D03               	skipz
   467  0165  2967               	goto	u471
   468  0166  2968               	goto	u470
   469  0167                     u471:
   470  0167  296D               	goto	l1243
   471  0168                     u470:
   472  0168                     l1241:
   473                           
   474                           ;main_M.c: 119:                 ADCON0bits.CHS = 0b0011;
   475  0168  081F               	movf	31,w	;volatile
   476  0169  39C3               	andlw	-61
   477  016A  380C               	iorlw	12
   478  016B  009F               	movwf	31	;volatile
   479  016C  2979               	goto	l1247
   480  016D                     l1243:
   481  016D  0C1F               	rrf	31,w	;volatile
   482  016E  00A1               	movwf	??_main
   483  016F  0C21               	rrf	??_main,w
   484  0170  390F               	andlw	15
   485  0171  3A03               	xorlw	3
   486  0172  1D03               	skipz
   487  0173  2975               	goto	u481
   488  0174  2976               	goto	u480
   489  0175                     u481:
   490  0175  2979               	goto	l127
   491  0176                     u480:
   492  0176                     l1245:
   493                           
   494                           ;main_M.c: 121:                 ADCON0bits.CHS = 0b0000;
   495  0176  30C3               	movlw	-61
   496  0177  059F               	andwf	31,f	;volatile
   497  0178  2979               	goto	l1247
   498  0179                     l127:
   499  0179                     l1247:
   500                           
   501                           ;main_M.c: 122:             _delay((unsigned long)((40)*(1000000/4000000.0)));
   502  0179  3002               	movlw	2
   503  017A  1283               	bcf	3,5	;RP0=0, select bank0
   504  017B  1303               	bcf	3,6	;RP1=0, select bank0
   505  017C  00A1               	movwf	??_main
   506  017D                     u497:
   507  017D  0BA1               	decfsz	??_main,f
   508  017E  297D               	goto	u497
   509  017F  0000               	nop
   510  0180                     l1249:
   511                           
   512                           ;main_M.c: 123:             ADCON0bits.GO = 1;
   513  0180  1283               	bcf	3,5	;RP0=0, select bank0
   514  0181  1303               	bcf	3,6	;RP1=0, select bank0
   515  0182  149F               	bsf	31,1	;volatile
   516  0183                     l1251:
   517                           
   518                           ;main_M.c: 126:         data = (uint8_t)((0x08<<1)+0b0);
   519  0183  3010               	movlw	16
   520  0184  00A1               	movwf	??_main
   521  0185  0821               	movf	??_main,w
   522  0186  00F7               	movwf	_data
   523  0187                     l1253:
   524                           
   525                           ;main_M.c: 127:         start_I2C();
   526  0187  120A  118A  2241  120A  118A  	fcall	_start_I2C
   527  018C                     l1255:
   528                           
   529                           ;main_M.c: 128:         write_I2C(data);
   530  018C  3010               	movlw	16
   531  018D  120A  118A  222D  120A  118A  	fcall	_write_I2C
   532  0192                     l1257:
   533                           
   534                           ;main_M.c: 129:         write_I2C(POT1);
   535  0192  087B               	movf	_POT1,w
   536  0193  120A  118A  222D  120A  118A  	fcall	_write_I2C
   537  0198                     l1259:
   538                           
   539                           ;main_M.c: 130:         stop_I2C();
   540  0198  120A  118A  2238  120A  118A  	fcall	_stop_I2C
   541  019D                     l1261:
   542                           
   543                           ;main_M.c: 131:         _delay((unsigned long)((10)*(1000000/4000.0)));
   544  019D  3004               	movlw	4
   545  019E  1283               	bcf	3,5	;RP0=0, select bank0
   546  019F  1303               	bcf	3,6	;RP1=0, select bank0
   547  01A0  00A2               	movwf	??_main+1
   548  01A1  303D               	movlw	61
   549  01A2  00A1               	movwf	??_main
   550  01A3                     u507:
   551  01A3  0BA1               	decfsz	??_main,f
   552  01A4  29A3               	goto	u507
   553  01A5  0BA2               	decfsz	??_main+1,f
   554  01A6  29A3               	goto	u507
   555  01A7  293D               	goto	l1229
   556  01A8  120A  118A  280C   	ljmp	start
   557  01AB                     __end_of_main:
   558                           
   559                           	psect	text1
   560  022D                     __ptext1:	
   561 ;; *************** function _write_I2C *****************
   562 ;; Defined at:
   563 ;;		line 242 in file "main_M.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  data            1    wreg     unsigned char 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  data            1    0[BANK0 ] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       1       0       0       0
   579 ;;      Temps:          0       0       0       0       0
   580 ;;      Totals:         0       1       0       0       0
   581 ;;Total ram usage:        1 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 3
   584 ;; This function calls:
   585 ;;		_wait_I2C
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591  022D                     _write_I2C:	
   592                           ;psect for function _write_I2C
   593                           
   594                           
   595                           ;incstack = 0
   596                           ; Regs used in _write_I2C: [wreg+status,2+status,0+pclath+cstack]
   597                           ;write_I2C@data stored from wreg
   598  022D  1283               	bcf	3,5	;RP0=0, select bank0
   599  022E  1303               	bcf	3,6	;RP1=0, select bank0
   600  022F  00A0               	movwf	write_I2C@data
   601  0230                     l1215:
   602                           
   603                           ;main_M.c: 243:     SSPBUF = data;
   604  0230  0820               	movf	write_I2C@data,w
   605  0231  0093               	movwf	19	;volatile
   606  0232                     l1217:
   607                           
   608                           ;main_M.c: 244:     wait_I2C();
   609  0232  120A  118A  224A  120A  118A  	fcall	_wait_I2C
   610  0237                     l1219:
   611  0237                     l170:	
   612                           ;main_M.c: 245:     return ACKSTAT;
   613                           
   614  0237  0008               	return
   615  0238                     __end_of_write_I2C:
   616                           
   617                           	psect	text2
   618  0238                     __ptext2:	
   619 ;; *************** function _stop_I2C *****************
   620 ;; Defined at:
   621 ;;		line 228 in file "main_M.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 3
   642 ;; This function calls:
   643 ;;		_wait_I2C
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649  0238                     _stop_I2C:	
   650                           ;psect for function _stop_I2C
   651                           
   652  0238                     l1223:	
   653                           ;incstack = 0
   654                           ; Regs used in _stop_I2C: [status,2+status,0+pclath+cstack]
   655                           
   656                           
   657                           ;main_M.c: 229:     SSPCON2bits.PEN = 1;
   658  0238  1683               	bsf	3,5	;RP0=1, select bank1
   659  0239  1303               	bcf	3,6	;RP1=0, select bank1
   660  023A  1511               	bsf	17,2	;volatile
   661  023B                     l1225:
   662                           
   663                           ;main_M.c: 230:     wait_I2C();
   664  023B  120A  118A  224A  120A  118A  	fcall	_wait_I2C
   665  0240                     l157:
   666  0240  0008               	return
   667  0241                     __end_of_stop_I2C:
   668                           
   669                           	psect	text3
   670  0241                     __ptext3:	
   671 ;; *************** function _start_I2C *****************
   672 ;; Defined at:
   673 ;;		line 220 in file "main_M.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 3
   694 ;; This function calls:
   695 ;;		_wait_I2C
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701  0241                     _start_I2C:	
   702                           ;psect for function _start_I2C
   703                           
   704  0241                     l1211:	
   705                           ;incstack = 0
   706                           ; Regs used in _start_I2C: [status,2+status,0+pclath+cstack]
   707                           
   708                           
   709                           ;main_M.c: 221:     SSPCON2bits.SEN = 1;
   710  0241  1683               	bsf	3,5	;RP0=1, select bank1
   711  0242  1303               	bcf	3,6	;RP1=0, select bank1
   712  0243  1411               	bsf	17,0	;volatile
   713  0244                     l1213:
   714                           
   715                           ;main_M.c: 222:     wait_I2C();
   716  0244  120A  118A  224A  120A  118A  	fcall	_wait_I2C
   717  0249                     l151:
   718  0249  0008               	return
   719  024A                     __end_of_start_I2C:
   720                           
   721                           	psect	text4
   722  024A                     __ptext4:	
   723 ;; *************** function _wait_I2C *****************
   724 ;; Defined at:
   725 ;;		line 216 in file "main_M.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		None
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_start_I2C
   750 ;;		_stop_I2C
   751 ;;		_write_I2C
   752 ;;		_restart_I2C
   753 ;;		_send_ACK
   754 ;;		_send_NACK
   755 ;;		_read_I2C
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759  024A                     _wait_I2C:	
   760                           ;psect for function _wait_I2C
   761                           
   762  024A                     l1209:	
   763                           ;incstack = 0
   764                           ; Regs used in _wait_I2C: []
   765                           
   766  024A                     l145:	
   767                           ;main_M.c: 217:     while(!PIR1bits.SSPIF);
   768                           
   769  024A  1283               	bcf	3,5	;RP0=0, select bank0
   770  024B  1303               	bcf	3,6	;RP1=0, select bank0
   771  024C  1D8C               	btfss	12,3	;volatile
   772  024D  2A4F               	goto	u431
   773  024E  2A50               	goto	u430
   774  024F                     u431:
   775  024F  2A4A               	goto	l145
   776  0250                     u430:
   777  0250                     l147:
   778                           
   779                           ;main_M.c: 218:     PIR1bits.SSPIF = 0;
   780  0250  118C               	bcf	12,3	;volatile
   781  0251                     l148:
   782  0251  0008               	return
   783  0252                     __end_of_wait_I2C:
   784                           
   785                           	psect	text5
   786  01AB                     __ptext5:	
   787 ;; *************** function _setup *****************
   788 ;; Defined at:
   789 ;;		line 137 in file "main_M.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       1       0       0       0
   806 ;;      Totals:         0       1       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 2
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817  01AB                     _setup:	
   818                           ;psect for function _setup
   819                           
   820  01AB                     l1009:	
   821                           ;incstack = 0
   822                           ; Regs used in _setup: [wreg+status,2+status,0]
   823                           
   824                           
   825                           ;main_M.c: 139:     ANSEL =0b00001111;
   826  01AB  300F               	movlw	15
   827  01AC  1683               	bsf	3,5	;RP0=1, select bank3
   828  01AD  1703               	bsf	3,6	;RP1=1, select bank3
   829  01AE  0088               	movwf	8	;volatile
   830  01AF                     l1011:
   831                           
   832                           ;main_M.c: 140:     ANSELH = 0x00;
   833  01AF  0189               	clrf	9	;volatile
   834  01B0                     l1013:
   835                           
   836                           ;main_M.c: 142:     OSCCONbits.IRCF = 0b0100;
   837  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   838  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   839  01B2  080F               	movf	15,w	;volatile
   840  01B3  398F               	andlw	-113
   841  01B4  3840               	iorlw	64
   842  01B5  008F               	movwf	15	;volatile
   843  01B6                     l1015:
   844                           
   845                           ;main_M.c: 143:     OSCCONbits.SCS = 1;
   846  01B6  140F               	bsf	15,0	;volatile
   847  01B7                     l1017:
   848                           
   849                           ;main_M.c: 145:     TRISA = 0b00001111;
   850  01B7  300F               	movlw	15
   851  01B8  0085               	movwf	5	;volatile
   852  01B9                     l1019:
   853                           
   854                           ;main_M.c: 146:     PORTA = 0x00;
   855  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   856  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   857  01BB  0185               	clrf	5	;volatile
   858  01BC                     l1021:
   859                           
   860                           ;main_M.c: 148:     PORTC = 0x00;
   861  01BC  0187               	clrf	7	;volatile
   862  01BD                     l1023:
   863                           
   864                           ;main_M.c: 149:     TRISC = 0b00011000;
   865  01BD  3018               	movlw	24
   866  01BE  1683               	bsf	3,5	;RP0=1, select bank1
   867  01BF  1303               	bcf	3,6	;RP1=0, select bank1
   868  01C0  0087               	movwf	7	;volatile
   869  01C1                     l1025:
   870                           
   871                           ;main_M.c: 152:     PORTD = 0x00;
   872  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   873  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   874  01C3  0188               	clrf	8	;volatile
   875  01C4                     l1027:
   876                           
   877                           ;main_M.c: 153:     TRISD = 0x00;
   878  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   879  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   880  01C6  0188               	clrf	8	;volatile
   881  01C7                     l1029:
   882                           
   883                           ;main_M.c: 154:     TRISE = 0x00;
   884  01C7  0189               	clrf	9	;volatile
   885  01C8                     l1031:
   886                           
   887                           ;main_M.c: 155:     PORTE = 0x00;
   888  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   889  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   890  01CA  0189               	clrf	9	;volatile
   891  01CB                     l1033:
   892                           
   893                           ;main_M.c: 158:     ADCON0bits.ADCS = 0b00;
   894  01CB  303F               	movlw	-193
   895  01CC  059F               	andwf	31,f	;volatile
   896  01CD                     l1035:
   897                           
   898                           ;main_M.c: 160:     ADCON1bits.VCFG0 = 0;
   899  01CD  1683               	bsf	3,5	;RP0=1, select bank1
   900  01CE  1303               	bcf	3,6	;RP1=0, select bank1
   901  01CF  121F               	bcf	31,4	;volatile
   902  01D0                     l1037:
   903                           
   904                           ;main_M.c: 161:     ADCON1bits.VCFG1 = 0;
   905  01D0  129F               	bcf	31,5	;volatile
   906  01D1                     l1039:
   907                           
   908                           ;main_M.c: 163:     ADCON0bits.CHS = 0b0000;
   909  01D1  30C3               	movlw	-61
   910  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   911  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   912  01D4  059F               	andwf	31,f	;volatile
   913  01D5                     l1041:
   914                           
   915                           ;main_M.c: 164:     ADCON1bits.ADFM = 0;
   916  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   917  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   918  01D7  139F               	bcf	31,7	;volatile
   919  01D8                     l1043:
   920                           
   921                           ;main_M.c: 165:     ADCON0bits.ADON = 1;
   922  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   923  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   924  01DA  141F               	bsf	31,0	;volatile
   925  01DB                     l1045:
   926                           
   927                           ;main_M.c: 166:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   928  01DB  3002               	movlw	2
   929  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   930  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   931  01DE  00A0               	movwf	??_setup
   932  01DF                     u517:
   933  01DF  0BA0               	decfsz	??_setup,f
   934  01E0  29DF               	goto	u517
   935  01E1  0000               	nop
   936  01E2                     l1047:
   937                           
   938                           ;main_M.c: 169:     TRISBbits.TRISB0 = 1;
   939  01E2  1683               	bsf	3,5	;RP0=1, select bank1
   940  01E3  1303               	bcf	3,6	;RP1=0, select bank1
   941  01E4  1406               	bsf	6,0	;volatile
   942  01E5                     l1049:
   943                           
   944                           ;main_M.c: 170:     TRISBbits.TRISB1 = 1;
   945  01E5  1486               	bsf	6,1	;volatile
   946  01E6                     l1051:
   947                           
   948                           ;main_M.c: 171:     TRISBbits.TRISB2 = 1;
   949  01E6  1506               	bsf	6,2	;volatile
   950  01E7                     l1053:
   951                           
   952                           ;main_M.c: 172:     OPTION_REGbits.nRBPU = 0;
   953  01E7  1381               	bcf	1,7	;volatile
   954  01E8                     l1055:
   955                           
   956                           ;main_M.c: 173:     WPUBbits.WPUB = 0x07;
   957  01E8  3007               	movlw	7
   958  01E9  0095               	movwf	21	;volatile
   959  01EA                     l1057:
   960                           
   961                           ;main_M.c: 174:     IOCBbits.IOCB = 0x07;
   962  01EA  3007               	movlw	7
   963  01EB  0096               	movwf	22	;volatile
   964  01EC                     l1059:
   965                           
   966                           ;main_M.c: 177:     SSPADD = ((1000000)/(4*100000)) - 1;
   967  01EC  3001               	movlw	1
   968  01ED  0093               	movwf	19	;volatile
   969  01EE                     l1061:
   970                           
   971                           ;main_M.c: 178:     SSPSTATbits.SMP = 1;
   972  01EE  1794               	bsf	20,7	;volatile
   973  01EF                     l1063:
   974                           
   975                           ;main_M.c: 179:     SSPCONbits.SSPM = 0b1000;
   976  01EF  1283               	bcf	3,5	;RP0=0, select bank0
   977  01F0  1303               	bcf	3,6	;RP1=0, select bank0
   978  01F1  0814               	movf	20,w	;volatile
   979  01F2  39F0               	andlw	-16
   980  01F3  3808               	iorlw	8
   981  01F4  0094               	movwf	20	;volatile
   982  01F5                     l1065:
   983                           
   984                           ;main_M.c: 180:     SSPCONbits.SSPEN = 1;
   985  01F5  1694               	bsf	20,5	;volatile
   986  01F6                     l1067:
   987                           
   988                           ;main_M.c: 181:     PIR1bits.SSPIF = 0;
   989  01F6  118C               	bcf	12,3	;volatile
   990  01F7                     l1069:
   991                           
   992                           ;main_M.c: 184:     INTCONbits.RBIE = 1;
   993  01F7  158B               	bsf	11,3	;volatile
   994  01F8                     l1071:
   995                           
   996                           ;main_M.c: 185:     INTCONbits.RBIF = 0;
   997  01F8  100B               	bcf	11,0	;volatile
   998  01F9                     l1073:
   999                           
  1000                           ;main_M.c: 186:     PIR1bits.ADIF = 0;
  1001  01F9  130C               	bcf	12,6	;volatile
  1002  01FA                     l1075:
  1003                           
  1004                           ;main_M.c: 187:     PIE1bits.ADIE = 1;
  1005  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1006  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1007  01FC  170C               	bsf	12,6	;volatile
  1008  01FD                     l1077:
  1009                           
  1010                           ;main_M.c: 188:     INTCONbits.PEIE = 1;
  1011  01FD  170B               	bsf	11,6	;volatile
  1012  01FE                     l1079:
  1013                           
  1014                           ;main_M.c: 189:     INTCONbits.GIE = 1;
  1015  01FE  178B               	bsf	11,7	;volatile
  1016  01FF                     l136:
  1017  01FF  0008               	return
  1018  0200                     __end_of_setup:
  1019                           
  1020                           	psect	text6
  1021  0019                     __ptext6:	
  1022 ;; *************** function _isr *****************
  1023 ;; Defined at:
  1024 ;;		line 47 in file "main_M.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0
  1040 ;;      Temps:          3       0       0       0       0
  1041 ;;      Totals:         3       0       0       0       0
  1042 ;;Total ram usage:        3 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 1
  1045 ;; This function calls:
  1046 ;;		_read_EEPROM
  1047 ;;		_write_EEPROM
  1048 ;; This function is called by:
  1049 ;;		Interrupt level 1
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053  0019                     _isr:	
  1054                           ;psect for function _isr
  1055                           
  1056  0019                     i1l1099:
  1057                           
  1058                           ;main_M.c: 48:     if(INTCONbits.RBIF){
  1059  0019  1C0B               	btfss	11,0	;volatile
  1060  001A  281C               	goto	u23_21
  1061  001B  281D               	goto	u23_20
  1062  001C                     u23_21:
  1063  001C  28ED               	goto	i1l97
  1064  001D                     u23_20:
  1065  001D                     i1l1101:
  1066                           
  1067                           ;main_M.c: 49:         if (!PORTBbits.RB0)
  1068  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1069  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1070  001F  1806               	btfsc	6,0	;volatile
  1071  0020  2822               	goto	u24_21
  1072  0021  2823               	goto	u24_20
  1073  0022                     u24_21:
  1074  0022  2827               	goto	i1l1105
  1075  0023                     u24_20:
  1076  0023                     i1l1103:
  1077                           
  1078                           ;main_M.c: 50:             ++modo;
  1079  0023  3001               	movlw	1
  1080  0024  00F4               	movwf	??_isr
  1081  0025  0874               	movf	??_isr,w
  1082  0026  07FC               	addwf	_modo,f
  1083  0027                     i1l1105:
  1084                           
  1085                           ;main_M.c: 51:         if(modo>=2)
  1086  0027  3002               	movlw	2
  1087  0028  027C               	subwf	_modo,w
  1088  0029  1C03               	skipc
  1089  002A  282C               	goto	u25_21
  1090  002B  282D               	goto	u25_20
  1091  002C                     u25_21:
  1092  002C  282E               	goto	i1l1109
  1093  002D                     u25_20:
  1094  002D                     i1l1107:
  1095                           
  1096                           ;main_M.c: 52:             modo=0;
  1097  002D  01FC               	clrf	_modo
  1098  002E                     i1l1109:
  1099                           
  1100                           ;main_M.c: 54:         if(modo==0){
  1101  002E  087C               	movf	_modo,w
  1102  002F  1D03               	btfss	3,2
  1103  0030  2832               	goto	u26_21
  1104  0031  2833               	goto	u26_20
  1105  0032                     u26_21:
  1106  0032  2891               	goto	i1l1119
  1107  0033                     u26_20:
  1108  0033                     i1l1111:
  1109                           
  1110                           ;main_M.c: 55:             PORTEbits.RE0 = 1;
  1111  0033  1409               	bsf	9,0	;volatile
  1112                           
  1113                           ;main_M.c: 56:             PORTEbits.RE1 = 0;
  1114  0034  1089               	bcf	9,1	;volatile
  1115                           
  1116                           ;main_M.c: 57:             PORTEbits.RE2 = 0;
  1117  0035  1109               	bcf	9,2	;volatile
  1118                           
  1119                           ;main_M.c: 59:             if(!PORTBbits.RB1){
  1120  0036  1886               	btfsc	6,1	;volatile
  1121  0037  2839               	goto	u27_21
  1122  0038  283A               	goto	u27_20
  1123  0039                     u27_21:
  1124  0039  2862               	goto	i1l1115
  1125  003A                     u27_20:
  1126  003A                     i1l1113:
  1127                           
  1128                           ;main_M.c: 60:                 write_EEPROM(0x01,POT1);
  1129  003A  087B               	movf	_POT1,w
  1130  003B  00F4               	movwf	??_isr
  1131  003C  0874               	movf	??_isr,w
  1132  003D  00F0               	movwf	write_EEPROM@data
  1133  003E  3001               	movlw	1
  1134  003F  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1135                           
  1136                           ;main_M.c: 61:                 write_EEPROM(0x02,POT2);
  1137  0044  087A               	movf	_POT2,w
  1138  0045  00F4               	movwf	??_isr
  1139  0046  0874               	movf	??_isr,w
  1140  0047  00F0               	movwf	write_EEPROM@data
  1141  0048  3002               	movlw	2
  1142  0049  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1143                           
  1144                           ;main_M.c: 62:                 write_EEPROM(0x03,POT3);
  1145  004E  0879               	movf	_POT3,w
  1146  004F  00F4               	movwf	??_isr
  1147  0050  0874               	movf	??_isr,w
  1148  0051  00F0               	movwf	write_EEPROM@data
  1149  0052  3003               	movlw	3
  1150  0053  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1151                           
  1152                           ;main_M.c: 63:                 write_EEPROM(0x04,POT4);
  1153  0058  0878               	movf	_POT4,w
  1154  0059  00F4               	movwf	??_isr
  1155  005A  0874               	movf	??_isr,w
  1156  005B  00F0               	movwf	write_EEPROM@data
  1157  005C  3004               	movlw	4
  1158  005D  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1159  0062                     i1l1115:
  1160                           
  1161                           ;main_M.c: 65:             if(!PORTBbits.RB2){
  1162  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0064  1906               	btfsc	6,2	;volatile
  1165  0065  2867               	goto	u28_21
  1166  0066  2868               	goto	u28_20
  1167  0067                     u28_21:
  1168  0067  28EB               	goto	i1l1129
  1169  0068                     u28_20:
  1170  0068                     i1l1117:
  1171                           
  1172                           ;main_M.c: 66:                 write_EEPROM(0x05,POT1);
  1173  0068  087B               	movf	_POT1,w
  1174  0069  00F4               	movwf	??_isr
  1175  006A  0874               	movf	??_isr,w
  1176  006B  00F0               	movwf	write_EEPROM@data
  1177  006C  3005               	movlw	5
  1178  006D  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1179                           
  1180                           ;main_M.c: 67:                 write_EEPROM(0x06,POT2);
  1181  0072  087A               	movf	_POT2,w
  1182  0073  00F4               	movwf	??_isr
  1183  0074  0874               	movf	??_isr,w
  1184  0075  00F0               	movwf	write_EEPROM@data
  1185  0076  3006               	movlw	6
  1186  0077  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1187                           
  1188                           ;main_M.c: 68:                 write_EEPROM(0x07,POT3);
  1189  007C  0879               	movf	_POT3,w
  1190  007D  00F4               	movwf	??_isr
  1191  007E  0874               	movf	??_isr,w
  1192  007F  00F0               	movwf	write_EEPROM@data
  1193  0080  3007               	movlw	7
  1194  0081  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1195                           
  1196                           ;main_M.c: 69:                 write_EEPROM(0x08,POT4);
  1197  0086  0878               	movf	_POT4,w
  1198  0087  00F4               	movwf	??_isr
  1199  0088  0874               	movf	??_isr,w
  1200  0089  00F0               	movwf	write_EEPROM@data
  1201  008A  3008               	movlw	8
  1202  008B  120A  118A  2200  120A  118A  	fcall	_write_EEPROM
  1203  0090  28EB               	goto	i1l1129
  1204  0091                     i1l1119:
  1205  0091  037C               	decf	_modo,w
  1206  0092  1D03               	btfss	3,2
  1207  0093  2895               	goto	u29_21
  1208  0094  2896               	goto	u29_20
  1209  0095                     u29_21:
  1210  0095  28EB               	goto	i1l1129
  1211  0096                     u29_20:
  1212  0096                     i1l1121:
  1213                           
  1214                           ;main_M.c: 73:             PORTEbits.RE0 = 0;
  1215  0096  1009               	bcf	9,0	;volatile
  1216                           
  1217                           ;main_M.c: 74:             PORTEbits.RE1 = 1;
  1218  0097  1489               	bsf	9,1	;volatile
  1219                           
  1220                           ;main_M.c: 75:             PORTEbits.RE2 = 0;
  1221  0098  1109               	bcf	9,2	;volatile
  1222                           
  1223                           ;main_M.c: 77:             if(!PORTBbits.RB1){
  1224  0099  1886               	btfsc	6,1	;volatile
  1225  009A  289C               	goto	u30_21
  1226  009B  289D               	goto	u30_20
  1227  009C                     u30_21:
  1228  009C  28C1               	goto	i1l1125
  1229  009D                     u30_20:
  1230  009D                     i1l1123:
  1231                           
  1232                           ;main_M.c: 78:                 POT1 = read_EEPROM(0x01);
  1233  009D  3001               	movlw	1
  1234  009E  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1235  00A3  00F4               	movwf	??_isr
  1236  00A4  0874               	movf	??_isr,w
  1237  00A5  00FB               	movwf	_POT1
  1238                           
  1239                           ;main_M.c: 79:                 POT2 = read_EEPROM(0x02);
  1240  00A6  3002               	movlw	2
  1241  00A7  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1242  00AC  00F4               	movwf	??_isr
  1243  00AD  0874               	movf	??_isr,w
  1244  00AE  00FA               	movwf	_POT2
  1245                           
  1246                           ;main_M.c: 80:                 POT3 = read_EEPROM(0x03);
  1247  00AF  3003               	movlw	3
  1248  00B0  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1249  00B5  00F4               	movwf	??_isr
  1250  00B6  0874               	movf	??_isr,w
  1251  00B7  00F9               	movwf	_POT3
  1252                           
  1253                           ;main_M.c: 81:                 POT4 = read_EEPROM(0x04);
  1254  00B8  3004               	movlw	4
  1255  00B9  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1256  00BE  00F4               	movwf	??_isr
  1257  00BF  0874               	movf	??_isr,w
  1258  00C0  00F8               	movwf	_POT4
  1259  00C1                     i1l1125:
  1260                           
  1261                           ;main_M.c: 83:             if(!PORTBbits.RB2){
  1262  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1263  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1264  00C3  1906               	btfsc	6,2	;volatile
  1265  00C4  28C6               	goto	u31_21
  1266  00C5  28C7               	goto	u31_20
  1267  00C6                     u31_21:
  1268  00C6  28EB               	goto	i1l1129
  1269  00C7                     u31_20:
  1270  00C7                     i1l1127:
  1271                           
  1272                           ;main_M.c: 84:                 POT1 = read_EEPROM(0x05);
  1273  00C7  3005               	movlw	5
  1274  00C8  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1275  00CD  00F4               	movwf	??_isr
  1276  00CE  0874               	movf	??_isr,w
  1277  00CF  00FB               	movwf	_POT1
  1278                           
  1279                           ;main_M.c: 85:                 POT2 = read_EEPROM(0x06);
  1280  00D0  3006               	movlw	6
  1281  00D1  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1282  00D6  00F4               	movwf	??_isr
  1283  00D7  0874               	movf	??_isr,w
  1284  00D8  00FA               	movwf	_POT2
  1285                           
  1286                           ;main_M.c: 86:                 POT3 = read_EEPROM(0x07);
  1287  00D9  3007               	movlw	7
  1288  00DA  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1289  00DF  00F4               	movwf	??_isr
  1290  00E0  0874               	movf	??_isr,w
  1291  00E1  00F9               	movwf	_POT3
  1292                           
  1293                           ;main_M.c: 87:                 POT4 = read_EEPROM(0x08);
  1294  00E2  3008               	movlw	8
  1295  00E3  120A  118A  2220  120A  118A  	fcall	_read_EEPROM
  1296  00E8  00F4               	movwf	??_isr
  1297  00E9  0874               	movf	??_isr,w
  1298  00EA  00F8               	movwf	_POT4
  1299  00EB                     i1l1129:
  1300                           
  1301                           ;main_M.c: 90:         INTCONbits.RBIF = 0;
  1302  00EB  100B               	bcf	11,0	;volatile
  1303                           
  1304                           ;main_M.c: 92:     }
  1305  00EC  2931               	goto	i1l117
  1306  00ED                     i1l97:	
  1307                           ;main_M.c: 93:     else if(PIR1bits.ADIF){
  1308                           
  1309  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1310  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1311  00EF  1F0C               	btfss	12,6	;volatile
  1312  00F0  28F2               	goto	u32_21
  1313  00F1  28F3               	goto	u32_20
  1314  00F2                     u32_21:
  1315  00F2  2931               	goto	i1l117
  1316  00F3                     u32_20:
  1317  00F3                     i1l1131:
  1318                           
  1319                           ;main_M.c: 94:         if(modo==0){
  1320  00F3  087C               	movf	_modo,w
  1321  00F4  1D03               	btfss	3,2
  1322  00F5  28F7               	goto	u33_21
  1323  00F6  28F8               	goto	u33_20
  1324  00F7                     u33_21:
  1325  00F7  2930               	goto	i1l1149
  1326  00F8                     u33_20:
  1327  00F8                     i1l1133:
  1328                           
  1329                           ;main_M.c: 95:             if(ADCON0bits.CHS == 0){
  1330  00F8  0C1F               	rrf	31,w	;volatile
  1331  00F9  00F4               	movwf	??_isr
  1332  00FA  0C74               	rrf	??_isr,w
  1333  00FB  390F               	andlw	15
  1334  00FC  3A00               	xorlw	0
  1335  00FD  1D03               	skipz
  1336  00FE  2900               	goto	u34_21
  1337  00FF  2901               	goto	u34_20
  1338  0100                     u34_21:
  1339  0100  2906               	goto	i1l1137
  1340  0101                     u34_20:
  1341  0101                     i1l1135:
  1342                           
  1343                           ;main_M.c: 96:                 POT1 = ADRESH;
  1344  0101  081E               	movf	30,w	;volatile
  1345  0102  00F4               	movwf	??_isr
  1346  0103  0874               	movf	??_isr,w
  1347  0104  00FB               	movwf	_POT1
  1348                           
  1349                           ;main_M.c: 97:             }else if(ADCON0bits.CHS == 1){
  1350  0105  2930               	goto	i1l1149
  1351  0106                     i1l1137:
  1352  0106  0C1F               	rrf	31,w	;volatile
  1353  0107  00F4               	movwf	??_isr
  1354  0108  0C74               	rrf	??_isr,w
  1355  0109  390F               	andlw	15
  1356  010A  3A01               	xorlw	1
  1357  010B  1D03               	skipz
  1358  010C  290E               	goto	u35_21
  1359  010D  290F               	goto	u35_20
  1360  010E                     u35_21:
  1361  010E  2914               	goto	i1l1141
  1362  010F                     u35_20:
  1363  010F                     i1l1139:
  1364                           
  1365                           ;main_M.c: 98:                 POT2 = ADRESH;
  1366  010F  081E               	movf	30,w	;volatile
  1367  0110  00F4               	movwf	??_isr
  1368  0111  0874               	movf	??_isr,w
  1369  0112  00FA               	movwf	_POT2
  1370                           
  1371                           ;main_M.c: 99:             }else if(ADCON0bits.CHS == 2){
  1372  0113  2930               	goto	i1l1149
  1373  0114                     i1l1141:
  1374  0114  0C1F               	rrf	31,w	;volatile
  1375  0115  00F4               	movwf	??_isr
  1376  0116  0C74               	rrf	??_isr,w
  1377  0117  390F               	andlw	15
  1378  0118  3A02               	xorlw	2
  1379  0119  1D03               	skipz
  1380  011A  291C               	goto	u36_21
  1381  011B  291D               	goto	u36_20
  1382  011C                     u36_21:
  1383  011C  2922               	goto	i1l1145
  1384  011D                     u36_20:
  1385  011D                     i1l1143:
  1386                           
  1387                           ;main_M.c: 100:                 POT3 = ADRESH;
  1388  011D  081E               	movf	30,w	;volatile
  1389  011E  00F4               	movwf	??_isr
  1390  011F  0874               	movf	??_isr,w
  1391  0120  00F9               	movwf	_POT3
  1392                           
  1393                           ;main_M.c: 101:             }else if(ADCON0bits.CHS == 3){
  1394  0121  2930               	goto	i1l1149
  1395  0122                     i1l1145:
  1396  0122  0C1F               	rrf	31,w	;volatile
  1397  0123  00F4               	movwf	??_isr
  1398  0124  0C74               	rrf	??_isr,w
  1399  0125  390F               	andlw	15
  1400  0126  3A03               	xorlw	3
  1401  0127  1D03               	skipz
  1402  0128  292A               	goto	u37_21
  1403  0129  292B               	goto	u37_20
  1404  012A                     u37_21:
  1405  012A  2930               	goto	i1l111
  1406  012B                     u37_20:
  1407  012B                     i1l1147:
  1408                           
  1409                           ;main_M.c: 102:                 POT4 = ADRESH;
  1410  012B  081E               	movf	30,w	;volatile
  1411  012C  00F4               	movwf	??_isr
  1412  012D  0874               	movf	??_isr,w
  1413  012E  00F8               	movwf	_POT4
  1414  012F  2930               	goto	i1l1149
  1415  0130                     i1l111:
  1416  0130                     i1l1149:
  1417                           
  1418                           ;main_M.c: 105:         PIR1bits.ADIF = 0;
  1419  0130  130C               	bcf	12,6	;volatile
  1420  0131                     i1l117:
  1421  0131  0876               	movf	??_isr+2,w
  1422  0132  008A               	movwf	10
  1423  0133  0E75               	swapf	??_isr+1,w
  1424  0134  0083               	movwf	3
  1425  0135  0EFE               	swapf	btemp,f
  1426  0136  0E7E               	swapf	btemp,w
  1427  0137  0009               	retfie
  1428  0138                     __end_of_isr:
  1429                           
  1430                           	psect	intentry
  1431  0004                     __pintentry:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1434                           
  1435  0004                     interrupt_function:
  1436  007E                     saved_w	set	btemp
  1437  0004  00FE               	movwf	btemp
  1438  0005  0E03               	swapf	3,w
  1439  0006  00F5               	movwf	??_isr+1
  1440  0007  080A               	movf	10,w
  1441  0008  00F6               	movwf	??_isr+2
  1442  0009  120A  118A  2819   	ljmp	_isr
  1443                           
  1444                           	psect	text7
  1445  0200                     __ptext7:	
  1446 ;; *************** function _write_EEPROM *****************
  1447 ;; Defined at:
  1448 ;;		line 199 in file "main_M.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  address         1    wreg     unsigned char 
  1451 ;;  data            1    0[COMMON] unsigned char 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  address         1    3[COMMON] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         1       0       0       0       0
  1464 ;;      Locals:         1       0       0       0       0
  1465 ;;      Temps:          2       0       0       0       0
  1466 ;;      Totals:         4       0       0       0       0
  1467 ;;Total ram usage:        4 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_isr
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476  0200                     _write_EEPROM:	
  1477                           ;psect for function _write_EEPROM
  1478                           
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _write_EEPROM: [wreg]
  1482                           ;write_EEPROM@address stored from wreg
  1483  0200  00F3               	movwf	write_EEPROM@address
  1484  0201                     i1l993:
  1485                           
  1486                           ;main_M.c: 200:     EEADR = address;
  1487  0201  0873               	movf	write_EEPROM@address,w
  1488  0202  1283               	bcf	3,5	;RP0=0, select bank2
  1489  0203  1703               	bsf	3,6	;RP1=1, select bank2
  1490  0204  008D               	movwf	13	;volatile
  1491                           
  1492                           ;main_M.c: 201:     EEDAT = data;
  1493  0205  0870               	movf	write_EEPROM@data,w
  1494  0206  008C               	movwf	12	;volatile
  1495  0207                     i1l995:
  1496                           
  1497                           ;main_M.c: 202:     EECON1bits.EEPGD = 0;
  1498  0207  1683               	bsf	3,5	;RP0=1, select bank3
  1499  0208  1703               	bsf	3,6	;RP1=1, select bank3
  1500  0209  138C               	bcf	12,7	;volsfr
  1501  020A                     i1l997:
  1502                           
  1503                           ;main_M.c: 203:     EECON1bits.WREN=1;
  1504  020A  150C               	bsf	12,2	;volsfr
  1505  020B                     i1l999:
  1506                           
  1507                           ;main_M.c: 205:     INTCONbits.GIE=0;
  1508  020B  138B               	bcf	11,7	;volatile
  1509                           
  1510                           ;main_M.c: 206:     EECON2 = 0x55;
  1511  020C  3055               	movlw	85
  1512  020D  008D               	movwf	13	;volsfr
  1513                           
  1514                           ;main_M.c: 207:     EECON2=0xaa;
  1515  020E  30AA               	movlw	170
  1516  020F  008D               	movwf	13	;volsfr
  1517  0210                     i1l1001:
  1518                           
  1519                           ;main_M.c: 209:     EECON1bits.WR=1;
  1520  0210  148C               	bsf	12,1	;volsfr
  1521                           
  1522                           ;main_M.c: 210:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1523  0211  3004               	movlw	4
  1524  0212  00F2               	movwf	??_write_EEPROM+1
  1525  0213  303D               	movlw	61
  1526  0214  00F1               	movwf	??_write_EEPROM
  1527  0215                     u52_27:
  1528  0215  0BF1               	decfsz	??_write_EEPROM,f
  1529  0216  2A15               	goto	u52_27
  1530  0217  0BF2               	decfsz	??_write_EEPROM+1,f
  1531  0218  2A15               	goto	u52_27
  1532  0219  2A1A               	nop2
  1533  021A                     i1l1003:
  1534                           
  1535                           ;main_M.c: 211:     EECON1bits.WREN=0;
  1536  021A  1683               	bsf	3,5	;RP0=1, select bank3
  1537  021B  1703               	bsf	3,6	;RP1=1, select bank3
  1538  021C  110C               	bcf	12,2	;volsfr
  1539  021D                     i1l1005:
  1540                           
  1541                           ;main_M.c: 212:     INTCONbits.RBIF=0;
  1542  021D  100B               	bcf	11,0	;volatile
  1543  021E                     i1l1007:
  1544                           
  1545                           ;main_M.c: 213:     INTCONbits.GIE=1;
  1546  021E  178B               	bsf	11,7	;volatile
  1547  021F                     i1l142:
  1548  021F  0008               	return
  1549  0220                     __end_of_write_EEPROM:
  1550                           
  1551                           	psect	text8
  1552  0220                     __ptext8:	
  1553 ;; *************** function _read_EEPROM *****************
  1554 ;; Defined at:
  1555 ;;		line 193 in file "main_M.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  address         1    wreg     unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  address         1    0[COMMON] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      unsigned char 
  1562 ;; Registers used:
  1563 ;;		wreg
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0
  1572 ;;      Totals:         1       0       0       0       0
  1573 ;;Total ram usage:        1 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_isr
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582  0220                     _read_EEPROM:	
  1583                           ;psect for function _read_EEPROM
  1584                           
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _read_EEPROM: [wreg]
  1588                           ;read_EEPROM@address stored from wreg
  1589  0220  00F0               	movwf	read_EEPROM@address
  1590  0221                     i1l783:
  1591                           
  1592                           ;main_M.c: 194:     EEADR = address;
  1593  0221  0870               	movf	read_EEPROM@address,w
  1594  0222  1283               	bcf	3,5	;RP0=0, select bank2
  1595  0223  1703               	bsf	3,6	;RP1=1, select bank2
  1596  0224  008D               	movwf	13	;volatile
  1597  0225                     i1l785:
  1598                           
  1599                           ;main_M.c: 195:     EECON1bits.EEPGD = 0;
  1600  0225  1683               	bsf	3,5	;RP0=1, select bank3
  1601  0226  1703               	bsf	3,6	;RP1=1, select bank3
  1602  0227  138C               	bcf	12,7	;volsfr
  1603  0228                     i1l787:
  1604                           
  1605                           ;main_M.c: 196:     EECON1bits.RD = 1;
  1606  0228  140C               	bsf	12,0	;volsfr
  1607                           
  1608                           ;main_M.c: 197:     return EEDAT;
  1609  0229  1283               	bcf	3,5	;RP0=0, select bank2
  1610  022A  1703               	bsf	3,6	;RP1=1, select bank2
  1611  022B  080C               	movf	12,w	;volatile
  1612  022C                     i1l139:
  1613  022C  0008               	return
  1614  022D                     __end_of_read_EEPROM:
  1615  007E                     btemp	set	126	;btemp
  1616  007E                     wtemp0	set	126
  1617                           
  1618                           	psect	idloc
  1619                           
  1620                           ;Config register IDLOC0 @ 0x2000
  1621                           ;	unspecified, using default values
  1622  2000                     	org	8192
  1623  2000  3FFF               	dw	16383
  1624                           
  1625                           ;Config register IDLOC1 @ 0x2001
  1626                           ;	unspecified, using default values
  1627  2001                     	org	8193
  1628  2001  3FFF               	dw	16383
  1629                           
  1630                           ;Config register IDLOC2 @ 0x2002
  1631                           ;	unspecified, using default values
  1632  2002                     	org	8194
  1633  2002  3FFF               	dw	16383
  1634                           
  1635                           ;Config register IDLOC3 @ 0x2003
  1636                           ;	unspecified, using default values
  1637  2003                     	org	8195
  1638  2003  3FFF               	dw	16383
  1639                           
  1640                           	psect	config
  1641                           
  1642                           ;Config register CONFIG1 @ 0x2007
  1643                           ;	Oscillator Selection bits
  1644                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1645                           ;	Watchdog Timer Enable bit
  1646                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1647                           ;	Power-up Timer Enable bit
  1648                           ;	PWRTE = OFF, PWRT disabled
  1649                           ;	RE3/MCLR pin function select bit
  1650                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1651                           ;	Code Protection bit
  1652                           ;	CP = OFF, Program memory code protection is disabled
  1653                           ;	Data Code Protection bit
  1654                           ;	CPD = OFF, Data memory code protection is disabled
  1655                           ;	Brown Out Reset Selection bits
  1656                           ;	BOREN = OFF, BOR disabled
  1657                           ;	Internal External Switchover bit
  1658                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1659                           ;	Fail-Safe Clock Monitor Enabled bit
  1660                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1661                           ;	Low Voltage Programming Enable bit
  1662                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1663                           ;	In-Circuit Debugger Mode bit
  1664                           ;	DEBUG = 0x1, unprogrammed default
  1665  2007                     	org	8199
  1666  2007  20D4               	dw	8404
  1667                           
  1668                           ;Config register CONFIG2 @ 0x2008
  1669                           ;	Brown-out Reset Selection bit
  1670                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1671                           ;	Flash Program Memory Self Write Enable bits
  1672                           ;	WRT = OFF, Write protection off
  1673  2008                     	org	8200
  1674  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_write_EEPROM

Critical Paths under _main in BANK0

    _main->_setup
    _main->_write_I2C

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      31
                                              1 BANK0      2     2      0
                              _setup
                          _start_I2C
                           _stop_I2C
                          _write_I2C
 ---------------------------------------------------------------------------------
 (1) _write_I2C                                            1     1      0      31
                                              0 BANK0      1     1      0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (1) _stop_I2C                                             0     0      0       0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (1) _start_I2C                                            0     0      0       0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (2) _wait_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     667
                                              4 COMMON     3     3      0
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (4) _write_EEPROM                                         4     3      1     652
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _read_EEPROM                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _start_I2C
     _wait_I2C
   _stop_I2C
     _wait_I2C
   _write_I2C
     _wait_I2C

 _isr (ROOT)
   _read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed May 25 21:17:57 2022

            _SSPSTATbits 0094                      l151 0249                      l127 0179  
                    l136 01FF                      l145 024A                      l170 0237  
                    l147 0250                      l148 0251                      l157 0240  
                    u430 0250                      u431 024F                      u440 0143  
                    u441 0142                      u450 014C                      u507 01A3  
                    u451 014B                      u460 015A                      u517 01DF  
                    u461 0159                      u470 0168                      u471 0167  
                    u480 0176                      u481 0175                      u497 017D  
                    _isr 0019                     l1011 01AF                     l1021 01BC  
                   l1013 01B0                     l1031 01C8                     l1023 01BD  
                   l1015 01B6                     l1041 01D5                     l1033 01CB  
                   l1025 01C1                     l1017 01B7                     l1009 01AB  
                   l1051 01E6                     l1043 01D8                     l1035 01CD  
                   l1027 01C4                     l1019 01B9                     l1211 0241  
                   l1061 01EE                     l1053 01E7                     l1045 01DB  
                   l1037 01D0                     l1029 01C7                     l1213 0244  
                   l1071 01F8                     l1063 01EF                     l1055 01E8  
                   l1047 01E2                     l1039 01D1                     l1223 0238  
                   l1215 0230                     l1231 0143                     l1073 01F9  
                   l1065 01F5                     l1057 01EA                     l1049 01E5  
                   l1209 024A                     l1225 023B                     l1217 0232  
                   l1241 0168                     l1233 014C                     l1075 01FA  
                   l1067 01F6                     l1059 01EC                     l1219 0237  
                   l1243 016D                     l1235 0151                     l1251 0183  
                   l1227 0138                     l1077 01FD                     l1069 01F7  
                   l1261 019D                     l1253 0187                     l1245 0176  
                   l1237 015A                     l1229 013D                     l1079 01FE  
                   l1255 018C                     l1239 015F                     l1247 0179  
                   l1257 0192                     l1249 0180                     l1259 0198  
                   ?_isr 0070                     i1l97 00ED                     _POT1 007B  
                   _POT2 007A                     _POT3 0079                     _POT4 0078  
                   _data 0077                     _main 0138                     _modo 007C  
                   btemp 007E                     start 000C             ?_read_EEPROM 0070  
                  ??_isr 0074                    ?_main 0070                    _EEADR 010D  
                  _EEDAT 010C                    _ANSEL 0188                    i1l111 0130  
                  i1l117 0131                    i1l142 021F                    i1l139 022C  
                  i1l783 0221                    i1l785 0225                    i1l787 0228  
                  i1l993 0201                    i1l995 0207                    i1l997 020A  
                  i1l999 020B                    u30_20 009D                    u30_21 009C  
                  u31_20 00C7                    u23_20 001D                    u31_21 00C6  
                  u23_21 001C                    u32_20 00F3                    u24_20 0023  
                  u32_21 00F2                    u24_21 0022                    u33_20 00F8  
                  u25_20 002D                    u33_21 00F7                    u25_21 002C  
                  u34_20 0101                    u26_20 0033                    u34_21 0100  
                  u26_21 0032                    u35_20 010F                    u27_20 003A  
                  u35_21 010E                    u27_21 0039                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 011D                    u28_20 0068                    u36_21 011C  
                  u28_21 0067                    u52_27 0215                    u37_20 012B  
                  u29_20 0096                    u37_21 012A                    u29_21 0095  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 01AB                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01AB                   ??_main 0021             _write_EEPROM 0200  
                 _ADRESH 001E                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 0210                   i1l1003 021A  
                 i1l1005 021D                   i1l1101 001D                   i1l1007 021E  
                 i1l1111 0033                   i1l1103 0023                   i1l1121 0096  
                 i1l1113 003A                   i1l1105 0027                   i1l1131 00F3  
                 i1l1123 009D                   i1l1115 0062                   i1l1107 002D  
                 i1l1141 0114                   i1l1133 00F8                   i1l1125 00C1  
                 i1l1117 0068                   i1l1109 002E                   i1l1143 011D  
                 i1l1135 0101                   i1l1127 00C7                   i1l1119 0091  
                 i1l1145 0122                   i1l1137 0106                   i1l1129 00EB  
                 i1l1147 012B                   i1l1139 010F                   i1l1149 0130  
                 i1l1099 0019                   _SSPADD 0093                   _SSPBUF 0013  
       __end_of_wait_I2C 0252                   saved_w 007E         __end_of_stop_I2C 0241  
__end_of__initialization 0015           __pcstackCOMMON 0070            __end_of_setup 0200  
     read_EEPROM@address 0070           _OPTION_REGbits 0081         write_EEPROM@data 0070  
                ??_setup 0020               __pmaintext 0138               __pintentry 0004  
                _ACKSTAT 048E                ?_wait_I2C 0070                ?_stop_I2C 0070  
                __ptext1 022D                  __ptext2 0238                  __ptext3 0241  
                __ptext4 024A                  __ptext5 01AB                  __ptext6 0019  
                __ptext7 0200                  __ptext8 0220     end_of_initialization 0015  
    write_EEPROM@address 0073               ??_wait_I2C 0020        __end_of_start_I2C 024A  
             ??_stop_I2C 0020                _PORTBbits 0006                _PORTEbits 0009  
      __end_of_write_I2C 0238                _TRISBbits 0086      start_initialization 000F  
            __end_of_isr 0138            ??_read_EEPROM 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020      __end_of_read_EEPROM 022D  
          ?_write_EEPROM 0070        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C                _start_I2C 0241  
             _ADCON0bits 001F               _ADCON1bits 009F           ??_write_EEPROM 0071  
               _WPUBbits 0095                _write_I2C 022D               _EECON1bits 018C  
            _read_EEPROM 0220               ?_start_I2C 0070               ?_write_I2C 0070  
               _wait_I2C 024A                 _stop_I2C 0238               _INTCONbits 000B  
          write_I2C@data 0020                 intlevel1 0000     __end_of_write_EEPROM 0220  
             _OSCCONbits 008F              ??_start_I2C 0020              ??_write_I2C 0020  
            _SSPCON2bits 0091               _SSPCONbits 0014  



Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu May 26 10:33:09 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0013                     _SSPBUF	set	19
   214  0014                     _SSPCONbits	set	20
   215  0009                     _PORTE	set	9
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0005                     _PORTA	set	5
   219  001E                     _ADRESH	set	30
   220  001F                     _ADCON0bits	set	31
   221  000C                     _PIR1bits	set	12
   222  0009                     _PORTEbits	set	9
   223  0006                     _PORTBbits	set	6
   224  000B                     _INTCONbits	set	11
   225  0091                     _SSPCON2bits	set	145
   226  008C                     _PIE1bits	set	140
   227  0094                     _SSPSTATbits	set	148
   228  0093                     _SSPADD	set	147
   229  0096                     _IOCBbits	set	150
   230  0095                     _WPUBbits	set	149
   231  0081                     _OPTION_REGbits	set	129
   232  0086                     _TRISBbits	set	134
   233  009F                     _ADCON1bits	set	159
   234  0089                     _TRISE	set	137
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0085                     _TRISA	set	133
   238  008F                     _OSCCONbits	set	143
   239  048E                     _ACKSTAT	set	1166
   240  010C                     _EEDAT	set	268
   241  010D                     _EEADR	set	269
   242  018D                     _EECON2	set	397
   243  018C                     _EECON1bits	set	396
   244  0189                     _ANSELH	set	393
   245  0188                     _ANSEL	set	392
   246                           
   247                           	psect	cinit
   248  000F                     start_initialization:	
   249                           ; #config settings
   250                           
   251  000F                     __initialization:
   252                           
   253                           ; Clear objects allocated to COMMON
   254  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   255  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   256  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   257  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   258  0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   259  0014  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   260  0015                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  0015                     __end_of__initialization:
   264  0015  0183               	clrf	3
   265  0016  120A  118A  2944   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268  0078                     __pbssCOMMON:
   269  0078                     _data:
   270  0078                     	ds	1
   271  0079                     _POT4:
   272  0079                     	ds	1
   273  007A                     _POT3:
   274  007A                     	ds	1
   275  007B                     _POT2:
   276  007B                     	ds	1
   277  007C                     _POT1:
   278  007C                     	ds	1
   279  007D                     _modo:
   280  007D                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_write_I2C:
   285  0070                     ?_write_EEPROM:	
   286                           ; 1 bit 
   287                           
   288  0070                     ?_read_EEPROM:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ??_read_EEPROM:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_setup:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_start_I2C:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_stop_I2C:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_isr:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_wait_I2C:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     read_EEPROM@address:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     write_EEPROM@data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318                           
   319                           ; 1 bytes @ 0x0
   320  0070                     	ds	1
   321  0071                     ??_write_EEPROM:
   322                           
   323                           ; 1 bytes @ 0x1
   324  0071                     	ds	2
   325  0073                     write_EEPROM@address:
   326                           
   327                           ; 1 bytes @ 0x3
   328  0073                     	ds	1
   329  0074                     ??_isr:
   330                           
   331                           ; 1 bytes @ 0x4
   332  0074                     	ds	4
   333                           
   334                           	psect	cstackBANK0
   335  0020                     __pcstackBANK0:
   336  0020                     ??_setup:
   337  0020                     ??_start_I2C:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0020                     ??_write_I2C:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0020                     ??_stop_I2C:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0020                     ??_wait_I2C:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0020                     write_I2C@data:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0020                     	ds	1
   355  0021                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x1
   358  0021                     	ds	2
   359                           
   360                           	psect	maintext
   361  0144                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 110 in file "main_M.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          0       2       0       0       0
   384 ;;      Totals:         0       2       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels required when called: 4
   387 ;; This function calls:
   388 ;;		_setup
   389 ;;		_start_I2C
   390 ;;		_stop_I2C
   391 ;;		_write_I2C
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397  0144                     _main:	
   398                           ;psect for function _main
   399                           
   400  0144                     l1165:	
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403                           
   404                           
   405                           ;main_M.c: 111:     setup();
   406  0144  120A  118A  21E2  120A  118A  	fcall	_setup
   407  0149                     l1167:
   408                           
   409                           ;main_M.c: 113:         if(ADCON0bits.GO == 0){
   410  0149  1283               	bcf	3,5	;RP0=0, select bank0
   411  014A  1303               	bcf	3,6	;RP1=0, select bank0
   412  014B  189F               	btfsc	31,1	;volatile
   413  014C  294E               	goto	u381
   414  014D  294F               	goto	u380
   415  014E                     u381:
   416  014E  298F               	goto	l1189
   417  014F                     u380:
   418  014F                     l1169:
   419                           
   420                           ;main_M.c: 114:             if(ADCON0bits.CHS == 0b0000)
   421  014F  0C1F               	rrf	31,w	;volatile
   422  0150  00A1               	movwf	??_main
   423  0151  0C21               	rrf	??_main,w
   424  0152  390F               	andlw	15
   425  0153  3A00               	xorlw	0
   426  0154  1D03               	skipz
   427  0155  2957               	goto	u391
   428  0156  2958               	goto	u390
   429  0157                     u391:
   430  0157  295D               	goto	l1173
   431  0158                     u390:
   432  0158                     l1171:
   433                           
   434                           ;main_M.c: 115:                 ADCON0bits.CHS = 0b0001;
   435  0158  081F               	movf	31,w	;volatile
   436  0159  39C3               	andlw	-61
   437  015A  3804               	iorlw	4
   438  015B  009F               	movwf	31	;volatile
   439  015C  2985               	goto	l1185
   440  015D                     l1173:
   441  015D  0C1F               	rrf	31,w	;volatile
   442  015E  00A1               	movwf	??_main
   443  015F  0C21               	rrf	??_main,w
   444  0160  390F               	andlw	15
   445  0161  3A01               	xorlw	1
   446  0162  1D03               	skipz
   447  0163  2965               	goto	u401
   448  0164  2966               	goto	u400
   449  0165                     u401:
   450  0165  296B               	goto	l1177
   451  0166                     u400:
   452  0166                     l1175:
   453                           
   454                           ;main_M.c: 117:                 ADCON0bits.CHS = 0b0010;
   455  0166  081F               	movf	31,w	;volatile
   456  0167  39C3               	andlw	-61
   457  0168  3808               	iorlw	8
   458  0169  009F               	movwf	31	;volatile
   459  016A  2985               	goto	l1185
   460  016B                     l1177:
   461  016B  0C1F               	rrf	31,w	;volatile
   462  016C  00A1               	movwf	??_main
   463  016D  0C21               	rrf	??_main,w
   464  016E  390F               	andlw	15
   465  016F  3A02               	xorlw	2
   466  0170  1D03               	skipz
   467  0171  2973               	goto	u411
   468  0172  2974               	goto	u410
   469  0173                     u411:
   470  0173  2979               	goto	l1181
   471  0174                     u410:
   472  0174                     l1179:
   473                           
   474                           ;main_M.c: 119:                 ADCON0bits.CHS = 0b0011;
   475  0174  081F               	movf	31,w	;volatile
   476  0175  39C3               	andlw	-61
   477  0176  380C               	iorlw	12
   478  0177  009F               	movwf	31	;volatile
   479  0178  2985               	goto	l1185
   480  0179                     l1181:
   481  0179  0C1F               	rrf	31,w	;volatile
   482  017A  00A1               	movwf	??_main
   483  017B  0C21               	rrf	??_main,w
   484  017C  390F               	andlw	15
   485  017D  3A03               	xorlw	3
   486  017E  1D03               	skipz
   487  017F  2981               	goto	u421
   488  0180  2982               	goto	u420
   489  0181                     u421:
   490  0181  2985               	goto	l127
   491  0182                     u420:
   492  0182                     l1183:
   493                           
   494                           ;main_M.c: 121:                 ADCON0bits.CHS = 0b0000;
   495  0182  30C3               	movlw	-61
   496  0183  059F               	andwf	31,f	;volatile
   497  0184  2985               	goto	l1185
   498  0185                     l127:
   499  0185                     l1185:
   500                           
   501                           ;main_M.c: 122:             _delay((unsigned long)((40)*(1000000/4000000.0)));
   502  0185  3002               	movlw	2
   503  0186  1283               	bcf	3,5	;RP0=0, select bank0
   504  0187  1303               	bcf	3,6	;RP1=0, select bank0
   505  0188  00A1               	movwf	??_main
   506  0189                     u437:
   507  0189  0BA1               	decfsz	??_main,f
   508  018A  2989               	goto	u437
   509  018B  0000               	nop
   510  018C                     l1187:
   511                           
   512                           ;main_M.c: 123:             ADCON0bits.GO = 1;
   513  018C  1283               	bcf	3,5	;RP0=0, select bank0
   514  018D  1303               	bcf	3,6	;RP1=0, select bank0
   515  018E  149F               	bsf	31,1	;volatile
   516  018F                     l1189:
   517                           
   518                           ;main_M.c: 126:         data = (uint8_t)((0x08<<1)+0b0);
   519  018F  3010               	movlw	16
   520  0190  00A1               	movwf	??_main
   521  0191  0821               	movf	??_main,w
   522  0192  00F8               	movwf	_data
   523  0193                     l1191:
   524                           
   525                           ;main_M.c: 127:         start_I2C();
   526  0193  120A  118A  2278  120A  118A  	fcall	_start_I2C
   527  0198                     l1193:
   528                           
   529                           ;main_M.c: 128:         write_I2C(data);
   530  0198  3010               	movlw	16
   531  0199  120A  118A  2264  120A  118A  	fcall	_write_I2C
   532  019E                     l1195:
   533                           
   534                           ;main_M.c: 129:         write_I2C((uint8_t)((POT1<<1)+0b0));
   535  019E  087C               	movf	_POT1,w
   536  019F  1283               	bcf	3,5	;RP0=0, select bank0
   537  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   538  01A1  00A1               	movwf	??_main
   539  01A2  0721               	addwf	??_main,w
   540  01A3  120A  118A  2264  120A  118A  	fcall	_write_I2C
   541  01A8                     l1197:
   542                           
   543                           ;main_M.c: 130:         stop_I2C();
   544  01A8  120A  118A  226F  120A  118A  	fcall	_stop_I2C
   545  01AD                     l1199:
   546                           
   547                           ;main_M.c: 131:         _delay((unsigned long)((10)*(1000000/4000.0)));
   548  01AD  3004               	movlw	4
   549  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   550  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   551  01B0  00A2               	movwf	??_main+1
   552  01B1  303D               	movlw	61
   553  01B2  00A1               	movwf	??_main
   554  01B3                     u447:
   555  01B3  0BA1               	decfsz	??_main,f
   556  01B4  29B3               	goto	u447
   557  01B5  0BA2               	decfsz	??_main+1,f
   558  01B6  29B3               	goto	u447
   559  01B7                     l1201:
   560                           
   561                           ;main_M.c: 133:         data = (uint8_t)((0x08<<1)+0b0);
   562  01B7  3010               	movlw	16
   563  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   564  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   565  01BA  00A1               	movwf	??_main
   566  01BB  0821               	movf	??_main,w
   567  01BC  00F8               	movwf	_data
   568  01BD                     l1203:
   569                           
   570                           ;main_M.c: 134:         start_I2C();
   571  01BD  120A  118A  2278  120A  118A  	fcall	_start_I2C
   572  01C2                     l1205:
   573                           
   574                           ;main_M.c: 135:         write_I2C(data);
   575  01C2  3010               	movlw	16
   576  01C3  120A  118A  2264  120A  118A  	fcall	_write_I2C
   577  01C8                     l1207:
   578                           
   579                           ;main_M.c: 136:         write_I2C((uint8_t)((POT2<<1)+0b1));
   580  01C8  1403               	setc
   581  01C9  0D7B               	rlf	_POT2,w
   582  01CA  120A  118A  2264  120A  118A  	fcall	_write_I2C
   583  01CF                     l1209:
   584                           
   585                           ;main_M.c: 137:         stop_I2C();
   586  01CF  120A  118A  226F  120A  118A  	fcall	_stop_I2C
   587  01D4                     l1211:
   588                           
   589                           ;main_M.c: 138:         _delay((unsigned long)((10)*(1000000/4000.0)));
   590  01D4  3004               	movlw	4
   591  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   592  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   593  01D7  00A2               	movwf	??_main+1
   594  01D8  303D               	movlw	61
   595  01D9  00A1               	movwf	??_main
   596  01DA                     u457:
   597  01DA  0BA1               	decfsz	??_main,f
   598  01DB  29DA               	goto	u457
   599  01DC  0BA2               	decfsz	??_main+1,f
   600  01DD  29DA               	goto	u457
   601  01DE  2949               	goto	l1167
   602  01DF  120A  118A  280C   	ljmp	start
   603  01E2                     __end_of_main:
   604                           
   605                           	psect	text1
   606  0264                     __ptext1:	
   607 ;; *************** function _write_I2C *****************
   608 ;; Defined at:
   609 ;;		line 250 in file "main_M.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  data            1    wreg     unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  data            1    0[BANK0 ] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       1       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       1       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 3
   630 ;; This function calls:
   631 ;;		_wait_I2C
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637  0264                     _write_I2C:	
   638                           ;psect for function _write_I2C
   639                           
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _write_I2C: [wreg+status,2+status,0+pclath+cstack]
   643                           ;write_I2C@data stored from wreg
   644  0264  1283               	bcf	3,5	;RP0=0, select bank0
   645  0265  1303               	bcf	3,6	;RP1=0, select bank0
   646  0266  00A0               	movwf	write_I2C@data
   647  0267                     l1099:
   648                           
   649                           ;main_M.c: 251:     SSPBUF = data;
   650  0267  0820               	movf	write_I2C@data,w
   651  0268  0093               	movwf	19	;volatile
   652  0269                     l1101:
   653                           
   654                           ;main_M.c: 252:     wait_I2C();
   655  0269  120A  118A  2281  120A  118A  	fcall	_wait_I2C
   656  026E                     l1103:
   657  026E                     l170:	
   658                           ;main_M.c: 253:     return ACKSTAT;
   659                           
   660  026E  0008               	return
   661  026F                     __end_of_write_I2C:
   662                           
   663                           	psect	text2
   664  026F                     __ptext2:	
   665 ;; *************** function _stop_I2C *****************
   666 ;; Defined at:
   667 ;;		line 236 in file "main_M.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 3
   688 ;; This function calls:
   689 ;;		_wait_I2C
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695  026F                     _stop_I2C:	
   696                           ;psect for function _stop_I2C
   697                           
   698  026F                     l1107:	
   699                           ;incstack = 0
   700                           ; Regs used in _stop_I2C: [status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;main_M.c: 237:     SSPCON2bits.PEN = 1;
   704  026F  1683               	bsf	3,5	;RP0=1, select bank1
   705  0270  1303               	bcf	3,6	;RP1=0, select bank1
   706  0271  1511               	bsf	17,2	;volatile
   707  0272                     l1109:
   708                           
   709                           ;main_M.c: 238:     wait_I2C();
   710  0272  120A  118A  2281  120A  118A  	fcall	_wait_I2C
   711  0277                     l157:
   712  0277  0008               	return
   713  0278                     __end_of_stop_I2C:
   714                           
   715                           	psect	text3
   716  0278                     __ptext3:	
   717 ;; *************** function _start_I2C *****************
   718 ;; Defined at:
   719 ;;		line 228 in file "main_M.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 3
   740 ;; This function calls:
   741 ;;		_wait_I2C
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747  0278                     _start_I2C:	
   748                           ;psect for function _start_I2C
   749                           
   750  0278                     l1095:	
   751                           ;incstack = 0
   752                           ; Regs used in _start_I2C: [status,2+status,0+pclath+cstack]
   753                           
   754                           
   755                           ;main_M.c: 229:     SSPCON2bits.SEN = 1;
   756  0278  1683               	bsf	3,5	;RP0=1, select bank1
   757  0279  1303               	bcf	3,6	;RP1=0, select bank1
   758  027A  1411               	bsf	17,0	;volatile
   759  027B                     l1097:
   760                           
   761                           ;main_M.c: 230:     wait_I2C();
   762  027B  120A  118A  2281  120A  118A  	fcall	_wait_I2C
   763  0280                     l151:
   764  0280  0008               	return
   765  0281                     __end_of_start_I2C:
   766                           
   767                           	psect	text4
   768  0281                     __ptext4:	
   769 ;; *************** function _wait_I2C *****************
   770 ;; Defined at:
   771 ;;		line 224 in file "main_M.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		None
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 2
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_start_I2C
   796 ;;		_stop_I2C
   797 ;;		_write_I2C
   798 ;;		_restart_I2C
   799 ;;		_send_ACK
   800 ;;		_send_NACK
   801 ;;		_read_I2C
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805  0281                     _wait_I2C:	
   806                           ;psect for function _wait_I2C
   807                           
   808  0281                     l1003:	
   809                           ;incstack = 0
   810                           ; Regs used in _wait_I2C: []
   811                           
   812  0281                     l145:	
   813                           ;main_M.c: 225:     while(!PIR1bits.SSPIF);
   814                           
   815  0281  1283               	bcf	3,5	;RP0=0, select bank0
   816  0282  1303               	bcf	3,6	;RP1=0, select bank0
   817  0283  1D8C               	btfss	12,3	;volatile
   818  0284  2A86               	goto	u221
   819  0285  2A87               	goto	u220
   820  0286                     u221:
   821  0286  2A81               	goto	l145
   822  0287                     u220:
   823  0287                     l147:
   824                           
   825                           ;main_M.c: 226:     PIR1bits.SSPIF = 0;
   826  0287  118C               	bcf	12,3	;volatile
   827  0288                     l148:
   828  0288  0008               	return
   829  0289                     __end_of_wait_I2C:
   830                           
   831                           	psect	text5
   832  01E2                     __ptext5:	
   833 ;; *************** function _setup *****************
   834 ;; Defined at:
   835 ;;		line 145 in file "main_M.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       1       0       0       0
   852 ;;      Totals:         0       1       0       0       0
   853 ;;Total ram usage:        1 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 2
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863  01E2                     _setup:	
   864                           ;psect for function _setup
   865                           
   866  01E2                     l1021:	
   867                           ;incstack = 0
   868                           ; Regs used in _setup: [wreg+status,2+status,0]
   869                           
   870                           
   871                           ;main_M.c: 147:     ANSEL =0b00001111;
   872  01E2  300F               	movlw	15
   873  01E3  1683               	bsf	3,5	;RP0=1, select bank3
   874  01E4  1703               	bsf	3,6	;RP1=1, select bank3
   875  01E5  0088               	movwf	8	;volatile
   876  01E6                     l1023:
   877                           
   878                           ;main_M.c: 148:     ANSELH = 0x00;
   879  01E6  0189               	clrf	9	;volatile
   880  01E7                     l1025:
   881                           
   882                           ;main_M.c: 150:     OSCCONbits.IRCF = 0b0100;
   883  01E7  1683               	bsf	3,5	;RP0=1, select bank1
   884  01E8  1303               	bcf	3,6	;RP1=0, select bank1
   885  01E9  080F               	movf	15,w	;volatile
   886  01EA  398F               	andlw	-113
   887  01EB  3840               	iorlw	64
   888  01EC  008F               	movwf	15	;volatile
   889  01ED                     l1027:
   890                           
   891                           ;main_M.c: 151:     OSCCONbits.SCS = 1;
   892  01ED  140F               	bsf	15,0	;volatile
   893  01EE                     l1029:
   894                           
   895                           ;main_M.c: 153:     TRISA = 0b00001111;
   896  01EE  300F               	movlw	15
   897  01EF  0085               	movwf	5	;volatile
   898  01F0                     l1031:
   899                           
   900                           ;main_M.c: 154:     PORTA = 0x00;
   901  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   902  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   903  01F2  0185               	clrf	5	;volatile
   904  01F3                     l1033:
   905                           
   906                           ;main_M.c: 156:     PORTC = 0x00;
   907  01F3  0187               	clrf	7	;volatile
   908  01F4                     l1035:
   909                           
   910                           ;main_M.c: 157:     TRISC = 0b00011000;
   911  01F4  3018               	movlw	24
   912  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   913  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   914  01F7  0087               	movwf	7	;volatile
   915  01F8                     l1037:
   916                           
   917                           ;main_M.c: 160:     PORTD = 0x00;
   918  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   919  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   920  01FA  0188               	clrf	8	;volatile
   921  01FB                     l1039:
   922                           
   923                           ;main_M.c: 161:     TRISD = 0x00;
   924  01FB  1683               	bsf	3,5	;RP0=1, select bank1
   925  01FC  1303               	bcf	3,6	;RP1=0, select bank1
   926  01FD  0188               	clrf	8	;volatile
   927  01FE                     l1041:
   928                           
   929                           ;main_M.c: 162:     TRISE = 0x00;
   930  01FE  0189               	clrf	9	;volatile
   931  01FF                     l1043:
   932                           
   933                           ;main_M.c: 163:     PORTE = 0x00;
   934  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   935  0200  1303               	bcf	3,6	;RP1=0, select bank0
   936  0201  0189               	clrf	9	;volatile
   937  0202                     l1045:
   938                           
   939                           ;main_M.c: 166:     ADCON0bits.ADCS = 0b00;
   940  0202  303F               	movlw	-193
   941  0203  059F               	andwf	31,f	;volatile
   942  0204                     l1047:
   943                           
   944                           ;main_M.c: 168:     ADCON1bits.VCFG0 = 0;
   945  0204  1683               	bsf	3,5	;RP0=1, select bank1
   946  0205  1303               	bcf	3,6	;RP1=0, select bank1
   947  0206  121F               	bcf	31,4	;volatile
   948  0207                     l1049:
   949                           
   950                           ;main_M.c: 169:     ADCON1bits.VCFG1 = 0;
   951  0207  129F               	bcf	31,5	;volatile
   952  0208                     l1051:
   953                           
   954                           ;main_M.c: 171:     ADCON0bits.CHS = 0b0000;
   955  0208  30C3               	movlw	-61
   956  0209  1283               	bcf	3,5	;RP0=0, select bank0
   957  020A  1303               	bcf	3,6	;RP1=0, select bank0
   958  020B  059F               	andwf	31,f	;volatile
   959  020C                     l1053:
   960                           
   961                           ;main_M.c: 172:     ADCON1bits.ADFM = 0;
   962  020C  1683               	bsf	3,5	;RP0=1, select bank1
   963  020D  1303               	bcf	3,6	;RP1=0, select bank1
   964  020E  139F               	bcf	31,7	;volatile
   965  020F                     l1055:
   966                           
   967                           ;main_M.c: 173:     ADCON0bits.ADON = 1;
   968  020F  1283               	bcf	3,5	;RP0=0, select bank0
   969  0210  1303               	bcf	3,6	;RP1=0, select bank0
   970  0211  141F               	bsf	31,0	;volatile
   971  0212                     l1057:
   972                           
   973                           ;main_M.c: 174:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   974  0212  3002               	movlw	2
   975  0213  1283               	bcf	3,5	;RP0=0, select bank0
   976  0214  1303               	bcf	3,6	;RP1=0, select bank0
   977  0215  00A0               	movwf	??_setup
   978  0216                     u467:
   979  0216  0BA0               	decfsz	??_setup,f
   980  0217  2A16               	goto	u467
   981  0218  0000               	nop
   982  0219                     l1059:
   983                           
   984                           ;main_M.c: 177:     TRISBbits.TRISB0 = 1;
   985  0219  1683               	bsf	3,5	;RP0=1, select bank1
   986  021A  1303               	bcf	3,6	;RP1=0, select bank1
   987  021B  1406               	bsf	6,0	;volatile
   988  021C                     l1061:
   989                           
   990                           ;main_M.c: 178:     TRISBbits.TRISB1 = 1;
   991  021C  1486               	bsf	6,1	;volatile
   992  021D                     l1063:
   993                           
   994                           ;main_M.c: 179:     TRISBbits.TRISB2 = 1;
   995  021D  1506               	bsf	6,2	;volatile
   996  021E                     l1065:
   997                           
   998                           ;main_M.c: 180:     OPTION_REGbits.nRBPU = 0;
   999  021E  1381               	bcf	1,7	;volatile
  1000  021F                     l1067:
  1001                           
  1002                           ;main_M.c: 181:     WPUBbits.WPUB = 0x07;
  1003  021F  3007               	movlw	7
  1004  0220  0095               	movwf	21	;volatile
  1005  0221                     l1069:
  1006                           
  1007                           ;main_M.c: 182:     IOCBbits.IOCB = 0x07;
  1008  0221  3007               	movlw	7
  1009  0222  0096               	movwf	22	;volatile
  1010  0223                     l1071:
  1011                           
  1012                           ;main_M.c: 185:     SSPADD = ((1000000)/(4*100000)) - 1;
  1013  0223  3001               	movlw	1
  1014  0224  0093               	movwf	19	;volatile
  1015  0225                     l1073:
  1016                           
  1017                           ;main_M.c: 186:     SSPSTATbits.SMP = 1;
  1018  0225  1794               	bsf	20,7	;volatile
  1019  0226                     l1075:
  1020                           
  1021                           ;main_M.c: 187:     SSPCONbits.SSPM = 0b1000;
  1022  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0228  0814               	movf	20,w	;volatile
  1025  0229  39F0               	andlw	-16
  1026  022A  3808               	iorlw	8
  1027  022B  0094               	movwf	20	;volatile
  1028  022C                     l1077:
  1029                           
  1030                           ;main_M.c: 188:     SSPCONbits.SSPEN = 1;
  1031  022C  1694               	bsf	20,5	;volatile
  1032  022D                     l1079:
  1033                           
  1034                           ;main_M.c: 189:     PIR1bits.SSPIF = 0;
  1035  022D  118C               	bcf	12,3	;volatile
  1036  022E                     l1081:
  1037                           
  1038                           ;main_M.c: 192:     INTCONbits.RBIE = 1;
  1039  022E  158B               	bsf	11,3	;volatile
  1040  022F                     l1083:
  1041                           
  1042                           ;main_M.c: 193:     INTCONbits.RBIF = 0;
  1043  022F  100B               	bcf	11,0	;volatile
  1044  0230                     l1085:
  1045                           
  1046                           ;main_M.c: 194:     PIR1bits.ADIF = 0;
  1047  0230  130C               	bcf	12,6	;volatile
  1048  0231                     l1087:
  1049                           
  1050                           ;main_M.c: 195:     PIE1bits.ADIE = 1;
  1051  0231  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0232  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0233  170C               	bsf	12,6	;volatile
  1054  0234                     l1089:
  1055                           
  1056                           ;main_M.c: 196:     INTCONbits.PEIE = 1;
  1057  0234  170B               	bsf	11,6	;volatile
  1058  0235                     l1091:
  1059                           
  1060                           ;main_M.c: 197:     INTCONbits.GIE = 1;
  1061  0235  178B               	bsf	11,7	;volatile
  1062  0236                     l136:
  1063  0236  0008               	return
  1064  0237                     __end_of_setup:
  1065                           
  1066                           	psect	text6
  1067  0019                     __ptext6:	
  1068 ;; *************** function _isr *****************
  1069 ;; Defined at:
  1070 ;;		line 47 in file "main_M.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          4       0       0       0       0
  1087 ;;      Totals:         4       0       0       0       0
  1088 ;;Total ram usage:        4 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 1
  1091 ;; This function calls:
  1092 ;;		_read_EEPROM
  1093 ;;		_write_EEPROM
  1094 ;; This function is called by:
  1095 ;;		Interrupt level 1
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099  0019                     _isr:	
  1100                           ;psect for function _isr
  1101                           
  1102  0019                     i1l1111:
  1103                           
  1104                           ;main_M.c: 48:     if(INTCONbits.RBIF){
  1105  0019  1C0B               	btfss	11,0	;volatile
  1106  001A  281C               	goto	u23_21
  1107  001B  281D               	goto	u23_20
  1108  001C                     u23_21:
  1109  001C  28ED               	goto	i1l97
  1110  001D                     u23_20:
  1111  001D                     i1l1113:
  1112                           
  1113                           ;main_M.c: 49:         if (!PORTBbits.RB0)
  1114  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1115  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1116  001F  1806               	btfsc	6,0	;volatile
  1117  0020  2822               	goto	u24_21
  1118  0021  2823               	goto	u24_20
  1119  0022                     u24_21:
  1120  0022  2827               	goto	i1l1117
  1121  0023                     u24_20:
  1122  0023                     i1l1115:
  1123                           
  1124                           ;main_M.c: 50:             ++modo;
  1125  0023  3001               	movlw	1
  1126  0024  00F4               	movwf	??_isr
  1127  0025  0874               	movf	??_isr,w
  1128  0026  07FD               	addwf	_modo,f
  1129  0027                     i1l1117:
  1130                           
  1131                           ;main_M.c: 51:         if(modo>=2)
  1132  0027  3002               	movlw	2
  1133  0028  027D               	subwf	_modo,w
  1134  0029  1C03               	skipc
  1135  002A  282C               	goto	u25_21
  1136  002B  282D               	goto	u25_20
  1137  002C                     u25_21:
  1138  002C  282E               	goto	i1l1121
  1139  002D                     u25_20:
  1140  002D                     i1l1119:
  1141                           
  1142                           ;main_M.c: 52:             modo=0;
  1143  002D  01FD               	clrf	_modo
  1144  002E                     i1l1121:
  1145                           
  1146                           ;main_M.c: 54:         if(modo==0){
  1147  002E  087D               	movf	_modo,w
  1148  002F  1D03               	btfss	3,2
  1149  0030  2832               	goto	u26_21
  1150  0031  2833               	goto	u26_20
  1151  0032                     u26_21:
  1152  0032  2891               	goto	i1l1131
  1153  0033                     u26_20:
  1154  0033                     i1l1123:
  1155                           
  1156                           ;main_M.c: 55:             PORTEbits.RE0 = 1;
  1157  0033  1409               	bsf	9,0	;volatile
  1158                           
  1159                           ;main_M.c: 56:             PORTEbits.RE1 = 0;
  1160  0034  1089               	bcf	9,1	;volatile
  1161                           
  1162                           ;main_M.c: 57:             PORTEbits.RE2 = 0;
  1163  0035  1109               	bcf	9,2	;volatile
  1164                           
  1165                           ;main_M.c: 59:             if(!PORTBbits.RB1){
  1166  0036  1886               	btfsc	6,1	;volatile
  1167  0037  2839               	goto	u27_21
  1168  0038  283A               	goto	u27_20
  1169  0039                     u27_21:
  1170  0039  2862               	goto	i1l1127
  1171  003A                     u27_20:
  1172  003A                     i1l1125:
  1173                           
  1174                           ;main_M.c: 60:                 write_EEPROM(0x01,POT1);
  1175  003A  087C               	movf	_POT1,w
  1176  003B  00F4               	movwf	??_isr
  1177  003C  0874               	movf	??_isr,w
  1178  003D  00F0               	movwf	write_EEPROM@data
  1179  003E  3001               	movlw	1
  1180  003F  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1181                           
  1182                           ;main_M.c: 61:                 write_EEPROM(0x02,POT2);
  1183  0044  087B               	movf	_POT2,w
  1184  0045  00F4               	movwf	??_isr
  1185  0046  0874               	movf	??_isr,w
  1186  0047  00F0               	movwf	write_EEPROM@data
  1187  0048  3002               	movlw	2
  1188  0049  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1189                           
  1190                           ;main_M.c: 62:                 write_EEPROM(0x03,POT3);
  1191  004E  087A               	movf	_POT3,w
  1192  004F  00F4               	movwf	??_isr
  1193  0050  0874               	movf	??_isr,w
  1194  0051  00F0               	movwf	write_EEPROM@data
  1195  0052  3003               	movlw	3
  1196  0053  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1197                           
  1198                           ;main_M.c: 63:                 write_EEPROM(0x04,POT4);
  1199  0058  0879               	movf	_POT4,w
  1200  0059  00F4               	movwf	??_isr
  1201  005A  0874               	movf	??_isr,w
  1202  005B  00F0               	movwf	write_EEPROM@data
  1203  005C  3004               	movlw	4
  1204  005D  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1205  0062                     i1l1127:
  1206                           
  1207                           ;main_M.c: 65:             if(!PORTBbits.RB2){
  1208  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0064  1906               	btfsc	6,2	;volatile
  1211  0065  2867               	goto	u28_21
  1212  0066  2868               	goto	u28_20
  1213  0067                     u28_21:
  1214  0067  28EB               	goto	i1l1141
  1215  0068                     u28_20:
  1216  0068                     i1l1129:
  1217                           
  1218                           ;main_M.c: 66:                 write_EEPROM(0x05,POT1);
  1219  0068  087C               	movf	_POT1,w
  1220  0069  00F4               	movwf	??_isr
  1221  006A  0874               	movf	??_isr,w
  1222  006B  00F0               	movwf	write_EEPROM@data
  1223  006C  3005               	movlw	5
  1224  006D  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1225                           
  1226                           ;main_M.c: 67:                 write_EEPROM(0x06,POT2);
  1227  0072  087B               	movf	_POT2,w
  1228  0073  00F4               	movwf	??_isr
  1229  0074  0874               	movf	??_isr,w
  1230  0075  00F0               	movwf	write_EEPROM@data
  1231  0076  3006               	movlw	6
  1232  0077  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1233                           
  1234                           ;main_M.c: 68:                 write_EEPROM(0x07,POT3);
  1235  007C  087A               	movf	_POT3,w
  1236  007D  00F4               	movwf	??_isr
  1237  007E  0874               	movf	??_isr,w
  1238  007F  00F0               	movwf	write_EEPROM@data
  1239  0080  3007               	movlw	7
  1240  0081  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1241                           
  1242                           ;main_M.c: 69:                 write_EEPROM(0x08,POT4);
  1243  0086  0879               	movf	_POT4,w
  1244  0087  00F4               	movwf	??_isr
  1245  0088  0874               	movf	??_isr,w
  1246  0089  00F0               	movwf	write_EEPROM@data
  1247  008A  3008               	movlw	8
  1248  008B  120A  118A  2237  120A  118A  	fcall	_write_EEPROM
  1249  0090  28EB               	goto	i1l1141
  1250  0091                     i1l1131:
  1251  0091  037D               	decf	_modo,w
  1252  0092  1D03               	btfss	3,2
  1253  0093  2895               	goto	u29_21
  1254  0094  2896               	goto	u29_20
  1255  0095                     u29_21:
  1256  0095  28EB               	goto	i1l1141
  1257  0096                     u29_20:
  1258  0096                     i1l1133:
  1259                           
  1260                           ;main_M.c: 73:             PORTEbits.RE0 = 0;
  1261  0096  1009               	bcf	9,0	;volatile
  1262                           
  1263                           ;main_M.c: 74:             PORTEbits.RE1 = 1;
  1264  0097  1489               	bsf	9,1	;volatile
  1265                           
  1266                           ;main_M.c: 75:             PORTEbits.RE2 = 0;
  1267  0098  1109               	bcf	9,2	;volatile
  1268                           
  1269                           ;main_M.c: 77:             if(!PORTBbits.RB1){
  1270  0099  1886               	btfsc	6,1	;volatile
  1271  009A  289C               	goto	u30_21
  1272  009B  289D               	goto	u30_20
  1273  009C                     u30_21:
  1274  009C  28C1               	goto	i1l1137
  1275  009D                     u30_20:
  1276  009D                     i1l1135:
  1277                           
  1278                           ;main_M.c: 78:                 POT1 = read_EEPROM(0x01);
  1279  009D  3001               	movlw	1
  1280  009E  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1281  00A3  00F4               	movwf	??_isr
  1282  00A4  0874               	movf	??_isr,w
  1283  00A5  00FC               	movwf	_POT1
  1284                           
  1285                           ;main_M.c: 79:                 POT2 = read_EEPROM(0x02);
  1286  00A6  3002               	movlw	2
  1287  00A7  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1288  00AC  00F4               	movwf	??_isr
  1289  00AD  0874               	movf	??_isr,w
  1290  00AE  00FB               	movwf	_POT2
  1291                           
  1292                           ;main_M.c: 80:                 POT3 = read_EEPROM(0x03);
  1293  00AF  3003               	movlw	3
  1294  00B0  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1295  00B5  00F4               	movwf	??_isr
  1296  00B6  0874               	movf	??_isr,w
  1297  00B7  00FA               	movwf	_POT3
  1298                           
  1299                           ;main_M.c: 81:                 POT4 = read_EEPROM(0x04);
  1300  00B8  3004               	movlw	4
  1301  00B9  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1302  00BE  00F4               	movwf	??_isr
  1303  00BF  0874               	movf	??_isr,w
  1304  00C0  00F9               	movwf	_POT4
  1305  00C1                     i1l1137:
  1306                           
  1307                           ;main_M.c: 83:             if(!PORTBbits.RB2){
  1308  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1309  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1310  00C3  1906               	btfsc	6,2	;volatile
  1311  00C4  28C6               	goto	u31_21
  1312  00C5  28C7               	goto	u31_20
  1313  00C6                     u31_21:
  1314  00C6  28EB               	goto	i1l1141
  1315  00C7                     u31_20:
  1316  00C7                     i1l1139:
  1317                           
  1318                           ;main_M.c: 84:                 POT1 = read_EEPROM(0x05);
  1319  00C7  3005               	movlw	5
  1320  00C8  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1321  00CD  00F4               	movwf	??_isr
  1322  00CE  0874               	movf	??_isr,w
  1323  00CF  00FC               	movwf	_POT1
  1324                           
  1325                           ;main_M.c: 85:                 POT2 = read_EEPROM(0x06);
  1326  00D0  3006               	movlw	6
  1327  00D1  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1328  00D6  00F4               	movwf	??_isr
  1329  00D7  0874               	movf	??_isr,w
  1330  00D8  00FB               	movwf	_POT2
  1331                           
  1332                           ;main_M.c: 86:                 POT3 = read_EEPROM(0x07);
  1333  00D9  3007               	movlw	7
  1334  00DA  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1335  00DF  00F4               	movwf	??_isr
  1336  00E0  0874               	movf	??_isr,w
  1337  00E1  00FA               	movwf	_POT3
  1338                           
  1339                           ;main_M.c: 87:                 POT4 = read_EEPROM(0x08);
  1340  00E2  3008               	movlw	8
  1341  00E3  120A  118A  2257  120A  118A  	fcall	_read_EEPROM
  1342  00E8  00F4               	movwf	??_isr
  1343  00E9  0874               	movf	??_isr,w
  1344  00EA  00F9               	movwf	_POT4
  1345  00EB                     i1l1141:
  1346                           
  1347                           ;main_M.c: 90:         INTCONbits.RBIF = 0;
  1348  00EB  100B               	bcf	11,0	;volatile
  1349                           
  1350                           ;main_M.c: 92:     }
  1351  00EC  293D               	goto	i1l117
  1352  00ED                     i1l97:	
  1353                           ;main_M.c: 93:     else if(PIR1bits.ADIF){
  1354                           
  1355  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1356  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1357  00EF  1F0C               	btfss	12,6	;volatile
  1358  00F0  28F2               	goto	u32_21
  1359  00F1  28F3               	goto	u32_20
  1360  00F2                     u32_21:
  1361  00F2  293D               	goto	i1l117
  1362  00F3                     u32_20:
  1363  00F3                     i1l1143:
  1364                           
  1365                           ;main_M.c: 94:         if(modo==0){
  1366  00F3  087D               	movf	_modo,w
  1367  00F4  1D03               	btfss	3,2
  1368  00F5  28F7               	goto	u33_21
  1369  00F6  28F8               	goto	u33_20
  1370  00F7                     u33_21:
  1371  00F7  293C               	goto	i1l1161
  1372  00F8                     u33_20:
  1373  00F8                     i1l1145:
  1374                           
  1375                           ;main_M.c: 95:             if(ADCON0bits.CHS == 0){
  1376  00F8  0C1F               	rrf	31,w	;volatile
  1377  00F9  00F4               	movwf	??_isr
  1378  00FA  0C74               	rrf	??_isr,w
  1379  00FB  390F               	andlw	15
  1380  00FC  3A00               	xorlw	0
  1381  00FD  1D03               	skipz
  1382  00FE  2900               	goto	u34_21
  1383  00FF  2901               	goto	u34_20
  1384  0100                     u34_21:
  1385  0100  2909               	goto	i1l1149
  1386  0101                     u34_20:
  1387  0101                     i1l1147:
  1388                           
  1389                           ;main_M.c: 96:                 POT1 = ADRESH >>1;
  1390  0101  081E               	movf	30,w	;volatile
  1391  0102  00F4               	movwf	??_isr
  1392  0103  1003               	clrc
  1393  0104  0C74               	rrf	??_isr,w
  1394  0105  00F5               	movwf	??_isr+1
  1395  0106  0875               	movf	??_isr+1,w
  1396  0107  00FC               	movwf	_POT1
  1397                           
  1398                           ;main_M.c: 97:             }else if(ADCON0bits.CHS == 1){
  1399  0108  293C               	goto	i1l1161
  1400  0109                     i1l1149:
  1401  0109  0C1F               	rrf	31,w	;volatile
  1402  010A  00F4               	movwf	??_isr
  1403  010B  0C74               	rrf	??_isr,w
  1404  010C  390F               	andlw	15
  1405  010D  3A01               	xorlw	1
  1406  010E  1D03               	skipz
  1407  010F  2911               	goto	u35_21
  1408  0110  2912               	goto	u35_20
  1409  0111                     u35_21:
  1410  0111  291A               	goto	i1l1153
  1411  0112                     u35_20:
  1412  0112                     i1l1151:
  1413                           
  1414                           ;main_M.c: 98:                 POT2 = ADRESH >>1;
  1415  0112  081E               	movf	30,w	;volatile
  1416  0113  00F4               	movwf	??_isr
  1417  0114  1003               	clrc
  1418  0115  0C74               	rrf	??_isr,w
  1419  0116  00F5               	movwf	??_isr+1
  1420  0117  0875               	movf	??_isr+1,w
  1421  0118  00FB               	movwf	_POT2
  1422                           
  1423                           ;main_M.c: 99:             }else if(ADCON0bits.CHS == 2){
  1424  0119  293C               	goto	i1l1161
  1425  011A                     i1l1153:
  1426  011A  0C1F               	rrf	31,w	;volatile
  1427  011B  00F4               	movwf	??_isr
  1428  011C  0C74               	rrf	??_isr,w
  1429  011D  390F               	andlw	15
  1430  011E  3A02               	xorlw	2
  1431  011F  1D03               	skipz
  1432  0120  2922               	goto	u36_21
  1433  0121  2923               	goto	u36_20
  1434  0122                     u36_21:
  1435  0122  292B               	goto	i1l1157
  1436  0123                     u36_20:
  1437  0123                     i1l1155:
  1438                           
  1439                           ;main_M.c: 100:                 POT3 = ADRESH >>1;
  1440  0123  081E               	movf	30,w	;volatile
  1441  0124  00F4               	movwf	??_isr
  1442  0125  1003               	clrc
  1443  0126  0C74               	rrf	??_isr,w
  1444  0127  00F5               	movwf	??_isr+1
  1445  0128  0875               	movf	??_isr+1,w
  1446  0129  00FA               	movwf	_POT3
  1447                           
  1448                           ;main_M.c: 101:             }else if(ADCON0bits.CHS == 3){
  1449  012A  293C               	goto	i1l1161
  1450  012B                     i1l1157:
  1451  012B  0C1F               	rrf	31,w	;volatile
  1452  012C  00F4               	movwf	??_isr
  1453  012D  0C74               	rrf	??_isr,w
  1454  012E  390F               	andlw	15
  1455  012F  3A03               	xorlw	3
  1456  0130  1D03               	skipz
  1457  0131  2933               	goto	u37_21
  1458  0132  2934               	goto	u37_20
  1459  0133                     u37_21:
  1460  0133  293C               	goto	i1l111
  1461  0134                     u37_20:
  1462  0134                     i1l1159:
  1463                           
  1464                           ;main_M.c: 102:                 POT4 = ADRESH >>1;
  1465  0134  081E               	movf	30,w	;volatile
  1466  0135  00F4               	movwf	??_isr
  1467  0136  1003               	clrc
  1468  0137  0C74               	rrf	??_isr,w
  1469  0138  00F5               	movwf	??_isr+1
  1470  0139  0875               	movf	??_isr+1,w
  1471  013A  00F9               	movwf	_POT4
  1472  013B  293C               	goto	i1l1161
  1473  013C                     i1l111:
  1474  013C                     i1l1161:
  1475                           
  1476                           ;main_M.c: 105:         PIR1bits.ADIF = 0;
  1477  013C  130C               	bcf	12,6	;volatile
  1478  013D                     i1l117:
  1479  013D  0877               	movf	??_isr+3,w
  1480  013E  008A               	movwf	10
  1481  013F  0E76               	swapf	??_isr+2,w
  1482  0140  0083               	movwf	3
  1483  0141  0EFE               	swapf	btemp,f
  1484  0142  0E7E               	swapf	btemp,w
  1485  0143  0009               	retfie
  1486  0144                     __end_of_isr:
  1487                           
  1488                           	psect	intentry
  1489  0004                     __pintentry:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1492                           
  1493  0004                     interrupt_function:
  1494  007E                     saved_w	set	btemp
  1495  0004  00FE               	movwf	btemp
  1496  0005  0E03               	swapf	3,w
  1497  0006  00F6               	movwf	??_isr+2
  1498  0007  080A               	movf	10,w
  1499  0008  00F7               	movwf	??_isr+3
  1500  0009  120A  118A  2819   	ljmp	_isr
  1501                           
  1502                           	psect	text7
  1503  0237                     __ptext7:	
  1504 ;; *************** function _write_EEPROM *****************
  1505 ;; Defined at:
  1506 ;;		line 207 in file "main_M.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  address         1    wreg     unsigned char 
  1509 ;;  data            1    0[COMMON] unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  address         1    3[COMMON] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         1       0       0       0       0
  1522 ;;      Locals:         1       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_isr
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534  0237                     _write_EEPROM:	
  1535                           ;psect for function _write_EEPROM
  1536                           
  1537                           
  1538                           ;incstack = 0
  1539                           ; Regs used in _write_EEPROM: [wreg]
  1540                           ;write_EEPROM@address stored from wreg
  1541  0237  00F3               	movwf	write_EEPROM@address
  1542  0238                     i1l1005:
  1543                           
  1544                           ;main_M.c: 208:     EEADR = address;
  1545  0238  0873               	movf	write_EEPROM@address,w
  1546  0239  1283               	bcf	3,5	;RP0=0, select bank2
  1547  023A  1703               	bsf	3,6	;RP1=1, select bank2
  1548  023B  008D               	movwf	13	;volatile
  1549                           
  1550                           ;main_M.c: 209:     EEDAT = data;
  1551  023C  0870               	movf	write_EEPROM@data,w
  1552  023D  008C               	movwf	12	;volatile
  1553  023E                     i1l1007:
  1554                           
  1555                           ;main_M.c: 210:     EECON1bits.EEPGD = 0;
  1556  023E  1683               	bsf	3,5	;RP0=1, select bank3
  1557  023F  1703               	bsf	3,6	;RP1=1, select bank3
  1558  0240  138C               	bcf	12,7	;volsfr
  1559  0241                     i1l1009:
  1560                           
  1561                           ;main_M.c: 211:     EECON1bits.WREN=1;
  1562  0241  150C               	bsf	12,2	;volsfr
  1563  0242                     i1l1011:
  1564                           
  1565                           ;main_M.c: 213:     INTCONbits.GIE=0;
  1566  0242  138B               	bcf	11,7	;volatile
  1567                           
  1568                           ;main_M.c: 214:     EECON2 = 0x55;
  1569  0243  3055               	movlw	85
  1570  0244  008D               	movwf	13	;volsfr
  1571                           
  1572                           ;main_M.c: 215:     EECON2=0xaa;
  1573  0245  30AA               	movlw	170
  1574  0246  008D               	movwf	13	;volsfr
  1575  0247                     i1l1013:
  1576                           
  1577                           ;main_M.c: 217:     EECON1bits.WR=1;
  1578  0247  148C               	bsf	12,1	;volsfr
  1579                           
  1580                           ;main_M.c: 218:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1581  0248  3004               	movlw	4
  1582  0249  00F2               	movwf	??_write_EEPROM+1
  1583  024A  303D               	movlw	61
  1584  024B  00F1               	movwf	??_write_EEPROM
  1585  024C                     u47_27:
  1586  024C  0BF1               	decfsz	??_write_EEPROM,f
  1587  024D  2A4C               	goto	u47_27
  1588  024E  0BF2               	decfsz	??_write_EEPROM+1,f
  1589  024F  2A4C               	goto	u47_27
  1590  0250  2A51               	nop2
  1591  0251                     i1l1015:
  1592                           
  1593                           ;main_M.c: 219:     EECON1bits.WREN=0;
  1594  0251  1683               	bsf	3,5	;RP0=1, select bank3
  1595  0252  1703               	bsf	3,6	;RP1=1, select bank3
  1596  0253  110C               	bcf	12,2	;volsfr
  1597  0254                     i1l1017:
  1598                           
  1599                           ;main_M.c: 220:     INTCONbits.RBIF=0;
  1600  0254  100B               	bcf	11,0	;volatile
  1601  0255                     i1l1019:
  1602                           
  1603                           ;main_M.c: 221:     INTCONbits.GIE=1;
  1604  0255  178B               	bsf	11,7	;volatile
  1605  0256                     i1l142:
  1606  0256  0008               	return
  1607  0257                     __end_of_write_EEPROM:
  1608                           
  1609                           	psect	text8
  1610  0257                     __ptext8:	
  1611 ;; *************** function _read_EEPROM *****************
  1612 ;; Defined at:
  1613 ;;		line 201 in file "main_M.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  address         1    wreg     unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  address         1    0[COMMON] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      unsigned char 
  1620 ;; Registers used:
  1621 ;;		wreg
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         1       0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_isr
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640  0257                     _read_EEPROM:	
  1641                           ;psect for function _read_EEPROM
  1642                           
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _read_EEPROM: [wreg]
  1646                           ;read_EEPROM@address stored from wreg
  1647  0257  00F0               	movwf	read_EEPROM@address
  1648  0258                     i1l783:
  1649                           
  1650                           ;main_M.c: 202:     EEADR = address;
  1651  0258  0870               	movf	read_EEPROM@address,w
  1652  0259  1283               	bcf	3,5	;RP0=0, select bank2
  1653  025A  1703               	bsf	3,6	;RP1=1, select bank2
  1654  025B  008D               	movwf	13	;volatile
  1655  025C                     i1l785:
  1656                           
  1657                           ;main_M.c: 203:     EECON1bits.EEPGD = 0;
  1658  025C  1683               	bsf	3,5	;RP0=1, select bank3
  1659  025D  1703               	bsf	3,6	;RP1=1, select bank3
  1660  025E  138C               	bcf	12,7	;volsfr
  1661  025F                     i1l787:
  1662                           
  1663                           ;main_M.c: 204:     EECON1bits.RD = 1;
  1664  025F  140C               	bsf	12,0	;volsfr
  1665                           
  1666                           ;main_M.c: 205:     return EEDAT;
  1667  0260  1283               	bcf	3,5	;RP0=0, select bank2
  1668  0261  1703               	bsf	3,6	;RP1=1, select bank2
  1669  0262  080C               	movf	12,w	;volatile
  1670  0263                     i1l139:
  1671  0263  0008               	return
  1672  0264                     __end_of_read_EEPROM:
  1673  007E                     btemp	set	126	;btemp
  1674  007E                     wtemp0	set	126
  1675                           
  1676                           	psect	idloc
  1677                           
  1678                           ;Config register IDLOC0 @ 0x2000
  1679                           ;	unspecified, using default values
  1680  2000                     	org	8192
  1681  2000  3FFF               	dw	16383
  1682                           
  1683                           ;Config register IDLOC1 @ 0x2001
  1684                           ;	unspecified, using default values
  1685  2001                     	org	8193
  1686  2001  3FFF               	dw	16383
  1687                           
  1688                           ;Config register IDLOC2 @ 0x2002
  1689                           ;	unspecified, using default values
  1690  2002                     	org	8194
  1691  2002  3FFF               	dw	16383
  1692                           
  1693                           ;Config register IDLOC3 @ 0x2003
  1694                           ;	unspecified, using default values
  1695  2003                     	org	8195
  1696  2003  3FFF               	dw	16383
  1697                           
  1698                           	psect	config
  1699                           
  1700                           ;Config register CONFIG1 @ 0x2007
  1701                           ;	Oscillator Selection bits
  1702                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1703                           ;	Watchdog Timer Enable bit
  1704                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1705                           ;	Power-up Timer Enable bit
  1706                           ;	PWRTE = OFF, PWRT disabled
  1707                           ;	RE3/MCLR pin function select bit
  1708                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1709                           ;	Code Protection bit
  1710                           ;	CP = OFF, Program memory code protection is disabled
  1711                           ;	Data Code Protection bit
  1712                           ;	CPD = OFF, Data memory code protection is disabled
  1713                           ;	Brown Out Reset Selection bits
  1714                           ;	BOREN = OFF, BOR disabled
  1715                           ;	Internal External Switchover bit
  1716                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1717                           ;	Fail-Safe Clock Monitor Enabled bit
  1718                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1719                           ;	Low Voltage Programming Enable bit
  1720                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1721                           ;	In-Circuit Debugger Mode bit
  1722                           ;	DEBUG = 0x1, unprogrammed default
  1723  2007                     	org	8199
  1724  2007  20D4               	dw	8404
  1725                           
  1726                           ;Config register CONFIG2 @ 0x2008
  1727                           ;	Brown-out Reset Selection bit
  1728                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1729                           ;	Flash Program Memory Self Write Enable bits
  1730                           ;	WRT = OFF, Write protection off
  1731  2008                     	org	8200
  1732  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_write_EEPROM

Critical Paths under _main in BANK0

    _main->_setup
    _main->_write_I2C

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      22
                                              1 BANK0      2     2      0
                              _setup
                          _start_I2C
                           _stop_I2C
                          _write_I2C
 ---------------------------------------------------------------------------------
 (1) _write_I2C                                            1     1      0      22
                                              0 BANK0      1     1      0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (1) _stop_I2C                                             0     0      0       0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (1) _start_I2C                                            0     0      0       0
                           _wait_I2C
 ---------------------------------------------------------------------------------
 (2) _wait_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     667
                                              4 COMMON     4     4      0
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (4) _write_EEPROM                                         4     3      1     652
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _read_EEPROM                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _start_I2C
     _wait_I2C
   _stop_I2C
     _wait_I2C
   _write_I2C
     _wait_I2C

 _isr (ROOT)
   _read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu May 26 10:33:09 2022

            _SSPSTATbits 0094                      l151 0280                      l127 0185  
                    l136 0236                      l145 0281                      l170 026E  
                    l147 0287                      l148 0288                      l157 0277  
                    u220 0287                      u221 0286                      u400 0166  
                    u401 0165                      u410 0174                      u411 0173  
                    u420 0182                      u421 0181                      u380 014F  
                    u437 0189                      u381 014E                      u390 0158  
                    u447 01B3                      u391 0157                      u457 01DA  
                    u467 0216                      _isr 0019                     l1003 0281  
                   l1021 01E2                     l1101 0269                     l1031 01F0  
                   l1023 01E6                     l1103 026E                     l1041 01FE  
                   l1033 01F3                     l1025 01E7                     l1201 01B7  
                   l1051 0208                     l1043 01FF                     l1035 01F4  
                   l1027 01ED                     l1107 026F                     l1211 01D4  
                   l1203 01BD                     l1061 021C                     l1053 020C  
                   l1045 0202                     l1037 01F8                     l1029 01EE  
                   l1109 0272                     l1205 01C2                     l1071 0223  
                   l1063 021D                     l1055 020F                     l1047 0204  
                   l1039 01FB                     l1207 01C8                     l1081 022E  
                   l1073 0225                     l1065 021E                     l1057 0212  
                   l1049 0207                     l1209 01CF                     l1091 0235  
                   l1083 022F                     l1075 0226                     l1067 021F  
                   l1059 0219                     l1171 0158                     l1085 0230  
                   l1077 022C                     l1069 0221                     l1181 0179  
                   l1173 015D                     l1165 0144                     l1087 0231  
                   l1079 022D                     l1095 0278                     l1191 0193  
                   l1183 0182                     l1175 0166                     l1167 0149  
                   l1089 0234                     l1097 027B                     l1193 0198  
                   l1177 016B                     l1185 0185                     l1169 014F  
                   l1099 0267                     l1195 019E                     l1187 018C  
                   l1179 0174                     l1197 01A8                     l1189 018F  
                   l1199 01AD                     ?_isr 0070                     i1l97 00ED  
                   _POT1 007C                     _POT2 007B                     _POT3 007A  
                   _POT4 0079                     _data 0078                     _main 0144  
                   _modo 007D                     btemp 007E                     start 000C  
           ?_read_EEPROM 0070                    ??_isr 0074                    ?_main 0070  
                  _EEADR 010D                    _EEDAT 010C                    _ANSEL 0188  
                  i1l111 013C                    i1l117 013D                    i1l142 0256  
                  i1l139 0263                    i1l783 0258                    i1l785 025C  
                  i1l787 025F                    u30_20 009D                    u30_21 009C  
                  u31_20 00C7                    u23_20 001D                    u31_21 00C6  
                  u23_21 001C                    u32_20 00F3                    u24_20 0023  
                  u32_21 00F2                    u24_21 0022                    u33_20 00F8  
                  u25_20 002D                    u33_21 00F7                    u25_21 002C  
                  u34_20 0101                    u26_20 0033                    u34_21 0100  
                  u26_21 0032                    u35_20 0112                    u27_20 003A  
                  u35_21 0111                    u27_21 0039                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 0123                    u28_20 0068                    u36_21 0122  
                  u28_21 0067                    u37_20 0134                    u29_20 0096  
                  u37_21 0133                    u29_21 0095                    u47_27 024C  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 01E2                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01E2                   ??_main 0021             _write_EEPROM 0237  
                 _ADRESH 001E                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189                   i1l1011 0242                   i1l1013 0247  
                 i1l1005 0238                   i1l1015 0251                   i1l1007 023E  
                 i1l1111 0019                   i1l1017 0254                   i1l1009 0241  
                 i1l1121 002E                   i1l1113 001D                   i1l1019 0255  
                 i1l1123 0033                   i1l1131 0091                   i1l1115 0023  
                 i1l1133 0096                   i1l1141 00EB                   i1l1125 003A  
                 i1l1117 0027                   i1l1151 0112                   i1l1143 00F3  
                 i1l1135 009D                   i1l1127 0062                   i1l1119 002D  
                 i1l1153 011A                   i1l1145 00F8                   i1l1161 013C  
                 i1l1137 00C1                   i1l1129 0068                   i1l1155 0123  
                 i1l1147 0101                   i1l1139 00C7                   i1l1157 012B  
                 i1l1149 0109                   i1l1159 0134                   _SSPADD 0093  
                 _SSPBUF 0013         __end_of_wait_I2C 0289                   saved_w 007E  
       __end_of_stop_I2C 0278  __end_of__initialization 0015           __pcstackCOMMON 0070  
          __end_of_setup 0237       read_EEPROM@address 0070           _OPTION_REGbits 0081  
       write_EEPROM@data 0070                  ??_setup 0020               __pmaintext 0144  
             __pintentry 0004                  _ACKSTAT 048E                ?_wait_I2C 0070  
              ?_stop_I2C 0070                  __ptext1 0264                  __ptext2 026F  
                __ptext3 0278                  __ptext4 0281                  __ptext5 01E2  
                __ptext6 0019                  __ptext7 0237                  __ptext8 0257  
   end_of_initialization 0015      write_EEPROM@address 0073               ??_wait_I2C 0020  
      __end_of_start_I2C 0281               ??_stop_I2C 0020                _PORTBbits 0006  
              _PORTEbits 0009        __end_of_write_I2C 026F                _TRISBbits 0086  
    start_initialization 000F              __end_of_isr 0144            ??_read_EEPROM 0070  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
    __end_of_read_EEPROM 0264            ?_write_EEPROM 0070        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
              _start_I2C 0278               _ADCON0bits 001F               _ADCON1bits 009F  
         ??_write_EEPROM 0071                 _WPUBbits 0095                _write_I2C 0264  
             _EECON1bits 018C              _read_EEPROM 0257               ?_start_I2C 0070  
             ?_write_I2C 0070                 _wait_I2C 0281                 _stop_I2C 026F  
             _INTCONbits 000B            write_I2C@data 0020                 intlevel1 0000  
   __end_of_write_EEPROM 0257               _OSCCONbits 008F              ??_start_I2C 0020  
            ??_write_I2C 0020              _SSPCON2bits 0091               _SSPCONbits 0014  

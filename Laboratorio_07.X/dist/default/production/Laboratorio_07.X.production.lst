

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 02 21:12:49 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	strings
   208  0050                     __pstrings:
   209  0050                     stringtab:
   210  0050                     __stringtab:
   211  0050                     stringcode:	
   212                           ;	String table - string pointers are 1 byte each
   213                           
   214  0050                     stringdir:
   215  0050  3000               	movlw	high stringdir
   216  0051  008A               	movwf	10
   217  0052  0804               	movf	4,w
   218  0053  0A84               	incf	4,f
   219  0054  0782               	addwf	2,f
   220  0055                     __stringbase:
   221  0055  3400               	retlw	0
   222  0056                     __end_of__stringtab:
   223  0056                     _tabla:
   224  0056  34FC               	retlw	252
   225  0057  3460               	retlw	96
   226  0058  34DA               	retlw	218
   227  0059  34F2               	retlw	242
   228  005A  3466               	retlw	102
   229  005B  34B6               	retlw	182
   230  005C  34BE               	retlw	190
   231  005D  34E0               	retlw	224
   232  005E  34FE               	retlw	254
   233  005F  34F6               	retlw	246
   234  0060  34EE               	retlw	238
   235  0061  343E               	retlw	62
   236  0062  349C               	retlw	156
   237  0063  347A               	retlw	122
   238  0064  349E               	retlw	158
   239  0065  348E               	retlw	142
   240  0066                     __end_of_tabla:
   241  0008                     _PORTD	set	8
   242  0007                     _PORTC	set	7
   243  0006                     _PORTB	set	6
   244  0005                     _PORTA	set	5
   245  0006                     _PORTBbits	set	6
   246  000B                     _INTCONbits	set	11
   247  0096                     _IOCBbits	set	150
   248  0095                     _WPUBbits	set	149
   249  0081                     _OPTION_REGbits	set	129
   250  0086                     _TRISBbits	set	134
   251  0088                     _TRISD	set	136
   252  0087                     _TRISC	set	135
   253  0085                     _TRISA	set	133
   254  008F                     _OSCCONbits	set	143
   255  0189                     _ANSELH	set	393
   256  0188                     _ANSEL	set	392
   257                           
   258                           	psect	cinit
   259  000F                     start_initialization:	
   260                           ; #config settings
   261                           
   262  000F                     __initialization:
   263  000F                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  000F                     __end_of__initialization:
   267  000F  0183               	clrf	3
   268  0010  120A  118A  2866   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	cstackCOMMON
   271  0070                     __pcstackCOMMON:
   272  0070                     ?_setup:
   273  0070                     ?_isr:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_isr:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282                           
   283                           ; 1 bytes @ 0x0
   284  0070                     	ds	3
   285  0073                     ??_setup:
   286  0073                     ??_main:	
   287                           ; 1 bytes @ 0x3
   288                           
   289                           
   290                           	psect	maintext
   291  0066                     __pmaintext:	
   292                           ; 1 bytes @ 0x3
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 45 in file "Codigo_C.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : B00/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels required when called: 2
   318 ;; This function calls:
   319 ;;		_setup
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325  0066                     _main:	
   326                           ;psect for function _main
   327                           
   328  0066                     l697:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   331                           
   332                           
   333                           ;Codigo_C.c: 46:     setup();
   334  0066  120A  118A  2013  120A  118A  	fcall	_setup
   335  006B                     l49:	
   336                           ;Codigo_C.c: 48:     while(1){
   337                           
   338  006B                     l50:	
   339                           ;Codigo_C.c: 50:     }
   340                           
   341  006B  286B               	goto	l49
   342  006C  120A  118A  280C   	ljmp	start
   343  006F                     __end_of_main:
   344                           
   345                           	psect	text1
   346  0013                     __ptext1:	
   347 ;; *************** function _setup *****************
   348 ;; Defined at:
   349 ;;		line 54 in file "Codigo_C.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; Hardware stack levels required when called: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377  0013                     _setup:	
   378                           ;psect for function _setup
   379                           
   380  0013                     l647:	
   381                           ;incstack = 0
   382                           ; Regs used in _setup: [wreg+status,2+status,0]
   383                           
   384                           
   385                           ;Codigo_C.c: 56:     ANSEL = 0x00;
   386  0013  1683               	bsf	3,5	;RP0=1, select bank3
   387  0014  1703               	bsf	3,6	;RP1=1, select bank3
   388  0015  0188               	clrf	8	;volatile
   389                           
   390                           ;Codigo_C.c: 57:     ANSELH = 0x00;
   391  0016  0189               	clrf	9	;volatile
   392  0017                     l649:
   393                           
   394                           ;Codigo_C.c: 59:     OSCCONbits.IRCF = 0b0100;
   395  0017  1683               	bsf	3,5	;RP0=1, select bank1
   396  0018  1303               	bcf	3,6	;RP1=0, select bank1
   397  0019  080F               	movf	15,w	;volatile
   398  001A  398F               	andlw	-113
   399  001B  3840               	iorlw	64
   400  001C  008F               	movwf	15	;volatile
   401  001D                     l651:
   402                           
   403                           ;Codigo_C.c: 60:     OSCCONbits.SCS = 1;
   404  001D  140F               	bsf	15,0	;volatile
   405  001E                     l653:
   406                           
   407                           ;Codigo_C.c: 62:     TRISA = 0x00;
   408  001E  0185               	clrf	5	;volatile
   409  001F                     l655:
   410                           
   411                           ;Codigo_C.c: 63:     TRISC = 0x00;
   412  001F  0187               	clrf	7	;volatile
   413  0020                     l657:
   414                           
   415                           ;Codigo_C.c: 64:     TRISD = 0x00;
   416  0020  0188               	clrf	8	;volatile
   417  0021                     l659:
   418                           
   419                           ;Codigo_C.c: 66:     PORTA = 0x00;
   420  0021  1283               	bcf	3,5	;RP0=0, select bank0
   421  0022  1303               	bcf	3,6	;RP1=0, select bank0
   422  0023  0185               	clrf	5	;volatile
   423  0024                     l661:
   424                           
   425                           ;Codigo_C.c: 67:     PORTB = 0x00;
   426  0024  0186               	clrf	6	;volatile
   427  0025                     l663:
   428                           
   429                           ;Codigo_C.c: 68:     PORTC = 0x00;
   430  0025  0187               	clrf	7	;volatile
   431  0026                     l665:
   432                           
   433                           ;Codigo_C.c: 69:     PORTD = 0x00;
   434  0026  0188               	clrf	8	;volatile
   435  0027                     l667:
   436                           
   437                           ;Codigo_C.c: 71:     TRISBbits.TRISB0 = 1;
   438  0027  1683               	bsf	3,5	;RP0=1, select bank1
   439  0028  1303               	bcf	3,6	;RP1=0, select bank1
   440  0029  1406               	bsf	6,0	;volatile
   441  002A                     l669:
   442                           
   443                           ;Codigo_C.c: 72:     TRISBbits.TRISB1 = 1;
   444  002A  1486               	bsf	6,1	;volatile
   445  002B                     l671:
   446                           
   447                           ;Codigo_C.c: 73:     OPTION_REGbits.nRBPU = 0;
   448  002B  1381               	bcf	1,7	;volatile
   449  002C                     l673:
   450                           
   451                           ;Codigo_C.c: 74:     WPUBbits.WPUB = 0x03;
   452  002C  3003               	movlw	3
   453  002D  0095               	movwf	21	;volatile
   454  002E                     l675:
   455                           
   456                           ;Codigo_C.c: 75:     IOCBbits.IOCB = 0x03;
   457  002E  3003               	movlw	3
   458  002F  0096               	movwf	22	;volatile
   459  0030                     l677:
   460                           
   461                           ;Codigo_C.c: 81:     INTCONbits.GIE = 1;
   462  0030  178B               	bsf	11,7	;volatile
   463  0031                     l679:
   464                           
   465                           ;Codigo_C.c: 82:     INTCONbits.RBIE = 1;
   466  0031  158B               	bsf	11,3	;volatile
   467  0032                     l681:
   468                           
   469                           ;Codigo_C.c: 83:     INTCONbits.RBIF = 0;
   470  0032  100B               	bcf	11,0	;volatile
   471  0033                     l55:
   472  0033  0008               	return
   473  0034                     __end_of_setup:
   474                           
   475                           	psect	text2
   476  0034                     __ptext2:	
   477 ;; *************** function _isr *****************
   478 ;; Defined at:
   479 ;;		line 33 in file "Codigo_C.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          3       0       0       0       0
   496 ;;      Totals:         3       0       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		Interrupt level 1
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506  0034                     _isr:	
   507                           ;psect for function _isr
   508                           
   509  0034                     i1l683:
   510                           
   511                           ;Codigo_C.c: 34:     if(INTCONbits.RBIF){
   512  0034  1C0B               	btfss	11,0	;volatile
   513  0035  2837               	goto	u1_21
   514  0036  2838               	goto	u1_20
   515  0037                     u1_21:
   516  0037  2849               	goto	i1l44
   517  0038                     u1_20:
   518  0038                     i1l685:
   519                           
   520                           ;Codigo_C.c: 35:         if (!PORTBbits.RB0)
   521  0038  1283               	bcf	3,5	;RP0=0, select bank0
   522  0039  1303               	bcf	3,6	;RP1=0, select bank0
   523  003A  1806               	btfsc	6,0	;volatile
   524  003B  283D               	goto	u2_21
   525  003C  283E               	goto	u2_20
   526  003D                     u2_21:
   527  003D  2842               	goto	i1l689
   528  003E                     u2_20:
   529  003E                     i1l687:
   530                           
   531                           ;Codigo_C.c: 36:             ++PORTA;
   532  003E  3001               	movlw	1
   533  003F  00F0               	movwf	??_isr
   534  0040  0870               	movf	??_isr,w
   535  0041  0785               	addwf	5,f	;volatile
   536  0042                     i1l689:
   537                           
   538                           ;Codigo_C.c: 37:         if(!PORTBbits.RB1)
   539  0042  1886               	btfsc	6,1	;volatile
   540  0043  2845               	goto	u3_21
   541  0044  2846               	goto	u3_20
   542  0045                     u3_21:
   543  0045  2848               	goto	i1l693
   544  0046                     u3_20:
   545  0046                     i1l691:
   546                           
   547                           ;Codigo_C.c: 38:             --PORTA;
   548  0046  3001               	movlw	1
   549  0047  0285               	subwf	5,f	;volatile
   550  0048                     i1l693:
   551                           
   552                           ;Codigo_C.c: 39:         INTCONbits.RBIF = 0;
   553  0048  100B               	bcf	11,0	;volatile
   554  0049                     i1l44:
   555  0049  0872               	movf	??_isr+2,w
   556  004A  008A               	movwf	10
   557  004B  0E71               	swapf	??_isr+1,w
   558  004C  0083               	movwf	3
   559  004D  0EFE               	swapf	btemp,f
   560  004E  0E7E               	swapf	btemp,w
   561  004F  0009               	retfie
   562  0050                     __end_of_isr:
   563  007E                     btemp	set	126	;btemp
   564  007E                     wtemp0	set	126
   565                           
   566                           	psect	intentry
   567  0004                     __pintentry:	
   568                           ;incstack = 0
   569                           ; Regs used in _isr: [wreg+status,2+status,0]
   570                           
   571  0004                     interrupt_function:
   572  007E                     saved_w	set	btemp
   573  0004  00FE               	movwf	btemp
   574  0005  0E03               	swapf	3,w
   575  0006  00F1               	movwf	??_isr+1
   576  0007  080A               	movf	10,w
   577  0008  00F2               	movwf	??_isr+2
   578  0009  120A  118A  2834   	ljmp	_isr
   579                           
   580                           	psect	idloc
   581                           
   582                           ;Config register IDLOC0 @ 0x2000
   583                           ;	unspecified, using default values
   584  2000                     	org	8192
   585  2000  3FFF               	dw	16383
   586                           
   587                           ;Config register IDLOC1 @ 0x2001
   588                           ;	unspecified, using default values
   589  2001                     	org	8193
   590  2001  3FFF               	dw	16383
   591                           
   592                           ;Config register IDLOC2 @ 0x2002
   593                           ;	unspecified, using default values
   594  2002                     	org	8194
   595  2002  3FFF               	dw	16383
   596                           
   597                           ;Config register IDLOC3 @ 0x2003
   598                           ;	unspecified, using default values
   599  2003                     	org	8195
   600  2003  3FFF               	dw	16383
   601                           
   602                           	psect	config
   603                           
   604                           ;Config register CONFIG1 @ 0x2007
   605                           ;	Oscillator Selection bits
   606                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   607                           ;	Watchdog Timer Enable bit
   608                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   609                           ;	Power-up Timer Enable bit
   610                           ;	PWRTE = OFF, PWRT disabled
   611                           ;	RE3/MCLR pin function select bit
   612                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   613                           ;	Code Protection bit
   614                           ;	CP = OFF, Program memory code protection is disabled
   615                           ;	Data Code Protection bit
   616                           ;	CPD = OFF, Data memory code protection is disabled
   617                           ;	Brown Out Reset Selection bits
   618                           ;	BOREN = OFF, BOR disabled
   619                           ;	Internal External Switchover bit
   620                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   621                           ;	Fail-Safe Clock Monitor Enabled bit
   622                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   623                           ;	Low Voltage Programming Enable bit
   624                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   625                           ;	In-Circuit Debugger Mode bit
   626                           ;	DEBUG = 0x1, unprogrammed default
   627  2007                     	org	8199
   628  2007  20D4               	dw	8404
   629                           
   630                           ;Config register CONFIG2 @ 0x2008
   631                           ;	Brown-out Reset Selection bit
   632                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   633                           ;	Flash Program Memory Self Write Enable bits
   634                           ;	WRT = OFF, Write protection off
   635  2008                     	org	8200
   636  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 02 21:12:49 2022

                      pc 0002                       l50 006B                       l55 0033  
                     l49 006B                       fsr 0004                      l651 001D  
                    l661 0024                      l653 001E                      l671 002B  
                    l663 0025                      l655 001F                      l647 0013  
                    l681 0032                      l673 002C                      l665 0026  
                    l657 0020                      l649 0017                      l675 002E  
                    l667 0027                      l659 0021                      l677 0030  
                    l669 002A                      l679 0031                      l697 0066  
                    _isr 0034                     ?_isr 0070                     i1l44 0049  
                   u1_20 0038                     u1_21 0037                     u2_20 003E  
                   u2_21 003D                     u3_20 0046                     u3_21 0045  
                   _main 0066                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l691 0046                    i1l683 0034                    i1l693 0048  
                  i1l685 0038                    i1l687 003E                    i1l689 0042  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _tabla 0056                    _setup 0013  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006F                   ??_main 0073  
                 ?_setup 0070                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070            __end_of_tabla 0066  
          __end_of_setup 0034           _OPTION_REGbits 0081                  ??_setup 0073  
             __pmaintext 0066               __pintentry 0004               __stringtab 0050  
                __ptext1 0013                  __ptext2 0034     end_of_initialization 000F  
              _PORTBbits 0006                _TRISBbits 0086      start_initialization 000F  
            __end_of_isr 0050                ___latbits 0002                __pstrings 0050  
      interrupt_function 0004                 _IOCBbits 0096              __stringbase 0055  
               _WPUBbits 0095       __end_of__stringtab 0056               _INTCONbits 000B  
               intlevel1 0000                stringcode 0050               _OSCCONbits 008F  
               stringdir 0050                 stringtab 0050  



Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Apr 03 00:39:06 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	strings
   208  006A                     __pstrings:
   209  006A                     stringtab:
   210  006A                     __stringtab:
   211  006A                     stringcode:	
   212                           ;	String table - string pointers are 1 byte each
   213                           
   214  006A                     stringdir:
   215  006A  3000               	movlw	high stringdir
   216  006B  008A               	movwf	10
   217  006C  0804               	movf	4,w
   218  006D  0A84               	incf	4,f
   219  006E  0782               	addwf	2,f
   220  006F                     __stringbase:
   221  006F  3400               	retlw	0
   222  0070                     __end_of__stringtab:
   223  0070                     _tabla:
   224  0070  34FC               	retlw	252
   225  0071  3460               	retlw	96
   226  0072  34DA               	retlw	218
   227  0073  34F2               	retlw	242
   228  0074  3466               	retlw	102
   229  0075  34B6               	retlw	182
   230  0076  34BE               	retlw	190
   231  0077  34E0               	retlw	224
   232  0078  34FE               	retlw	254
   233  0079  34F6               	retlw	246
   234  007A  34EE               	retlw	238
   235  007B  343E               	retlw	62
   236  007C  349C               	retlw	156
   237  007D  347A               	retlw	122
   238  007E  349E               	retlw	158
   239  007F  348E               	retlw	142
   240  0080                     __end_of_tabla:
   241  0007                     _PORTC	set	7
   242  0006                     _PORTB	set	6
   243  0001                     _TMR0	set	1
   244  0008                     _PORTD	set	8
   245  0005                     _PORTA	set	5
   246  0006                     _PORTBbits	set	6
   247  000B                     _INTCONbits	set	11
   248  0096                     _IOCBbits	set	150
   249  0095                     _WPUBbits	set	149
   250  0081                     _OPTION_REGbits	set	129
   251  0086                     _TRISBbits	set	134
   252  0088                     _TRISD	set	136
   253  0087                     _TRISC	set	135
   254  0085                     _TRISA	set	133
   255  008F                     _OSCCONbits	set	143
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSEL	set	392
   258                           
   259                           	psect	cinit
   260  000F                     start_initialization:	
   261                           ; #config settings
   262                           
   263  000F                     __initialization:
   264  000F                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  000F                     __end_of__initialization:
   268  000F  0183               	clrf	3
   269  0010  120A  118A  2880   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:
   273  0070                     ?_setup:
   274  0070                     ?_isr:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_isr:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283                           
   284                           ; 1 bytes @ 0x0
   285  0070                     	ds	3
   286  0073                     ??_setup:
   287  0073                     ??_main:	
   288                           ; 1 bytes @ 0x3
   289                           
   290                           
   291                           	psect	maintext
   292  0080                     __pmaintext:	
   293                           ; 1 bytes @ 0x3
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 50 in file "Codigo_C.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_setup
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326  0080                     _main:	
   327                           ;psect for function _main
   328                           
   329  0080                     l724:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;Codigo_C.c: 51:     setup();
   335  0080  120A  118A  2013  120A  118A  	fcall	_setup
   336  0085                     l52:	
   337                           ;Codigo_C.c: 53:     while(1){
   338                           
   339  0085                     l53:	
   340                           ;Codigo_C.c: 55:     }
   341                           
   342  0085  2885               	goto	l52
   343  0086  120A  118A  280C   	ljmp	start
   344  0089                     __end_of_main:
   345                           
   346                           	psect	text1
   347  0013                     __ptext1:	
   348 ;; *************** function _setup *****************
   349 ;; Defined at:
   350 ;;		line 59 in file "Codigo_C.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; Hardware stack levels required when called: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378  0013                     _setup:	
   379                           ;psect for function _setup
   380                           
   381  0013                     l650:	
   382                           ;incstack = 0
   383                           ; Regs used in _setup: [wreg+status,2+status,0]
   384                           
   385                           
   386                           ;Codigo_C.c: 61:     ANSEL = 0x00;
   387  0013  1683               	bsf	3,5	;RP0=1, select bank3
   388  0014  1703               	bsf	3,6	;RP1=1, select bank3
   389  0015  0188               	clrf	8	;volatile
   390                           
   391                           ;Codigo_C.c: 62:     ANSELH = 0x00;
   392  0016  0189               	clrf	9	;volatile
   393  0017                     l652:
   394                           
   395                           ;Codigo_C.c: 64:     OSCCONbits.IRCF = 0b0100;
   396  0017  1683               	bsf	3,5	;RP0=1, select bank1
   397  0018  1303               	bcf	3,6	;RP1=0, select bank1
   398  0019  080F               	movf	15,w	;volatile
   399  001A  398F               	andlw	-113
   400  001B  3840               	iorlw	64
   401  001C  008F               	movwf	15	;volatile
   402  001D                     l654:
   403                           
   404                           ;Codigo_C.c: 65:     OSCCONbits.SCS = 1;
   405  001D  140F               	bsf	15,0	;volatile
   406  001E                     l656:
   407                           
   408                           ;Codigo_C.c: 67:     TRISA = 0x00;
   409  001E  0185               	clrf	5	;volatile
   410  001F                     l658:
   411                           
   412                           ;Codigo_C.c: 68:     TRISC = 0x00;
   413  001F  0187               	clrf	7	;volatile
   414  0020                     l660:
   415                           
   416                           ;Codigo_C.c: 69:     TRISD = 0x00;
   417  0020  0188               	clrf	8	;volatile
   418  0021                     l662:
   419                           
   420                           ;Codigo_C.c: 71:     PORTA = 0x00;
   421  0021  1283               	bcf	3,5	;RP0=0, select bank0
   422  0022  1303               	bcf	3,6	;RP1=0, select bank0
   423  0023  0185               	clrf	5	;volatile
   424  0024                     l664:
   425                           
   426                           ;Codigo_C.c: 72:     PORTB = 0x00;
   427  0024  0186               	clrf	6	;volatile
   428  0025                     l666:
   429                           
   430                           ;Codigo_C.c: 73:     PORTC = 0x00;
   431  0025  0187               	clrf	7	;volatile
   432  0026                     l668:
   433                           
   434                           ;Codigo_C.c: 74:     PORTD = 0x00;
   435  0026  0188               	clrf	8	;volatile
   436  0027                     l670:
   437                           
   438                           ;Codigo_C.c: 76:     TRISBbits.TRISB0 = 1;
   439  0027  1683               	bsf	3,5	;RP0=1, select bank1
   440  0028  1303               	bcf	3,6	;RP1=0, select bank1
   441  0029  1406               	bsf	6,0	;volatile
   442  002A                     l672:
   443                           
   444                           ;Codigo_C.c: 77:     TRISBbits.TRISB1 = 1;
   445  002A  1486               	bsf	6,1	;volatile
   446  002B                     l674:
   447                           
   448                           ;Codigo_C.c: 78:     OPTION_REGbits.nRBPU = 0;
   449  002B  1381               	bcf	1,7	;volatile
   450  002C                     l676:
   451                           
   452                           ;Codigo_C.c: 79:     WPUBbits.WPUB = 0x03;
   453  002C  3003               	movlw	3
   454  002D  0095               	movwf	21	;volatile
   455  002E                     l678:
   456                           
   457                           ;Codigo_C.c: 80:     IOCBbits.IOCB = 0x03;
   458  002E  3003               	movlw	3
   459  002F  0096               	movwf	22	;volatile
   460  0030                     l680:
   461                           
   462                           ;Codigo_C.c: 82:     OPTION_REGbits.T0CS = 0;
   463  0030  1281               	bcf	1,5	;volatile
   464  0031                     l682:
   465                           
   466                           ;Codigo_C.c: 83:     OPTION_REGbits.PSA = 0;
   467  0031  1181               	bcf	1,3	;volatile
   468  0032                     l684:
   469                           
   470                           ;Codigo_C.c: 84:     OPTION_REGbits.PS2 = 1;
   471  0032  1501               	bsf	1,2	;volatile
   472  0033                     l686:
   473                           
   474                           ;Codigo_C.c: 85:     OPTION_REGbits.PS1 = 1;
   475  0033  1481               	bsf	1,1	;volatile
   476  0034                     l688:
   477                           
   478                           ;Codigo_C.c: 86:     OPTION_REGbits.PS0 = 1;
   479  0034  1401               	bsf	1,0	;volatile
   480  0035                     l690:
   481                           
   482                           ;Codigo_C.c: 87:     TMR0 = 159;
   483  0035  309F               	movlw	159
   484  0036  1283               	bcf	3,5	;RP0=0, select bank0
   485  0037  1303               	bcf	3,6	;RP1=0, select bank0
   486  0038  0081               	movwf	1	;volatile
   487  0039                     l692:
   488                           
   489                           ;Codigo_C.c: 89:     INTCONbits.GIE = 1;
   490  0039  178B               	bsf	11,7	;volatile
   491  003A                     l694:
   492                           
   493                           ;Codigo_C.c: 90:     INTCONbits.RBIE = 1;
   494  003A  158B               	bsf	11,3	;volatile
   495  003B                     l696:
   496                           
   497                           ;Codigo_C.c: 91:     INTCONbits.RBIF = 0;
   498  003B  100B               	bcf	11,0	;volatile
   499  003C                     l698:
   500                           
   501                           ;Codigo_C.c: 92:     INTCONbits.T0IF = 0;
   502  003C  110B               	bcf	11,2	;volatile
   503  003D                     l700:
   504                           
   505                           ;Codigo_C.c: 93:     INTCONbits.T0IE = 1;
   506  003D  168B               	bsf	11,5	;volatile
   507  003E                     l58:
   508  003E  0008               	return
   509  003F                     __end_of_setup:
   510                           
   511                           	psect	text2
   512  003F                     __ptext2:	
   513 ;; *************** function _isr *****************
   514 ;; Defined at:
   515 ;;		line 33 in file "Codigo_C.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          3       0       0       0       0
   532 ;;      Totals:         3       0       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		Interrupt level 1
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542  003F                     _isr:	
   543                           ;psect for function _isr
   544                           
   545  003F                     i1l702:
   546                           
   547                           ;Codigo_C.c: 34:     if(INTCONbits.RBIF){
   548  003F  1C0B               	btfss	11,0	;volatile
   549  0040  2842               	goto	u1_21
   550  0041  2843               	goto	u1_20
   551  0042                     u1_21:
   552  0042  2854               	goto	i1l714
   553  0043                     u1_20:
   554  0043                     i1l704:
   555                           
   556                           ;Codigo_C.c: 35:         if (!PORTBbits.RB0)
   557  0043  1283               	bcf	3,5	;RP0=0, select bank0
   558  0044  1303               	bcf	3,6	;RP1=0, select bank0
   559  0045  1806               	btfsc	6,0	;volatile
   560  0046  2848               	goto	u2_21
   561  0047  2849               	goto	u2_20
   562  0048                     u2_21:
   563  0048  284D               	goto	i1l708
   564  0049                     u2_20:
   565  0049                     i1l706:
   566                           
   567                           ;Codigo_C.c: 36:             ++PORTA;
   568  0049  3001               	movlw	1
   569  004A  00F0               	movwf	??_isr
   570  004B  0870               	movf	??_isr,w
   571  004C  0785               	addwf	5,f	;volatile
   572  004D                     i1l708:
   573                           
   574                           ;Codigo_C.c: 37:         if(!PORTBbits.RB1)
   575  004D  1886               	btfsc	6,1	;volatile
   576  004E  2850               	goto	u3_21
   577  004F  2851               	goto	u3_20
   578  0050                     u3_21:
   579  0050  2853               	goto	i1l712
   580  0051                     u3_20:
   581  0051                     i1l710:
   582                           
   583                           ;Codigo_C.c: 38:             --PORTA;
   584  0051  3001               	movlw	1
   585  0052  0285               	subwf	5,f	;volatile
   586  0053                     i1l712:
   587                           
   588                           ;Codigo_C.c: 39:         INTCONbits.RBIF = 0;
   589  0053  100B               	bcf	11,0	;volatile
   590  0054                     i1l714:
   591                           
   592                           ;Codigo_C.c: 42:     if(INTCONbits.T0IF)
   593  0054  1D0B               	btfss	11,2	;volatile
   594  0055  2857               	goto	u4_21
   595  0056  2858               	goto	u4_20
   596  0057                     u4_21:
   597  0057  285E               	goto	i1l718
   598  0058                     u4_20:
   599  0058                     i1l716:
   600                           
   601                           ;Codigo_C.c: 43:         ++PORTD;
   602  0058  3001               	movlw	1
   603  0059  00F0               	movwf	??_isr
   604  005A  0870               	movf	??_isr,w
   605  005B  1283               	bcf	3,5	;RP0=0, select bank0
   606  005C  1303               	bcf	3,6	;RP1=0, select bank0
   607  005D  0788               	addwf	8,f	;volatile
   608  005E                     i1l718:
   609                           
   610                           ;Codigo_C.c: 44:     INTCONbits.T0IF = 0;
   611  005E  110B               	bcf	11,2	;volatile
   612  005F                     i1l720:
   613                           
   614                           ;Codigo_C.c: 45:     TMR0 = 159;
   615  005F  309F               	movlw	159
   616  0060  1283               	bcf	3,5	;RP0=0, select bank0
   617  0061  1303               	bcf	3,6	;RP1=0, select bank0
   618  0062  0081               	movwf	1	;volatile
   619  0063                     i1l47:
   620  0063  0872               	movf	??_isr+2,w
   621  0064  008A               	movwf	10
   622  0065  0E71               	swapf	??_isr+1,w
   623  0066  0083               	movwf	3
   624  0067  0EFE               	swapf	btemp,f
   625  0068  0E7E               	swapf	btemp,w
   626  0069  0009               	retfie
   627  006A                     __end_of_isr:
   628  007E                     btemp	set	126	;btemp
   629  007E                     wtemp0	set	126
   630                           
   631                           	psect	intentry
   632  0004                     __pintentry:	
   633                           ;incstack = 0
   634                           ; Regs used in _isr: [wreg+status,2+status,0]
   635                           
   636  0004                     interrupt_function:
   637  007E                     saved_w	set	btemp
   638  0004  00FE               	movwf	btemp
   639  0005  0E03               	swapf	3,w
   640  0006  00F1               	movwf	??_isr+1
   641  0007  080A               	movf	10,w
   642  0008  00F2               	movwf	??_isr+2
   643  0009  120A  118A  283F   	ljmp	_isr
   644                           
   645                           	psect	idloc
   646                           
   647                           ;Config register IDLOC0 @ 0x2000
   648                           ;	unspecified, using default values
   649  2000                     	org	8192
   650  2000  3FFF               	dw	16383
   651                           
   652                           ;Config register IDLOC1 @ 0x2001
   653                           ;	unspecified, using default values
   654  2001                     	org	8193
   655  2001  3FFF               	dw	16383
   656                           
   657                           ;Config register IDLOC2 @ 0x2002
   658                           ;	unspecified, using default values
   659  2002                     	org	8194
   660  2002  3FFF               	dw	16383
   661                           
   662                           ;Config register IDLOC3 @ 0x2003
   663                           ;	unspecified, using default values
   664  2003                     	org	8195
   665  2003  3FFF               	dw	16383
   666                           
   667                           	psect	config
   668                           
   669                           ;Config register CONFIG1 @ 0x2007
   670                           ;	Oscillator Selection bits
   671                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   672                           ;	Watchdog Timer Enable bit
   673                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   674                           ;	Power-up Timer Enable bit
   675                           ;	PWRTE = OFF, PWRT disabled
   676                           ;	RE3/MCLR pin function select bit
   677                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   678                           ;	Code Protection bit
   679                           ;	CP = OFF, Program memory code protection is disabled
   680                           ;	Data Code Protection bit
   681                           ;	CPD = OFF, Data memory code protection is disabled
   682                           ;	Brown Out Reset Selection bits
   683                           ;	BOREN = OFF, BOR disabled
   684                           ;	Internal External Switchover bit
   685                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   686                           ;	Fail-Safe Clock Monitor Enabled bit
   687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   688                           ;	Low Voltage Programming Enable bit
   689                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   690                           ;	In-Circuit Debugger Mode bit
   691                           ;	DEBUG = 0x1, unprogrammed default
   692  2007                     	org	8199
   693  2007  20D4               	dw	8404
   694                           
   695                           ;Config register CONFIG2 @ 0x2008
   696                           ;	Brown-out Reset Selection bit
   697                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   698                           ;	Flash Program Memory Self Write Enable bits
   699                           ;	WRT = OFF, Write protection off
   700  2008                     	org	8200
   701  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Apr 03 00:39:06 2022

                      pc 0002                       l52 0085                       l53 0085  
                     l58 003E                       fsr 0004                      l700 003D  
                    l650 0013                      l660 0020                      l652 0017  
                    l724 0080                      l670 0027                      l662 0021  
                    l654 001D                      l680 0030                      l672 002A  
                    l664 0024                      l656 001E                      l690 0035  
                    l682 0031                      l674 002B                      l666 0025  
                    l658 001F                      l692 0039                      l684 0032  
                    l676 002C                      l668 0026                      l694 003A  
                    l686 0033                      l678 002E                      l696 003B  
                    l688 0034                      l698 003C                      _isr 003F  
                   ?_isr 0070                     i1l47 0063                     _TMR0 0001  
                   u1_20 0043                     u1_21 0042                     u2_20 0049  
                   u2_21 0048                     u3_20 0051                     u3_21 0050  
                   u4_20 0058                     u4_21 0057                     _main 0080  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l710 0051  
                  i1l702 003F                    i1l720 005F                    i1l712 0053  
                  i1l704 0043                    i1l706 0049                    i1l714 0054  
                  i1l716 0058                    i1l708 004D                    i1l718 005E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _tabla 0070                    _setup 0013  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0089                   ??_main 0073  
                 ?_setup 0070                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070            __end_of_tabla 0080  
          __end_of_setup 003F           _OPTION_REGbits 0081                  ??_setup 0073  
             __pmaintext 0080               __pintentry 0004               __stringtab 006A  
                __ptext1 0013                  __ptext2 003F     end_of_initialization 000F  
              _PORTBbits 0006                _TRISBbits 0086      start_initialization 000F  
            __end_of_isr 006A                ___latbits 0002                __pstrings 006A  
      interrupt_function 0004                 _IOCBbits 0096              __stringbase 006F  
               _WPUBbits 0095       __end_of__stringtab 0070               _INTCONbits 000B  
               intlevel1 0000                stringcode 006A               _OSCCONbits 008F  
               stringdir 006A                 stringtab 006A  

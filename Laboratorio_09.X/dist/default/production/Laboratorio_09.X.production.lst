

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Apr 24 20:29:48 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  000B                     _INTCONbits	set	11
   207  0012                     _T2CONbits	set	18
   208  0017                     _CCP1CON	set	23
   209  0005                     _PORTA	set	5
   210  0017                     _CCP1CONbits	set	23
   211  001E                     _ADRESH	set	30
   212  0015                     _CCPR1L	set	21
   213  001F                     _ADCON0bits	set	31
   214  000C                     _PIR1bits	set	12
   215  008C                     _PIE1bits	set	140
   216  0092                     _PR2	set	146
   217  0087                     _TRISCbits	set	135
   218  009F                     _ADCON1bits	set	159
   219  0085                     _TRISA	set	133
   220  008F                     _OSCCONbits	set	143
   221  0189                     _ANSELH	set	393
   222  0188                     _ANSEL	set	392
   223                           
   224                           	psect	cinit
   225  000F                     start_initialization:	
   226                           ; #config settings
   227                           
   228  000F                     __initialization:
   229                           
   230                           ; Clear objects allocated to COMMON
   231  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   232  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   233  0011                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0011                     __end_of__initialization:
   237  0011  0183               	clrf	3
   238  0012  120A  118A  288B   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0074                     __pbssCOMMON:
   242  0074                     _CCPR:
   243  0074                     	ds	2
   244                           
   245                           	psect	cstackCOMMON
   246  0070                     __pcstackCOMMON:
   247  0070                     ?_setup:
   248  0070                     ?_isr:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_isr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0070                     	ds	3
   260  0073                     ??_setup:
   261                           
   262                           ; 1 bytes @ 0x3
   263  0073                     	ds	1
   264  0074                     ??_main:
   265                           
   266                           	psect	maintext
   267  008B                     __pmaintext:	
   268                           ; 1 bytes @ 0x4
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 49 in file "PWM.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 2
   294 ;; This function calls:
   295 ;;		_setup
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301  008B                     _main:	
   302                           ;psect for function _main
   303                           
   304  008B                     l709:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;PWM.c: 50:     setup();
   310  008B  120A  118A  2015  120A  118A  	fcall	_setup
   311  0090                     l711:
   312                           
   313                           ;PWM.c: 52:         if(ADCON0bits.GO == 0){
   314  0090  1283               	bcf	3,5	;RP0=0, select bank0
   315  0091  1303               	bcf	3,6	;RP1=0, select bank0
   316  0092  189F               	btfsc	31,1	;volatile
   317  0093  2895               	goto	u51
   318  0094  2896               	goto	u50
   319  0095                     u51:
   320  0095  2890               	goto	l711
   321  0096                     u50:
   322  0096                     l713:
   323                           
   324                           ;PWM.c: 53:             ADCON0bits.GO = 1;
   325  0096  149F               	bsf	31,1	;volatile
   326  0097  2890               	goto	l711
   327  0098  120A  118A  280C   	ljmp	start
   328  009B                     __end_of_main:
   329                           
   330                           	psect	text1
   331  0015                     __ptext1:	
   332 ;; *************** function _setup *****************
   333 ;; Defined at:
   334 ;;		line 59 in file "PWM.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0
   350 ;;      Temps:          1       0       0       0       0
   351 ;;      Totals:         1       0       0       0       0
   352 ;;Total ram usage:        1 bytes
   353 ;; Hardware stack levels used: 1
   354 ;; Hardware stack levels required when called: 1
   355 ;; This function calls:
   356 ;;		Nothing
   357 ;; This function is called by:
   358 ;;		_main
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362  0015                     _setup:	
   363                           ;psect for function _setup
   364                           
   365  0015                     l657:	
   366                           ;incstack = 0
   367                           ; Regs used in _setup: [wreg+status,2+status,0]
   368                           
   369                           
   370                           ;PWM.c: 60:     ANSEL =0b00000001;
   371  0015  3001               	movlw	1
   372  0016  1683               	bsf	3,5	;RP0=1, select bank3
   373  0017  1703               	bsf	3,6	;RP1=1, select bank3
   374  0018  0088               	movwf	8	;volatile
   375  0019                     l659:
   376                           
   377                           ;PWM.c: 61:     ANSELH = 0x00;
   378  0019  0189               	clrf	9	;volatile
   379  001A                     l661:
   380                           
   381                           ;PWM.c: 63:     OSCCONbits.IRCF = 0b0100;
   382  001A  1683               	bsf	3,5	;RP0=1, select bank1
   383  001B  1303               	bcf	3,6	;RP1=0, select bank1
   384  001C  080F               	movf	15,w	;volatile
   385  001D  398F               	andlw	-113
   386  001E  3840               	iorlw	64
   387  001F  008F               	movwf	15	;volatile
   388  0020                     l663:
   389                           
   390                           ;PWM.c: 64:     OSCCONbits.SCS = 1;
   391  0020  140F               	bsf	15,0	;volatile
   392  0021                     l665:
   393                           
   394                           ;PWM.c: 66:     TRISA = 0b00000001;
   395  0021  3001               	movlw	1
   396  0022  0085               	movwf	5	;volatile
   397  0023                     l667:
   398                           
   399                           ;PWM.c: 67:     PORTA = 0x00;
   400  0023  1283               	bcf	3,5	;RP0=0, select bank0
   401  0024  1303               	bcf	3,6	;RP1=0, select bank0
   402  0025  0185               	clrf	5	;volatile
   403                           
   404                           ;PWM.c: 70:     ADCON0bits.ADCS = 0b00;
   405  0026  303F               	movlw	-193
   406  0027  059F               	andwf	31,f	;volatile
   407  0028                     l669:
   408                           
   409                           ;PWM.c: 72:     ADCON1bits.VCFG0 = 0;
   410  0028  1683               	bsf	3,5	;RP0=1, select bank1
   411  0029  1303               	bcf	3,6	;RP1=0, select bank1
   412  002A  121F               	bcf	31,4	;volatile
   413  002B                     l671:
   414                           
   415                           ;PWM.c: 73:     ADCON1bits.VCFG1 = 1;
   416  002B  169F               	bsf	31,5	;volatile
   417                           
   418                           ;PWM.c: 75:     ADCON0bits.CHS = 0b0000;
   419  002C  30C3               	movlw	-61
   420  002D  1283               	bcf	3,5	;RP0=0, select bank0
   421  002E  1303               	bcf	3,6	;RP1=0, select bank0
   422  002F  059F               	andwf	31,f	;volatile
   423  0030                     l673:
   424                           
   425                           ;PWM.c: 76:     ADCON1bits.ADFM = 0;
   426  0030  1683               	bsf	3,5	;RP0=1, select bank1
   427  0031  1303               	bcf	3,6	;RP1=0, select bank1
   428  0032  139F               	bcf	31,7	;volatile
   429  0033                     l675:
   430                           
   431                           ;PWM.c: 77:     ADCON0bits.ADON = 1;
   432  0033  1283               	bcf	3,5	;RP0=0, select bank0
   433  0034  1303               	bcf	3,6	;RP1=0, select bank0
   434  0035  141F               	bsf	31,0	;volatile
   435  0036                     l677:
   436                           
   437                           ;PWM.c: 78:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   438  0036  3003               	movlw	3
   439  0037  00F3               	movwf	??_setup
   440  0038                     u67:
   441  0038  0BF3               	decfsz	??_setup,f
   442  0039  2838               	goto	u67
   443  003A                     l679:
   444                           
   445                           ;PWM.c: 81:     TRISCbits.TRISC2 = 1;
   446  003A  1683               	bsf	3,5	;RP0=1, select bank1
   447  003B  1303               	bcf	3,6	;RP1=0, select bank1
   448  003C  1507               	bsf	7,2	;volatile
   449  003D                     l681:
   450                           
   451                           ;PWM.c: 82:     PR2 = 30;
   452  003D  301E               	movlw	30
   453  003E  0092               	movwf	18	;volatile
   454  003F                     l683:
   455                           
   456                           ;PWM.c: 85:     CCP1CON = 0;
   457  003F  1283               	bcf	3,5	;RP0=0, select bank0
   458  0040  1303               	bcf	3,6	;RP1=0, select bank0
   459  0041  0197               	clrf	23	;volatile
   460  0042                     l685:
   461                           
   462                           ;PWM.c: 86:     CCP1CONbits.P1M = 0;
   463  0042  303F               	movlw	-193
   464  0043  0597               	andwf	23,f	;volatile
   465  0044                     l687:
   466                           
   467                           ;PWM.c: 87:     CCP1CONbits.CCP1M = 0b1100;
   468  0044  0817               	movf	23,w	;volatile
   469  0045  39F0               	andlw	-16
   470  0046  380C               	iorlw	12
   471  0047  0097               	movwf	23	;volatile
   472  0048                     l689:
   473                           
   474                           ;PWM.c: 89:     CCPR1L = 31>>2;
   475  0048  3007               	movlw	7
   476  0049  0095               	movwf	21	;volatile
   477  004A                     l691:
   478                           
   479                           ;PWM.c: 90:     CCP1CONbits.DC1B = 31 & 0b11;
   480  004A  3030               	movlw	48
   481  004B  0497               	iorwf	23,f	;volatile
   482  004C                     l693:
   483                           
   484                           ;PWM.c: 92:     PIR1bits.TMR2IF = 0;
   485  004C  108C               	bcf	12,1	;volatile
   486  004D                     l695:
   487                           
   488                           ;PWM.c: 93:     T2CONbits.T2CKPS = 0b11;
   489  004D  3003               	movlw	3
   490  004E  0492               	iorwf	18,f	;volatile
   491  004F                     l697:
   492                           
   493                           ;PWM.c: 94:     T2CONbits.TMR2ON = 1;
   494  004F  1512               	bsf	18,2	;volatile
   495  0050                     l59:	
   496                           ;PWM.c: 95:     while(!PIR1bits.TMR2IF);
   497                           
   498  0050  1C8C               	btfss	12,1	;volatile
   499  0051  2853               	goto	u11
   500  0052  2854               	goto	u10
   501  0053                     u11:
   502  0053  2850               	goto	l59
   503  0054                     u10:
   504  0054                     l61:
   505                           
   506                           ;PWM.c: 96:     PIR1bits.TMR2IF = 0;
   507  0054  108C               	bcf	12,1	;volatile
   508                           
   509                           ;PWM.c: 98:     TRISCbits.TRISC2 = 0;
   510  0055  1683               	bsf	3,5	;RP0=1, select bank1
   511  0056  1303               	bcf	3,6	;RP1=0, select bank1
   512  0057  1107               	bcf	7,2	;volatile
   513                           
   514                           ;PWM.c: 101:     PIR1bits.ADIF = 0;
   515  0058  1283               	bcf	3,5	;RP0=0, select bank0
   516  0059  1303               	bcf	3,6	;RP1=0, select bank0
   517  005A  130C               	bcf	12,6	;volatile
   518                           
   519                           ;PWM.c: 102:     PIE1bits.ADIE = 1;
   520  005B  1683               	bsf	3,5	;RP0=1, select bank1
   521  005C  1303               	bcf	3,6	;RP1=0, select bank1
   522  005D  170C               	bsf	12,6	;volatile
   523                           
   524                           ;PWM.c: 103:     INTCONbits.PEIE = 1;
   525  005E  170B               	bsf	11,6	;volatile
   526                           
   527                           ;PWM.c: 104:     INTCONbits.GIE = 1;
   528  005F  178B               	bsf	11,7	;volatile
   529  0060                     l62:	
   530                           ;PWM.c: 106:     return;
   531                           
   532  0060  0008               	return
   533  0061                     __end_of_setup:
   534                           
   535                           	psect	text2
   536  0061                     __ptext2:	
   537 ;; *************** function _isr *****************
   538 ;; Defined at:
   539 ;;		line 37 in file "PWM.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          3       0       0       0       0
   556 ;;      Totals:         3       0       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		Interrupt level 1
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566  0061                     _isr:	
   567                           ;psect for function _isr
   568                           
   569  0061                     i1l699:
   570                           
   571                           ;PWM.c: 38:     if(PIR1bits.ADIF){
   572  0061  1283               	bcf	3,5	;RP0=0, select bank0
   573  0062  1303               	bcf	3,6	;RP1=0, select bank0
   574  0063  1F0C               	btfss	12,6	;volatile
   575  0064  2866               	goto	u2_21
   576  0065  2867               	goto	u2_20
   577  0066                     u2_21:
   578  0066  2884               	goto	i1l47
   579  0067                     u2_20:
   580  0067                     i1l701:
   581                           
   582                           ;PWM.c: 39:         if(ADCON0bits.CHS == 0){
   583  0067  0C1F               	rrf	31,w	;volatile
   584  0068  00F0               	movwf	??_isr
   585  0069  0C70               	rrf	??_isr,w
   586  006A  390F               	andlw	15
   587  006B  3A00               	xorlw	0
   588  006C  1D03               	skipz
   589  006D  286F               	goto	u3_21
   590  006E  2870               	goto	u3_20
   591  006F                     u3_21:
   592  006F  2883               	goto	i1l705
   593  0070                     u3_20:
   594  0070                     i1l703:
   595                           
   596                           ;PWM.c: 41:             CCPR1L = (uint8_t)(ADRESH>>2);
   597  0070  081E               	movf	30,w	;volatile
   598  0071  00F0               	movwf	??_isr
   599  0072  3002               	movlw	2
   600  0073                     u4_25:
   601  0073  1003               	clrc
   602  0074  0CF0               	rrf	??_isr,f
   603  0075  3EFF               	addlw	-1
   604  0076  1D03               	skipz
   605  0077  2873               	goto	u4_25
   606  0078  0870               	movf	??_isr,w
   607  0079  0095               	movwf	21	;volatile
   608                           
   609                           ;PWM.c: 42:             CCP1CONbits.DC1B = ADRESH & 0b11;
   610  007A  081E               	movf	30,w	;volatile
   611  007B  3903               	andlw	3
   612  007C  00F0               	movwf	??_isr
   613  007D  0EF0               	swapf	??_isr,f
   614  007E  0817               	movf	23,w	;volatile
   615  007F  0670               	xorwf	??_isr,w
   616  0080  39CF               	andlw	-49
   617  0081  0670               	xorwf	??_isr,w
   618  0082  0097               	movwf	23	;volatile
   619  0083                     i1l705:
   620                           
   621                           ;PWM.c: 44:         PIR1bits.ADIF = 0;
   622  0083  130C               	bcf	12,6	;volatile
   623  0084                     i1l47:
   624  0084  0872               	movf	??_isr+2,w
   625  0085  008A               	movwf	10
   626  0086  0E71               	swapf	??_isr+1,w
   627  0087  0083               	movwf	3
   628  0088  0EFE               	swapf	btemp,f
   629  0089  0E7E               	swapf	btemp,w
   630  008A  0009               	retfie
   631  008B                     __end_of_isr:
   632  007E                     btemp	set	126	;btemp
   633  007E                     wtemp0	set	126
   634                           
   635                           	psect	intentry
   636  0004                     __pintentry:	
   637                           ;incstack = 0
   638                           ; Regs used in _isr: [wreg+status,2+status,0]
   639                           
   640  0004                     interrupt_function:
   641  007E                     saved_w	set	btemp
   642  0004  00FE               	movwf	btemp
   643  0005  0E03               	swapf	3,w
   644  0006  00F1               	movwf	??_isr+1
   645  0007  080A               	movf	10,w
   646  0008  00F2               	movwf	??_isr+2
   647  0009  120A  118A  2861   	ljmp	_isr
   648                           
   649                           	psect	idloc
   650                           
   651                           ;Config register IDLOC0 @ 0x2000
   652                           ;	unspecified, using default values
   653  2000                     	org	8192
   654  2000  3FFF               	dw	16383
   655                           
   656                           ;Config register IDLOC1 @ 0x2001
   657                           ;	unspecified, using default values
   658  2001                     	org	8193
   659  2001  3FFF               	dw	16383
   660                           
   661                           ;Config register IDLOC2 @ 0x2002
   662                           ;	unspecified, using default values
   663  2002                     	org	8194
   664  2002  3FFF               	dw	16383
   665                           
   666                           ;Config register IDLOC3 @ 0x2003
   667                           ;	unspecified, using default values
   668  2003                     	org	8195
   669  2003  3FFF               	dw	16383
   670                           
   671                           	psect	config
   672                           
   673                           ;Config register CONFIG1 @ 0x2007
   674                           ;	Oscillator Selection bits
   675                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   676                           ;	Watchdog Timer Enable bit
   677                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   678                           ;	Power-up Timer Enable bit
   679                           ;	PWRTE = OFF, PWRT disabled
   680                           ;	RE3/MCLR pin function select bit
   681                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   682                           ;	Code Protection bit
   683                           ;	CP = OFF, Program memory code protection is disabled
   684                           ;	Data Code Protection bit
   685                           ;	CPD = OFF, Data memory code protection is disabled
   686                           ;	Brown Out Reset Selection bits
   687                           ;	BOREN = OFF, BOR disabled
   688                           ;	Internal External Switchover bit
   689                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   690                           ;	Fail-Safe Clock Monitor Enabled bit
   691                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   692                           ;	Low Voltage Programming Enable bit
   693                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   694                           ;	In-Circuit Debugger Mode bit
   695                           ;	DEBUG = 0x1, unprogrammed default
   696  2007                     	org	8199
   697  2007  20D4               	dw	8404
   698                           
   699                           ;Config register CONFIG2 @ 0x2008
   700                           ;	Brown-out Reset Selection bit
   701                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   702                           ;	Flash Program Memory Self Write Enable bits
   703                           ;	WRT = OFF, Write protection off
   704  2008                     	org	8200
   705  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Apr 24 20:29:48 2022

                     l61 0054                       l62 0060                       l59 0050  
                     u10 0054                       u11 0053                       u50 0096  
                     u51 0095                       u67 0038                      l711 0090  
                    l713 0096                      l661 001A                      l709 008B  
                    l671 002B                      l663 0020                      l681 003D  
                    l673 0030                      l665 0021                      l657 0015  
                    l691 004A                      l683 003F                      l675 0033  
                    l667 0023                      l659 0019                      l693 004C  
                    l685 0042                      l677 0036                      l669 0028  
                    l695 004D                      l687 0044                      l679 003A  
                    l697 004F                      l689 0048                      _PR2 0092  
                    _isr 0061                     ?_isr 0070                     _CCPR 0074  
                   i1l47 0084                     u2_20 0067                     u2_21 0066  
                   u3_20 0070                     u3_21 006F                     u4_25 0073  
                   _main 008B                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l701 0067                    i1l703 0070                    i1l705 0083  
                  i1l699 0061                    _PORTA 0005                    _TRISA 0085  
                  _setup 0015                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 009B  
                 ??_main 0074                   _ADRESH 001E                   _CCPR1L 0015  
                 ?_setup 0070                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0061  
                ??_setup 0073               __pmaintext 008B               __pintentry 0004  
                _CCP1CON 0017                  __ptext1 0015                  __ptext2 0061  
              _T2CONbits 0012     end_of_initialization 0011                _TRISCbits 0087  
            _CCP1CONbits 0017      start_initialization 000F              __end_of_isr 008B  
            __pbssCOMMON 0074                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  

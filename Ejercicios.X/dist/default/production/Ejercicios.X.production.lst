

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Mar 29 14:02:02 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	strings
   209  008E                     __pstrings:
   210  008E                     stringtab:
   211  008E                     __stringtab:
   212  008E                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215  008E                     stringdir:
   216  008E  3000               	movlw	high stringdir
   217  008F  008A               	movwf	10
   218  0090  0804               	movf	4,w
   219  0091  0A84               	incf	4,f
   220  0092  0782               	addwf	2,f
   221  0093                     __stringbase:
   222  0093  3400               	retlw	0
   223  0094                     __end_of__stringtab:
   224  0094                     _valores:
   225  0094  3413               	retlw	19
   226  0095  3407               	retlw	7
   227  0096  3403               	retlw	3
   228  0097  340A               	retlw	10
   229  0098  340F               	retlw	15
   230  0099  3401               	retlw	1
   231  009A  3406               	retlw	6
   232  009B  3412               	retlw	18
   233  009C  3414               	retlw	20
   234  009D  340E               	retlw	14
   235  009E                     __end_of_valores:
   236  0006                     _PORTB	set	6
   237  0007                     _PORTC	set	7
   238  0005                     _PORTA	set	5
   239  0006                     _PORTBbits	set	6
   240  000B                     _INTCONbits	set	11
   241  0096                     _IOCBbits	set	150
   242  0095                     _WPUBbits	set	149
   243  0081                     _OPTION_REGbits	set	129
   244  0086                     _TRISBbits	set	134
   245  0087                     _TRISC	set	135
   246  0086                     _TRISB	set	134
   247  0085                     _TRISA	set	133
   248  008F                     _OSCCONbits	set	143
   249  0189                     _ANSELH	set	393
   250  0188                     _ANSEL	set	392
   251                           
   252                           	psect	cinit
   253  000F                     start_initialization:	
   254                           ; #config settings
   255                           
   256  000F                     __initialization:
   257                           
   258                           ; Clear objects allocated to COMMON
   259  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   260  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   261  0011                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0011                     __end_of__initialization:
   265  0011  0183               	clrf	3
   266  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  0075                     __pbssCOMMON:
   270  0075                     _comparar:
   271  0075                     	ds	1
   272  0076                     _contador:
   273  0076                     	ds	1
   274                           
   275                           	psect	cstackCOMMON
   276  0070                     __pcstackCOMMON:
   277  0070                     ?_setup:
   278  0070                     ?_isr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_isr:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  0070                     	ds	3
   290  0073                     ??_setup:
   291  0073                     ??_main:	
   292                           ; 1 bytes @ 0x3
   293                           
   294                           
   295                           ; 1 bytes @ 0x3
   296  0073                     	ds	1
   297  0074                     main@i:
   298                           
   299                           ; 1 bytes @ 0x4
   300  0074                     	ds	1
   301                           
   302                           	psect	maintext
   303  0015                     __pmaintext:	
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 48 in file "Ej_04.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  i               1    4[COMMON] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         1       0       0       0       0
   325 ;;      Temps:          1       0       0       0       0
   326 ;;      Totals:         2       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_setup
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336  0015                     _main:	
   337                           ;psect for function _main
   338                           
   339  0015                     l736:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;Ej_04.c: 49:     setup();
   345  0015  120A  118A  2052  120A  118A  	fcall	_setup
   346  001A                     l738:
   347                           
   348                           ;Ej_04.c: 52:         PORTA = contador;
   349  001A  0876               	movf	_contador,w
   350  001B  1283               	bcf	3,5	;RP0=0, select bank0
   351  001C  1303               	bcf	3,6	;RP1=0, select bank0
   352  001D  0085               	movwf	5	;volatile
   353  001E                     l740:
   354                           
   355                           ;Ej_04.c: 55:         if(contador==21)
   356  001E  3015               	movlw	21
   357  001F  0676               	xorwf	_contador,w
   358  0020  1D03               	btfss	3,2
   359  0021  2823               	goto	u81
   360  0022  2824               	goto	u80
   361  0023                     u81:
   362  0023  2825               	goto	l744
   363  0024                     u80:
   364  0024                     l742:
   365                           
   366                           ;Ej_04.c: 56:             contador=0;
   367  0024  01F6               	clrf	_contador
   368  0025                     l744:
   369                           
   370                           ;Ej_04.c: 57:         if(contador==255)
   371  0025  0A76               	incf	_contador,w
   372  0026  1D03               	btfss	3,2
   373  0027  2829               	goto	u91
   374  0028  282A               	goto	u90
   375  0029                     u91:
   376  0029  282E               	goto	l748
   377  002A                     u90:
   378  002A                     l746:
   379                           
   380                           ;Ej_04.c: 58:             contador=20;
   381  002A  3014               	movlw	20
   382  002B  00F3               	movwf	??_main
   383  002C  0873               	movf	??_main,w
   384  002D  00F6               	movwf	_contador
   385  002E                     l748:
   386                           
   387                           ;Ej_04.c: 60:         for(uint8_t i=0; i<7;++i){
   388  002E  01F4               	clrf	main@i
   389  002F                     l754:
   390                           
   391                           ;Ej_04.c: 62:             if(contador == valores[i])
   392  002F  0874               	movf	main@i,w
   393  0030  3E01               	addlw	low ((_valores-__stringbase)| (0+32768))
   394  0031  0084               	movwf	4
   395  0032  120A  118A  208E  120A  118A  	fcall	stringdir
   396  0037  0676               	xorwf	_contador,w
   397  0038  1D03               	skipz
   398  0039  283B               	goto	u101
   399  003A  283C               	goto	u100
   400  003B                     u101:
   401  003B  2840               	goto	l758
   402  003C                     u100:
   403  003C                     l756:
   404                           
   405                           ;Ej_04.c: 63:                 comparar = i;
   406  003C  0874               	movf	main@i,w
   407  003D  00F3               	movwf	??_main
   408  003E  0873               	movf	??_main,w
   409  003F  00F5               	movwf	_comparar
   410  0040                     l758:
   411                           
   412                           ;Ej_04.c: 64:         }
   413  0040  3001               	movlw	1
   414  0041  00F3               	movwf	??_main
   415  0042  0873               	movf	??_main,w
   416  0043  07F4               	addwf	main@i,f
   417  0044                     l760:
   418  0044  3007               	movlw	7
   419  0045  0274               	subwf	main@i,w
   420  0046  1C03               	skipc
   421  0047  2849               	goto	u111
   422  0048  284A               	goto	u110
   423  0049                     u111:
   424  0049  282F               	goto	l754
   425  004A                     u110:
   426  004A                     l762:
   427                           
   428                           ;Ej_04.c: 65:         PORTC = comparar;
   429  004A  0875               	movf	_comparar,w
   430  004B  1283               	bcf	3,5	;RP0=0, select bank0
   431  004C  1303               	bcf	3,6	;RP1=0, select bank0
   432  004D  0087               	movwf	7	;volatile
   433  004E  281A               	goto	l738
   434  004F  120A  118A  280C   	ljmp	start
   435  0052                     __end_of_main:
   436                           
   437                           	psect	text1
   438  0052                     __ptext1:	
   439 ;; *************** function _setup *****************
   440 ;; Defined at:
   441 ;;		line 73 in file "Ej_04.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469  0052                     _setup:	
   470                           ;psect for function _setup
   471                           
   472  0052                     l654:	
   473                           ;incstack = 0
   474                           ; Regs used in _setup: [wreg+status,2+status,0]
   475                           
   476                           
   477                           ;Ej_04.c: 75:     ANSEL = 0x00;
   478  0052  1683               	bsf	3,5	;RP0=1, select bank3
   479  0053  1703               	bsf	3,6	;RP1=1, select bank3
   480  0054  0188               	clrf	8	;volatile
   481                           
   482                           ;Ej_04.c: 76:     ANSELH = 0x00;
   483  0055  0189               	clrf	9	;volatile
   484  0056                     l656:
   485                           
   486                           ;Ej_04.c: 78:     OSCCONbits.IRCF = 0b0110;
   487  0056  1683               	bsf	3,5	;RP0=1, select bank1
   488  0057  1303               	bcf	3,6	;RP1=0, select bank1
   489  0058  080F               	movf	15,w	;volatile
   490  0059  398F               	andlw	-113
   491  005A  3860               	iorlw	96
   492  005B  008F               	movwf	15	;volatile
   493  005C                     l658:
   494                           
   495                           ;Ej_04.c: 79:     OSCCONbits.SCS = 1;
   496  005C  140F               	bsf	15,0	;volatile
   497  005D                     l660:
   498                           
   499                           ;Ej_04.c: 81:     TRISA = 0x00;
   500  005D  0185               	clrf	5	;volatile
   501  005E                     l662:
   502                           
   503                           ;Ej_04.c: 82:     TRISB = 0x00;
   504  005E  0186               	clrf	6	;volatile
   505  005F                     l664:
   506                           
   507                           ;Ej_04.c: 83:     TRISC = 0x00;
   508  005F  0187               	clrf	7	;volatile
   509  0060                     l666:
   510                           
   511                           ;Ej_04.c: 85:     PORTA = 0x00;
   512  0060  1283               	bcf	3,5	;RP0=0, select bank0
   513  0061  1303               	bcf	3,6	;RP1=0, select bank0
   514  0062  0185               	clrf	5	;volatile
   515  0063                     l668:
   516                           
   517                           ;Ej_04.c: 86:     PORTB = 0x00;
   518  0063  0186               	clrf	6	;volatile
   519  0064                     l670:
   520                           
   521                           ;Ej_04.c: 87:     PORTC = 0x00;
   522  0064  0187               	clrf	7	;volatile
   523  0065                     l672:
   524                           
   525                           ;Ej_04.c: 89:     TRISBbits.TRISB0 = 1;
   526  0065  1683               	bsf	3,5	;RP0=1, select bank1
   527  0066  1303               	bcf	3,6	;RP1=0, select bank1
   528  0067  1406               	bsf	6,0	;volatile
   529  0068                     l674:
   530                           
   531                           ;Ej_04.c: 90:     TRISBbits.TRISB1 = 1;
   532  0068  1486               	bsf	6,1	;volatile
   533  0069                     l676:
   534                           
   535                           ;Ej_04.c: 91:     OPTION_REGbits.nRBPU = 0;
   536  0069  1381               	bcf	1,7	;volatile
   537  006A                     l678:
   538                           
   539                           ;Ej_04.c: 92:     WPUBbits.WPUB0 = 1;
   540  006A  1415               	bsf	21,0	;volatile
   541  006B                     l680:
   542                           
   543                           ;Ej_04.c: 93:     WPUBbits.WPUB1 = 1;
   544  006B  1495               	bsf	21,1	;volatile
   545  006C                     l682:
   546                           
   547                           ;Ej_04.c: 94:     IOCBbits.IOCB0 = 1;
   548  006C  1416               	bsf	22,0	;volatile
   549  006D                     l684:
   550                           
   551                           ;Ej_04.c: 95:     IOCBbits.IOCB1 = 1;
   552  006D  1496               	bsf	22,1	;volatile
   553  006E                     l686:
   554                           
   555                           ;Ej_04.c: 97:     INTCONbits.GIE = 1;
   556  006E  178B               	bsf	11,7	;volatile
   557  006F                     l688:
   558                           
   559                           ;Ej_04.c: 98:     INTCONbits.RBIE = 1;
   560  006F  158B               	bsf	11,3	;volatile
   561  0070                     l690:
   562                           
   563                           ;Ej_04.c: 99:     INTCONbits.RBIF = 0;
   564  0070  100B               	bcf	11,0	;volatile
   565  0071                     l62:
   566  0071  0008               	return
   567  0072                     __end_of_setup:
   568                           
   569                           	psect	text2
   570  0072                     __ptext2:	
   571 ;; *************** function _isr *****************
   572 ;; Defined at:
   573 ;;		line 33 in file "Ej_04.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          3       0       0       0       0
   590 ;;      Totals:         3       0       0       0       0
   591 ;;Total ram usage:        3 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		Interrupt level 1
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600  0072                     _isr:	
   601                           ;psect for function _isr
   602                           
   603  0072                     i1l694:
   604                           
   605                           ;Ej_04.c: 35:     if(INTCONbits.RBIF){
   606  0072  1C0B               	btfss	11,0	;volatile
   607  0073  2875               	goto	u1_21
   608  0074  2876               	goto	u1_20
   609  0075                     u1_21:
   610  0075  2887               	goto	i1l46
   611  0076                     u1_20:
   612  0076                     i1l696:
   613                           
   614                           ;Ej_04.c: 36:         if (!PORTBbits.RB0)
   615  0076  1283               	bcf	3,5	;RP0=0, select bank0
   616  0077  1303               	bcf	3,6	;RP1=0, select bank0
   617  0078  1806               	btfsc	6,0	;volatile
   618  0079  287B               	goto	u2_21
   619  007A  287C               	goto	u2_20
   620  007B                     u2_21:
   621  007B  2880               	goto	i1l700
   622  007C                     u2_20:
   623  007C                     i1l698:
   624                           
   625                           ;Ej_04.c: 37:             ++contador;
   626  007C  3001               	movlw	1
   627  007D  00F0               	movwf	??_isr
   628  007E  0870               	movf	??_isr,w
   629  007F  07F6               	addwf	_contador,f
   630  0080                     i1l700:
   631                           
   632                           ;Ej_04.c: 38:         if(!PORTBbits.RB1)
   633  0080  1886               	btfsc	6,1	;volatile
   634  0081  2883               	goto	u3_21
   635  0082  2884               	goto	u3_20
   636  0083                     u3_21:
   637  0083  2886               	goto	i1l704
   638  0084                     u3_20:
   639  0084                     i1l702:
   640                           
   641                           ;Ej_04.c: 39:             --contador;
   642  0084  3001               	movlw	1
   643  0085  02F6               	subwf	_contador,f
   644  0086                     i1l704:
   645                           
   646                           ;Ej_04.c: 41:         INTCONbits.RBIF = 0;
   647  0086  100B               	bcf	11,0	;volatile
   648  0087                     i1l46:
   649  0087  0872               	movf	??_isr+2,w
   650  0088  008A               	movwf	10
   651  0089  0E71               	swapf	??_isr+1,w
   652  008A  0083               	movwf	3
   653  008B  0EFE               	swapf	btemp,f
   654  008C  0E7E               	swapf	btemp,w
   655  008D  0009               	retfie
   656  008E                     __end_of_isr:
   657  007E                     btemp	set	126	;btemp
   658  007E                     wtemp0	set	126
   659                           
   660                           	psect	intentry
   661  0004                     __pintentry:	
   662                           ;incstack = 0
   663                           ; Regs used in _isr: [wreg+status,2+status,0]
   664                           
   665  0004                     interrupt_function:
   666  007E                     saved_w	set	btemp
   667  0004  00FE               	movwf	btemp
   668  0005  0E03               	swapf	3,w
   669  0006  00F1               	movwf	??_isr+1
   670  0007  080A               	movf	10,w
   671  0008  00F2               	movwf	??_isr+2
   672  0009  120A  118A  2872   	ljmp	_isr
   673                           
   674                           	psect	idloc
   675                           
   676                           ;Config register IDLOC0 @ 0x2000
   677                           ;	unspecified, using default values
   678  2000                     	org	8192
   679  2000  3FFF               	dw	16383
   680                           
   681                           ;Config register IDLOC1 @ 0x2001
   682                           ;	unspecified, using default values
   683  2001                     	org	8193
   684  2001  3FFF               	dw	16383
   685                           
   686                           ;Config register IDLOC2 @ 0x2002
   687                           ;	unspecified, using default values
   688  2002                     	org	8194
   689  2002  3FFF               	dw	16383
   690                           
   691                           ;Config register IDLOC3 @ 0x2003
   692                           ;	unspecified, using default values
   693  2003                     	org	8195
   694  2003  3FFF               	dw	16383
   695                           
   696                           	psect	config
   697                           
   698                           ;Config register CONFIG1 @ 0x2007
   699                           ;	Oscillator Selection bits
   700                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   701                           ;	Watchdog Timer Enable bit
   702                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   703                           ;	Power-up Timer Enable bit
   704                           ;	PWRTE = OFF, PWRT disabled
   705                           ;	RE3/MCLR pin function select bit
   706                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   707                           ;	Code Protection bit
   708                           ;	CP = OFF, Program memory code protection is disabled
   709                           ;	Data Code Protection bit
   710                           ;	CPD = OFF, Data memory code protection is disabled
   711                           ;	Brown Out Reset Selection bits
   712                           ;	BOREN = OFF, BOR disabled
   713                           ;	Internal External Switchover bit
   714                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   715                           ;	Fail-Safe Clock Monitor Enabled bit
   716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   717                           ;	Low Voltage Programming Enable bit
   718                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   719                           ;	In-Circuit Debugger Mode bit
   720                           ;	DEBUG = 0x1, unprogrammed default
   721  2007                     	org	8199
   722  2007  20D4               	dw	8404
   723                           
   724                           ;Config register CONFIG2 @ 0x2008
   725                           ;	Brown-out Reset Selection bit
   726                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   727                           ;	Flash Program Memory Self Write Enable bits
   728                           ;	WRT = OFF, Write protection off
   729  2008                     	org	8200
   730  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              3 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Mar 29 14:02:02 2022

                      pc 0002                       l62 0071                       u80 0024  
                     u81 0023                       u90 002A                       u91 0029  
                     fsr 0004                      l660 005D                      l740 001E  
                    l670 0064                      l662 005E                      l654 0052  
                    l742 0024                      l680 006B                      l672 0065  
                    l664 005F                      l656 0056                      l760 0044  
                    l744 0025                      l736 0015                      l690 0070  
                    l682 006C                      l674 0068                      l666 0060  
                    l658 005C                      l762 004A                      l754 002F  
                    l746 002A                      l738 001A                      l684 006D  
                    l676 0069                      l668 0063                      l756 003C  
                    l748 002E                      l686 006E                      l678 006A  
                    l758 0040                      l688 006F                      u100 003C  
                    u101 003B                      u110 004A                      u111 0049  
                    _isr 0072                      fsr0 0004                     ?_isr 0070  
                   i1l46 0087                     u1_20 0076                     u1_21 0075  
                   u2_20 007C                     u2_21 007B                     u3_20 0084  
                   u3_21 0083                     _main 0015                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l700 0080                    i1l702 0084  
                  i1l704 0086                    i1l694 0072                    i1l696 0076  
                  i1l698 007C                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _setup 0052                    main@i 0074  
                  pclath 000A          __end_of_valores 009E                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0052  
                 ??_main 0073                   ?_setup 0070                   _ANSELH 0189  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 0072           _OPTION_REGbits 0081                  ??_setup 0073  
             __pmaintext 0015               __pintentry 0004               __stringtab 008E  
                __ptext1 0052                  __ptext2 0072                  _valores 0094  
   end_of_initialization 0011                _PORTBbits 0006                _TRISBbits 0086  
    start_initialization 000F              __end_of_isr 008E              __pbssCOMMON 0075  
              ___latbits 0002                __pstrings 008E        interrupt_function 0004  
               _IOCBbits 0096              __stringbase 0093                 _WPUBbits 0095  
     __end_of__stringtab 0094                 _comparar 0075                 _contador 0076  
             _INTCONbits 000B                 intlevel1 0000                stringcode 008E  
             _OSCCONbits 008F                 stringdir 008E                 stringtab 008E  

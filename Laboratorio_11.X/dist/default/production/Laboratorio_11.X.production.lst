

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon May 09 16:49:51 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0014                     _SSPCONbits	set	20
   207  0007                     _PORTC	set	7
   208  0006                     _PORTBbits	set	6
   209  000B                     _INTCONbits	set	11
   210  001E                     _ADRESH	set	30
   211  0008                     _PORTD	set	8
   212  001F                     _ADCON0bits	set	31
   213  000C                     _PIR1bits	set	12
   214  0005                     _PORTAbits	set	5
   215  0096                     _IOCBbits	set	150
   216  0095                     _WPUBbits	set	149
   217  0081                     _OPTION_REGbits	set	129
   218  0086                     _TRISBbits	set	134
   219  0094                     _SSPSTATbits	set	148
   220  008C                     _PIE1bits	set	140
   221  009F                     _ADCON1bits	set	159
   222  0087                     _TRISC	set	135
   223  008F                     _OSCCONbits	set	143
   224  0088                     _TRISD	set	136
   225  0085                     _TRISA	set	133
   226  0188                     _ANSEL	set	392
   227  0189                     _ANSELH	set	393
   228                           
   229                           	psect	cinit
   230  000F                     start_initialization:	
   231                           ; #config settings
   232                           
   233  000F                     __initialization:
   234                           
   235                           ; Clear objects allocated to COMMON
   236  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   237  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   239  0012                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0012                     __end_of__initialization:
   243  0012  0183               	clrf	3
   244  0013  120A  118A  28BA   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0076                     __pbssCOMMON:
   248  0076                     _valor_temp:
   249  0076                     	ds	1
   250  0077                     _pot_master:
   251  0077                     	ds	1
   252  0078                     _cont_slave:
   253  0078                     	ds	1
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:
   257  0070                     ?_setup:
   258  0070                     ?_isr:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_isr:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	3
   270  0073                     ??_setup:
   271                           
   272                           ; 1 bytes @ 0x3
   273  0073                     	ds	3
   274  0076                     ??_main:
   275                           
   276                           	psect	maintext
   277  00BA                     __pmaintext:	
   278                           ; 1 bytes @ 0x6
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 59 in file "SPI.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called: 2
   304 ;; This function calls:
   305 ;;		_setup
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311  00BA                     _main:	
   312                           ;psect for function _main
   313                           
   314  00BA                     l771:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;SPI.c: 60:     setup();
   320  00BA  120A  118A  2016  120A  118A  	fcall	_setup
   321  00BF                     l773:
   322                           
   323                           ;SPI.c: 62:         if(ADCON0bits.GO == 0){
   324  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   325  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   326  00C1  189F               	btfsc	31,1	;volatile
   327  00C2  28C4               	goto	u91
   328  00C3  28C5               	goto	u90
   329  00C4                     u91:
   330  00C4  28BF               	goto	l773
   331  00C5                     u90:
   332  00C5                     l775:
   333                           
   334                           ;SPI.c: 63:             ADCON0bits.GO = 1;
   335  00C5  149F               	bsf	31,1	;volatile
   336  00C6  28BF               	goto	l773
   337  00C7  120A  118A  280C   	ljmp	start
   338  00CA                     __end_of_main:
   339                           
   340                           	psect	text1
   341  0016                     __ptext1:	
   342 ;; *************** function _setup *****************
   343 ;; Defined at:
   344 ;;		line 82 in file "SPI.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0
   360 ;;      Temps:          3       0       0       0       0
   361 ;;      Totals:         3       0       0       0       0
   362 ;;Total ram usage:        3 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372  0016                     _setup:	
   373                           ;psect for function _setup
   374                           
   375  0016                     l673:	
   376                           ;incstack = 0
   377                           ; Regs used in _setup: [wreg+status,2+status,0]
   378                           
   379                           
   380                           ;SPI.c: 83:     ANSELH = 0x00;
   381  0016  1683               	bsf	3,5	;RP0=1, select bank3
   382  0017  1703               	bsf	3,6	;RP1=1, select bank3
   383  0018  0189               	clrf	9	;volatile
   384  0019                     l675:
   385                           
   386                           ;SPI.c: 85:     TRISA = 0b00100101;
   387  0019  3025               	movlw	37
   388  001A  1683               	bsf	3,5	;RP0=1, select bank1
   389  001B  1303               	bcf	3,6	;RP1=0, select bank1
   390  001C  0085               	movwf	5	;volatile
   391  001D                     l677:
   392                           
   393                           ;SPI.c: 87:     TRISD = 0x00;
   394  001D  0188               	clrf	8	;volatile
   395  001E                     l679:
   396                           
   397                           ;SPI.c: 88:     PORTD = 0x00;
   398  001E  1283               	bcf	3,5	;RP0=0, select bank0
   399  001F  1303               	bcf	3,6	;RP1=0, select bank0
   400  0020  0188               	clrf	8	;volatile
   401  0021                     l681:
   402                           
   403                           ;SPI.c: 90:     OSCCONbits.IRCF = 0b0100;
   404  0021  1683               	bsf	3,5	;RP0=1, select bank1
   405  0022  1303               	bcf	3,6	;RP1=0, select bank1
   406  0023  080F               	movf	15,w	;volatile
   407  0024  398F               	andlw	-113
   408  0025  3840               	iorlw	64
   409  0026  008F               	movwf	15	;volatile
   410  0027                     l683:
   411                           
   412                           ;SPI.c: 91:     OSCCONbits.SCS = 1;
   413  0027  140F               	bsf	15,0	;volatile
   414  0028                     l685:
   415                           
   416                           ;SPI.c: 92:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   417  0028  3002               	movlw	2
   418  0029  00F5               	movwf	??_setup+2
   419  002A  3045               	movlw	69
   420  002B  00F4               	movwf	??_setup+1
   421  002C  30A9               	movlw	169
   422  002D  00F3               	movwf	??_setup
   423  002E                     u107:
   424  002E  0BF3               	decfsz	??_setup,f
   425  002F  282E               	goto	u107
   426  0030  0BF4               	decfsz	??_setup+1,f
   427  0031  282E               	goto	u107
   428  0032  0BF5               	decfsz	??_setup+2,f
   429  0033  282E               	goto	u107
   430  0034  2835               	nop2
   431  0035                     l687:
   432                           
   433                           ;SPI.c: 94:     if(PORTAbits.RA0){
   434  0035  1283               	bcf	3,5	;RP0=0, select bank0
   435  0036  1303               	bcf	3,6	;RP1=0, select bank0
   436  0037  1C05               	btfss	5,0	;volatile
   437  0038  283A               	goto	u11
   438  0039  283B               	goto	u10
   439  003A                     u11:
   440  003A  2865               	goto	l715
   441  003B                     u10:
   442  003B                     l689:
   443                           
   444                           ;SPI.c: 95:         ANSEL =0b00000100;
   445  003B  3004               	movlw	4
   446  003C  1683               	bsf	3,5	;RP0=1, select bank3
   447  003D  1703               	bsf	3,6	;RP1=1, select bank3
   448  003E  0088               	movwf	8	;volatile
   449                           
   450                           ;SPI.c: 98:         TRISC = 0b00010000;
   451  003F  3010               	movlw	16
   452  0040  1683               	bsf	3,5	;RP0=1, select bank1
   453  0041  1303               	bcf	3,6	;RP1=0, select bank1
   454  0042  0087               	movwf	7	;volatile
   455  0043                     l691:
   456                           
   457                           ;SPI.c: 99:         PORTC = 0x00;
   458  0043  1283               	bcf	3,5	;RP0=0, select bank0
   459  0044  1303               	bcf	3,6	;RP1=0, select bank0
   460  0045  0187               	clrf	7	;volatile
   461  0046                     l693:
   462                           
   463                           ;SPI.c: 110:         ADCON0bits.ADCS = 0b00;
   464  0046  303F               	movlw	-193
   465  0047  059F               	andwf	31,f	;volatile
   466  0048                     l695:
   467                           
   468                           ;SPI.c: 112:         ADCON1bits.VCFG0 = 0;
   469  0048  1683               	bsf	3,5	;RP0=1, select bank1
   470  0049  1303               	bcf	3,6	;RP1=0, select bank1
   471  004A  121F               	bcf	31,4	;volatile
   472  004B                     l697:
   473                           
   474                           ;SPI.c: 113:         ADCON1bits.VCFG1 = 0;
   475  004B  129F               	bcf	31,5	;volatile
   476  004C                     l699:
   477                           
   478                           ;SPI.c: 115:         ADCON0bits.CHS = 0b0010;
   479  004C  1283               	bcf	3,5	;RP0=0, select bank0
   480  004D  1303               	bcf	3,6	;RP1=0, select bank0
   481  004E  081F               	movf	31,w	;volatile
   482  004F  39C3               	andlw	-61
   483  0050  3808               	iorlw	8
   484  0051  009F               	movwf	31	;volatile
   485  0052                     l701:
   486                           
   487                           ;SPI.c: 116:         ADCON1bits.ADFM = 0;
   488  0052  1683               	bsf	3,5	;RP0=1, select bank1
   489  0053  1303               	bcf	3,6	;RP1=0, select bank1
   490  0054  139F               	bcf	31,7	;volatile
   491  0055                     l703:
   492                           
   493                           ;SPI.c: 117:         ADCON0bits.ADON = 1;
   494  0055  1283               	bcf	3,5	;RP0=0, select bank0
   495  0056  1303               	bcf	3,6	;RP1=0, select bank0
   496  0057  141F               	bsf	31,0	;volatile
   497  0058                     l705:
   498                           
   499                           ;SPI.c: 118:         _delay((unsigned long)((40)*(1000000/4000000.0)));
   500  0058  3003               	movlw	3
   501  0059  00F3               	movwf	??_setup
   502  005A                     u117:
   503  005A  0BF3               	decfsz	??_setup,f
   504  005B  285A               	goto	u117
   505  005C                     l707:
   506                           
   507                           ;SPI.c: 121:         PIR1bits.ADIF = 0;
   508  005C  1283               	bcf	3,5	;RP0=0, select bank0
   509  005D  1303               	bcf	3,6	;RP1=0, select bank0
   510  005E  130C               	bcf	12,6	;volatile
   511  005F                     l709:
   512                           
   513                           ;SPI.c: 122:         PIE1bits.ADIE = 1;
   514  005F  1683               	bsf	3,5	;RP0=1, select bank1
   515  0060  1303               	bcf	3,6	;RP1=0, select bank1
   516  0061  170C               	bsf	12,6	;volatile
   517  0062                     l711:
   518                           
   519                           ;SPI.c: 123:         INTCONbits.PEIE = 1;
   520  0062  170B               	bsf	11,6	;volatile
   521  0063                     l713:
   522                           
   523                           ;SPI.c: 124:         INTCONbits.GIE = 1;
   524  0063  178B               	bsf	11,7	;volatile
   525                           
   526                           ;SPI.c: 126:     }else{
   527  0064  2884               	goto	l81
   528  0065                     l715:
   529                           
   530                           ;SPI.c: 127:         ANSEL =0x00;
   531  0065  1683               	bsf	3,5	;RP0=1, select bank3
   532  0066  1703               	bsf	3,6	;RP1=1, select bank3
   533  0067  0188               	clrf	8	;volatile
   534  0068                     l717:
   535                           
   536                           ;SPI.c: 128:         TRISC = 0b00011000;
   537  0068  3018               	movlw	24
   538  0069  1683               	bsf	3,5	;RP0=1, select bank1
   539  006A  1303               	bcf	3,6	;RP1=0, select bank1
   540  006B  0087               	movwf	7	;volatile
   541  006C                     l719:
   542                           
   543                           ;SPI.c: 129:         PORTC = 0x00;
   544  006C  1283               	bcf	3,5	;RP0=0, select bank0
   545  006D  1303               	bcf	3,6	;RP1=0, select bank0
   546  006E  0187               	clrf	7	;volatile
   547  006F                     l721:
   548                           
   549                           ;SPI.c: 132:         SSPCONbits.SSPM = 0b0100;
   550  006F  0814               	movf	20,w	;volatile
   551  0070  39F0               	andlw	-16
   552  0071  3804               	iorlw	4
   553  0072  0094               	movwf	20	;volatile
   554  0073                     l723:
   555                           
   556                           ;SPI.c: 133:         SSPCONbits.CKP = 0;
   557  0073  1214               	bcf	20,4	;volatile
   558  0074                     l725:
   559                           
   560                           ;SPI.c: 134:         SSPCONbits.SSPEN = 1;
   561  0074  1694               	bsf	20,5	;volatile
   562  0075                     l727:
   563                           
   564                           ;SPI.c: 136:         SSPSTATbits.CKE = 1;
   565  0075  1683               	bsf	3,5	;RP0=1, select bank1
   566  0076  1303               	bcf	3,6	;RP1=0, select bank1
   567  0077  1714               	bsf	20,6	;volatile
   568  0078                     l729:
   569                           
   570                           ;SPI.c: 137:         SSPSTATbits.SMP = 0;
   571  0078  1394               	bcf	20,7	;volatile
   572  0079                     l731:
   573                           
   574                           ;SPI.c: 140:         TRISBbits.TRISB0 = 1;
   575  0079  1406               	bsf	6,0	;volatile
   576  007A                     l733:
   577                           
   578                           ;SPI.c: 141:         TRISBbits.TRISB1 = 1;
   579  007A  1486               	bsf	6,1	;volatile
   580  007B                     l735:
   581                           
   582                           ;SPI.c: 142:         OPTION_REGbits.nRBPU = 0;
   583  007B  1381               	bcf	1,7	;volatile
   584  007C                     l737:
   585                           
   586                           ;SPI.c: 143:         WPUBbits.WPUB = 0x03;
   587  007C  3003               	movlw	3
   588  007D  0095               	movwf	21	;volatile
   589  007E                     l739:
   590                           
   591                           ;SPI.c: 144:         IOCBbits.IOCB = 0x03;
   592  007E  3003               	movlw	3
   593  007F  0096               	movwf	22	;volatile
   594  0080                     l741:
   595                           
   596                           ;SPI.c: 147:         INTCONbits.RBIE = 1;
   597  0080  158B               	bsf	11,3	;volatile
   598  0081                     l743:
   599                           
   600                           ;SPI.c: 148:         INTCONbits.RBIF = 0;
   601  0081  100B               	bcf	11,0	;volatile
   602  0082                     l745:
   603                           
   604                           ;SPI.c: 151:         INTCONbits.PEIE = 1;
   605  0082  170B               	bsf	11,6	;volatile
   606  0083                     l747:
   607                           
   608                           ;SPI.c: 152:         INTCONbits.GIE = 1;
   609  0083  178B               	bsf	11,7	;volatile
   610  0084                     l81:
   611  0084  0008               	return
   612  0085                     __end_of_setup:
   613                           
   614                           	psect	text2
   615  0085                     __ptext2:	
   616 ;; *************** function _isr *****************
   617 ;; Defined at:
   618 ;;		line 32 in file "SPI.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          3       0       0       0       0
   635 ;;      Totals:         3       0       0       0       0
   636 ;;Total ram usage:        3 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		Interrupt level 1
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645  0085                     _isr:	
   646                           ;psect for function _isr
   647                           
   648  0085                     i1l749:
   649                           
   650                           ;SPI.c: 33:     if (PORTAbits.RA0==1){
   651  0085  1283               	bcf	3,5	;RP0=0, select bank0
   652  0086  1303               	bcf	3,6	;RP1=0, select bank0
   653  0087  1C05               	btfss	5,0	;volatile
   654  0088  288A               	goto	u2_21
   655  0089  288B               	goto	u2_20
   656  008A                     u2_21:
   657  008A  289C               	goto	i1l59
   658  008B                     u2_20:
   659  008B                     i1l751:
   660                           
   661                           ;SPI.c: 34:         if(PIR1bits.ADIF){
   662  008B  1F0C               	btfss	12,6	;volatile
   663  008C  288E               	goto	u3_21
   664  008D  288F               	goto	u3_20
   665  008E                     u3_21:
   666  008E  28B3               	goto	i1l67
   667  008F                     u3_20:
   668  008F                     i1l753:
   669                           
   670                           ;SPI.c: 35:             if(ADCON0bits.CHS == 2)
   671  008F  0C1F               	rrf	31,w	;volatile
   672  0090  00F0               	movwf	??_isr
   673  0091  0C70               	rrf	??_isr,w
   674  0092  390F               	andlw	15
   675  0093  3A02               	xorlw	2
   676  0094  1D03               	skipz
   677  0095  2897               	goto	u4_21
   678  0096  2898               	goto	u4_20
   679  0097                     u4_21:
   680  0097  289A               	goto	i1l757
   681  0098                     u4_20:
   682  0098                     i1l755:
   683                           
   684                           ;SPI.c: 36:                 PORTD = ADRESH;
   685  0098  081E               	movf	30,w	;volatile
   686  0099  0088               	movwf	8	;volatile
   687  009A                     i1l757:
   688                           
   689                           ;SPI.c: 37:         PIR1bits.ADIF = 0;
   690  009A  130C               	bcf	12,6	;volatile
   691  009B  28B3               	goto	i1l67
   692  009C                     i1l59:
   693  009C  1805               	btfsc	5,0	;volatile
   694  009D  289F               	goto	u5_21
   695  009E  28A0               	goto	u5_20
   696  009F                     u5_21:
   697  009F  28B3               	goto	i1l67
   698  00A0                     u5_20:
   699  00A0                     i1l759:
   700                           
   701                           ;SPI.c: 40:         if(INTCONbits.RBIF){
   702  00A0  1C0B               	btfss	11,0	;volatile
   703  00A1  28A3               	goto	u6_21
   704  00A2  28A4               	goto	u6_20
   705  00A3                     u6_21:
   706  00A3  28B3               	goto	i1l67
   707  00A4                     u6_20:
   708  00A4                     i1l761:
   709                           
   710                           ;SPI.c: 41:             if (!PORTBbits.RB0)
   711  00A4  1806               	btfsc	6,0	;volatile
   712  00A5  28A7               	goto	u7_21
   713  00A6  28A8               	goto	u7_20
   714  00A7                     u7_21:
   715  00A7  28AC               	goto	i1l765
   716  00A8                     u7_20:
   717  00A8                     i1l763:
   718                           
   719                           ;SPI.c: 42:                 ++PORTD;
   720  00A8  3001               	movlw	1
   721  00A9  00F0               	movwf	??_isr
   722  00AA  0870               	movf	??_isr,w
   723  00AB  0788               	addwf	8,f	;volatile
   724  00AC                     i1l765:
   725                           
   726                           ;SPI.c: 43:             if(!PORTBbits.RB1)
   727  00AC  1886               	btfsc	6,1	;volatile
   728  00AD  28AF               	goto	u8_21
   729  00AE  28B0               	goto	u8_20
   730  00AF                     u8_21:
   731  00AF  28B2               	goto	i1l769
   732  00B0                     u8_20:
   733  00B0                     i1l767:
   734                           
   735                           ;SPI.c: 44:                 --PORTD;
   736  00B0  3001               	movlw	1
   737  00B1  0288               	subwf	8,f	;volatile
   738  00B2                     i1l769:
   739                           
   740                           ;SPI.c: 45:         INTCONbits.RBIF = 0;
   741  00B2  100B               	bcf	11,0	;volatile
   742  00B3                     i1l67:
   743  00B3  0872               	movf	??_isr+2,w
   744  00B4  008A               	movwf	10
   745  00B5  0E71               	swapf	??_isr+1,w
   746  00B6  0083               	movwf	3
   747  00B7  0EFE               	swapf	btemp,f
   748  00B8  0E7E               	swapf	btemp,w
   749  00B9  0009               	retfie
   750  00BA                     __end_of_isr:
   751  007E                     btemp	set	126	;btemp
   752  007E                     wtemp0	set	126
   753                           
   754                           	psect	intentry
   755  0004                     __pintentry:	
   756                           ;incstack = 0
   757                           ; Regs used in _isr: [wreg+status,2+status,0]
   758                           
   759  0004                     interrupt_function:
   760  007E                     saved_w	set	btemp
   761  0004  00FE               	movwf	btemp
   762  0005  0E03               	swapf	3,w
   763  0006  00F1               	movwf	??_isr+1
   764  0007  080A               	movf	10,w
   765  0008  00F2               	movwf	??_isr+2
   766  0009  120A  118A  2885   	ljmp	_isr
   767                           
   768                           	psect	idloc
   769                           
   770                           ;Config register IDLOC0 @ 0x2000
   771                           ;	unspecified, using default values
   772  2000                     	org	8192
   773  2000  3FFF               	dw	16383
   774                           
   775                           ;Config register IDLOC1 @ 0x2001
   776                           ;	unspecified, using default values
   777  2001                     	org	8193
   778  2001  3FFF               	dw	16383
   779                           
   780                           ;Config register IDLOC2 @ 0x2002
   781                           ;	unspecified, using default values
   782  2002                     	org	8194
   783  2002  3FFF               	dw	16383
   784                           
   785                           ;Config register IDLOC3 @ 0x2003
   786                           ;	unspecified, using default values
   787  2003                     	org	8195
   788  2003  3FFF               	dw	16383
   789                           
   790                           	psect	config
   791                           
   792                           ;Config register CONFIG1 @ 0x2007
   793                           ;	Oscillator Selection bits
   794                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   795                           ;	Watchdog Timer Enable bit
   796                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   797                           ;	Power-up Timer Enable bit
   798                           ;	PWRTE = OFF, PWRT disabled
   799                           ;	RE3/MCLR pin function select bit
   800                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   801                           ;	Code Protection bit
   802                           ;	CP = OFF, Program memory code protection is disabled
   803                           ;	Data Code Protection bit
   804                           ;	CPD = OFF, Data memory code protection is disabled
   805                           ;	Brown Out Reset Selection bits
   806                           ;	BOREN = OFF, BOR disabled
   807                           ;	Internal External Switchover bit
   808                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   809                           ;	Fail-Safe Clock Monitor Enabled bit
   810                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   811                           ;	Low Voltage Programming Enable bit
   812                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   813                           ;	In-Circuit Debugger Mode bit
   814                           ;	DEBUG = 0x1, unprogrammed default
   815  2007                     	org	8199
   816  2007  20D4               	dw	8404
   817                           
   818                           ;Config register CONFIG2 @ 0x2008
   819                           ;	Brown-out Reset Selection bit
   820                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   821                           ;	Flash Program Memory Self Write Enable bits
   822                           ;	WRT = OFF, Write protection off
   823  2008                     	org	8200
   824  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon May 09 16:49:51 2022

            _SSPSTATbits 0094                       l81 0084                       u10 003B  
                     u11 003A                       u90 00C5                       u91 00C4  
                    l701 0052                      l711 0062                      l703 0055  
                    l721 006F                      l713 0063                      l705 0058  
                    l731 0079                      l723 0073                      l707 005C  
                    l715 0065                      l741 0080                      l733 007A  
                    l725 0074                      l717 0068                      l709 005F  
                    l743 0081                      l735 007B                      l727 0075  
                    l719 006C                      l745 0082                      l737 007C  
                    l729 0078                      l681 0021                      l673 0016  
                    l747 0083                      l739 007E                      l691 0043  
                    l683 0027                      l675 0019                      l771 00BA  
                    l693 0046                      l685 0028                      l677 001D  
                    l773 00BF                      l695 0048                      l687 0035  
                    l679 001E                      l775 00C5                      l697 004B  
                    l689 003B                      l699 004C                      u107 002E  
                    u117 005A                      _isr 0085                     ?_isr 0070  
                   i1l67 00B3                     i1l59 009C                     u2_20 008B  
                   u2_21 008A                     u3_20 008F                     u3_21 008E  
                   u4_20 0098                     u4_21 0097                     u5_20 00A0  
                   u5_21 009F                     u6_20 00A4                     u6_21 00A3  
                   u7_20 00A8                     u7_21 00A7                     u8_20 00B0  
                   u8_21 00AF                     _main 00BA                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l751 008B                    i1l761 00A4  
                  i1l753 008F                    i1l763 00A8                    i1l755 0098  
                  i1l765 00AC                    i1l757 009A                    i1l749 0085  
                  i1l767 00B0                    i1l759 00A0                    i1l769 00B2  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _setup 0016  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00CA                   ??_main 0076  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 0085           _OPTION_REGbits 0081                  ??_setup 0073  
             __pmaintext 00BA               __pintentry 0004               _cont_slave 0078  
                __ptext1 0016                  __ptext2 0085     end_of_initialization 0012  
             _valor_temp 0076               _pot_master 0077                _PORTAbits 0005  
              _PORTBbits 0006                _TRISBbits 0086      start_initialization 000F  
            __end_of_isr 00BA              __pbssCOMMON 0076                ___latbits 0002  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _WPUBbits 0095               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F               _SSPCONbits 0014  

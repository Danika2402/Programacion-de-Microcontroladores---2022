

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu May 05 00:55:33 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0019                     _TXREG	set	25
   215  000B                     _INTCONbits	set	11
   216  0018                     _RCSTAbits	set	24
   217  0005                     _PORTA	set	5
   218  0008                     _PORTD	set	8
   219  001E                     _ADRESH	set	30
   220  001F                     _ADCON0bits	set	31
   221  001A                     _RCREG	set	26
   222  000C                     _PIR1bits	set	12
   223  008C                     _PIE1bits	set	140
   224  009A                     _SPBRGH	set	154
   225  0099                     _SPBRG	set	153
   226  0098                     _TXSTAbits	set	152
   227  009F                     _ADCON1bits	set	159
   228  0088                     _TRISD	set	136
   229  0085                     _TRISA	set	133
   230  008F                     _OSCCONbits	set	143
   231  0187                     _BAUDCTLbits	set	391
   232  0189                     _ANSELH	set	393
   233  0188                     _ANSEL	set	392
   234                           
   235                           	psect	strings
   236  0166                     __pstrings:
   237  0166                     stringtab:
   238  0166                     __stringtab:
   239  0166                     stringcode:	
   240                           ;	String table - string pointers are 1 byte each
   241                           
   242  0166                     stringdir:
   243  0166  3001               	movlw	high stringdir
   244  0167  008A               	movwf	10
   245  0168  0804               	movf	4,w
   246  0169  0A84               	incf	4,f
   247  016A  0782               	addwf	2,f
   248  016B                     __stringbase:
   249  016B  3400               	retlw	0
   250  016C                     __end_of__stringtab:
   251  016C                     STR_1:
   252  016C  3431               	retlw	49	;'1'
   253  016D  342E               	retlw	46	;'.'
   254  016E  3420               	retlw	32	;' '
   255  016F  344C               	retlw	76	;'L'
   256  0170  3465               	retlw	101	;'e'
   257  0171  3465               	retlw	101	;'e'
   258  0172  3472               	retlw	114	;'r'
   259  0173  3420               	retlw	32	;' '
   260  0174  3450               	retlw	80	;'P'
   261  0175  346F               	retlw	111	;'o'
   262  0176  3474               	retlw	116	;'t'
   263  0177  3465               	retlw	101	;'e'
   264  0178  346E               	retlw	110	;'n'
   265  0179  3463               	retlw	99	;'c'
   266  017A  3469               	retlw	105	;'i'
   267  017B  346F               	retlw	111	;'o'
   268  017C  346D               	retlw	109	;'m'
   269  017D  3465               	retlw	101	;'e'
   270  017E  3474               	retlw	116	;'t'
   271  017F  3472               	retlw	114	;'r'
   272  0180  346F               	retlw	111	;'o'
   273  0181  340D               	retlw	13
   274  0182  3400               	retlw	0
   275  0183                     STR_5:
   276  0183  340D               	retlw	13
   277  0184  3449               	retlw	73	;'I'
   278  0185  346E               	retlw	110	;'n'
   279  0186  3467               	retlw	103	;'g'
   280  0187  3472               	retlw	114	;'r'
   281  0188  3465               	retlw	101	;'e'
   282  0189  3473               	retlw	115	;'s'
   283  018A  3461               	retlw	97	;'a'
   284  018B  3420               	retlw	32	;' '
   285  018C  3475               	retlw	117	;'u'
   286  018D  346E               	retlw	110	;'n'
   287  018E  3420               	retlw	32	;' '
   288  018F  3464               	retlw	100	;'d'
   289  0190  3461               	retlw	97	;'a'
   290  0191  3474               	retlw	116	;'t'
   291  0192  346F               	retlw	111	;'o'
   292  0193  340D               	retlw	13
   293  0194  3400               	retlw	0
   294  0195                     STR_2:
   295  0195  3432               	retlw	50	;'2'
   296  0196  342E               	retlw	46	;'.'
   297  0197  3420               	retlw	32	;' '
   298  0198  3445               	retlw	69	;'E'
   299  0199  346E               	retlw	110	;'n'
   300  019A  3476               	retlw	118	;'v'
   301  019B  3469               	retlw	105	;'i'
   302  019C  3461               	retlw	97	;'a'
   303  019D  3472               	retlw	114	;'r'
   304  019E  3420               	retlw	32	;' '
   305  019F  3441               	retlw	65	;'A'
   306  01A0  3473               	retlw	115	;'s'
   307  01A1  3463               	retlw	99	;'c'
   308  01A2  3469               	retlw	105	;'i'
   309  01A3  3469               	retlw	105	;'i'
   310  01A4  340D               	retlw	13
   311  01A5  3400               	retlw	0
   312  01A6                     STR_4:
   313  01A6  340D               	retlw	13
   314  01A7  344C               	retlw	76	;'L'
   315  01A8  3469               	retlw	105	;'i'
   316  01A9  3473               	retlw	115	;'s'
   317  01AA  3474               	retlw	116	;'t'
   318  01AB  346F               	retlw	111	;'o'
   319  01AC  340D               	retlw	13
   320  01AD  340D               	retlw	13
   321  01AE  3400               	retlw	0
   322  01AD                     
   323                           	psect	cinit
   324  000F                     start_initialization:	
   325                           ; #config settings
   326                           
   327  000F                     __initialization:
   328                           
   329                           ; Clear objects allocated to COMMON
   330  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   331  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   332  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   333  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   334                           
   335                           ; Clear objects allocated to BANK0
   336  0013  1283               	bcf	3,5	;RP0=0, select bank0
   337  0014  1303               	bcf	3,6	;RP1=0, select bank0
   338  0015  01AF               	clrf	__pbssBANK0& (0+127)
   339  0016  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   340  0017  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   341  0018                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  0018                     __end_of__initialization:
   345  0018  0183               	clrf	3
   346  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMMON
   349  0077                     __pbssCOMMON:
   350  0077                     _pot:
   351  0077                     	ds	1
   352  0078                     _centena:
   353  0078                     	ds	1
   354  0079                     _decena:
   355  0079                     	ds	1
   356  007A                     _unidad:
   357  007A                     	ds	1
   358                           
   359                           	psect	bssBANK0
   360  002F                     __pbssBANK0:
   361  002F                     _inicio:
   362  002F                     	ds	1
   363  0030                     _ASCII:
   364  0030                     	ds	1
   365  0031                     _indice:
   366  0031                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369  0070                     __pcstackCOMMON:
   370  0070                     ?_setup:
   371  0070                     ?_Print:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_TX:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_isr:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388  0070                     	ds	3
   389  0073                     ??_setup:
   390  0073                     ??_TX:	
   391                           ; 1 bytes @ 0x3
   392                           
   393  0073                     ?___bmul:	
   394                           ; 1 bytes @ 0x3
   395                           
   396  0073                     ?___wmul:	
   397                           ; 1 bytes @ 0x3
   398                           
   399  0073                     TX@dato:	
   400                           ; 2 bytes @ 0x3
   401                           
   402  0073                     ___bmul@multiplicand:	
   403                           ; 1 bytes @ 0x3
   404                           
   405  0073                     ___wmul@multiplier:	
   406                           ; 1 bytes @ 0x3
   407                           
   408                           
   409                           ; 2 bytes @ 0x3
   410  0073                     	ds	1
   411  0074                     ??_Print:
   412  0074                     ??___bmul:	
   413                           ; 1 bytes @ 0x4
   414                           
   415                           
   416                           ; 1 bytes @ 0x4
   417  0074                     	ds	1
   418  0075                     Print@str:
   419  0075                     ___bmul@product:	
   420                           ; 1 bytes @ 0x5
   421                           
   422  0075                     ___wmul@multiplicand:	
   423                           ; 1 bytes @ 0x5
   424                           
   425                           
   426                           ; 2 bytes @ 0x5
   427  0075                     	ds	1
   428  0076                     ___bmul@multiplier:
   429                           
   430                           ; 1 bytes @ 0x6
   431  0076                     	ds	1
   432  0077                     ??___wmul:
   433                           
   434                           	psect	cstackBANK0
   435  0020                     __pcstackBANK0:	
   436                           ; 1 bytes @ 0x7
   437                           
   438  0020                     ___wmul@product:
   439                           
   440                           ; 2 bytes @ 0x0
   441  0020                     	ds	2
   442  0022                     ?___awdiv:
   443  0022                     ___awdiv@divisor:	
   444                           ; 2 bytes @ 0x2
   445                           
   446                           
   447                           ; 2 bytes @ 0x2
   448  0022                     	ds	2
   449  0024                     ___awdiv@dividend:
   450                           
   451                           ; 2 bytes @ 0x4
   452  0024                     	ds	2
   453  0026                     ??___awdiv:
   454                           
   455                           ; 1 bytes @ 0x6
   456  0026                     	ds	1
   457  0027                     ___awdiv@counter:
   458                           
   459                           ; 1 bytes @ 0x7
   460  0027                     	ds	1
   461  0028                     ___awdiv@sign:
   462                           
   463                           ; 1 bytes @ 0x8
   464  0028                     	ds	1
   465  0029                     ___awdiv@quotient:
   466                           
   467                           ; 2 bytes @ 0x9
   468  0029                     	ds	2
   469  002B                     ??_main:
   470                           
   471                           ; 1 bytes @ 0xB
   472  002B                     	ds	4
   473                           
   474                           	psect	maintext
   475  001C                     __pmaintext:	
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 50 in file "USART.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : B00/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       4       0       0       0
   498 ;;      Totals:         0       4       0       0       0
   499 ;;Total ram usage:        4 bytes
   500 ;; Hardware stack levels required when called: 3
   501 ;; This function calls:
   502 ;;		_Print
   503 ;;		_TX
   504 ;;		___awdiv
   505 ;;		___bmul
   506 ;;		___wmul
   507 ;;		_setup
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513  001C                     _main:	
   514                           ;psect for function _main
   515                           
   516  001C                     l1222:	
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;USART.c: 51:     setup();
   522  001C  120A  118A  21AF  120A  118A  	fcall	_setup
   523  0021                     l1224:
   524                           
   525                           ;USART.c: 54:         if(ADCON0bits.GO == 0){
   526  0021  1283               	bcf	3,5	;RP0=0, select bank0
   527  0022  1303               	bcf	3,6	;RP1=0, select bank0
   528  0023  189F               	btfsc	31,1	;volatile
   529  0024  2826               	goto	u651
   530  0025  2827               	goto	u650
   531  0026                     u651:
   532  0026  2828               	goto	l1228
   533  0027                     u650:
   534  0027                     l1226:
   535                           
   536                           ;USART.c: 55:             ADCON0bits.GO = 1;
   537  0027  149F               	bsf	31,1	;volatile
   538  0028                     l1228:
   539                           
   540                           ;USART.c: 58:         centena = pot/100;
   541  0028  3064               	movlw	100
   542  0029  00A2               	movwf	___awdiv@divisor
   543  002A  3000               	movlw	0
   544  002B  00A3               	movwf	___awdiv@divisor+1
   545  002C  0877               	movf	_pot,w
   546  002D  00AB               	movwf	??_main
   547  002E  01AC               	clrf	??_main+1
   548  002F  082B               	movf	??_main,w
   549  0030  00A4               	movwf	___awdiv@dividend
   550  0031  082C               	movf	??_main+1,w
   551  0032  00A5               	movwf	___awdiv@dividend+1
   552  0033  120A  118A  20FD  120A  118A  	fcall	___awdiv
   553  0038  1283               	bcf	3,5	;RP0=0, select bank0
   554  0039  1303               	bcf	3,6	;RP1=0, select bank0
   555  003A  0822               	movf	?___awdiv,w
   556  003B  00AD               	movwf	??_main+2
   557  003C  082D               	movf	??_main+2,w
   558  003D  00F8               	movwf	_centena
   559                           
   560                           ;USART.c: 59:         decena = (pot - (100 * centena))/10;
   561  003E  300A               	movlw	10
   562  003F  00A2               	movwf	___awdiv@divisor
   563  0040  3000               	movlw	0
   564  0041  00A3               	movwf	___awdiv@divisor+1
   565  0042  0878               	movf	_centena,w
   566  0043  00AB               	movwf	??_main
   567  0044  01AC               	clrf	??_main+1
   568  0045  082B               	movf	??_main,w
   569  0046  00F3               	movwf	___wmul@multiplier
   570  0047  082C               	movf	??_main+1,w
   571  0048  00F4               	movwf	___wmul@multiplier+1
   572  0049  309C               	movlw	156
   573  004A  00F5               	movwf	___wmul@multiplicand
   574  004B  30FF               	movlw	255
   575  004C  00F6               	movwf	___wmul@multiplicand+1
   576  004D  120A  118A  21F4  120A  118A  	fcall	___wmul
   577  0052  0877               	movf	_pot,w
   578  0053  0773               	addwf	?___wmul,w
   579  0054  1283               	bcf	3,5	;RP0=0, select bank0
   580  0055  1303               	bcf	3,6	;RP1=0, select bank0
   581  0056  00A4               	movwf	___awdiv@dividend
   582  0057  0874               	movf	?___wmul+1,w
   583  0058  1803               	skipnc
   584  0059  0A74               	incf	?___wmul+1,w
   585  005A  00A5               	movwf	___awdiv@dividend+1
   586  005B  120A  118A  20FD  120A  118A  	fcall	___awdiv
   587  0060  1283               	bcf	3,5	;RP0=0, select bank0
   588  0061  1303               	bcf	3,6	;RP1=0, select bank0
   589  0062  0822               	movf	?___awdiv,w
   590  0063  00AD               	movwf	??_main+2
   591  0064  082D               	movf	??_main+2,w
   592  0065  00F9               	movwf	_decena
   593                           
   594                           ;USART.c: 60:         unidad = pot - (100 * centena)-(10 * decena);
   595  0066  309C               	movlw	156
   596  0067  00AB               	movwf	??_main
   597  0068  082B               	movf	??_main,w
   598  0069  00F3               	movwf	___bmul@multiplicand
   599  006A  0878               	movf	_centena,w
   600  006B  120A  118A  2262  120A  118A  	fcall	___bmul
   601  0070  1283               	bcf	3,5	;RP0=0, select bank0
   602  0071  1303               	bcf	3,6	;RP1=0, select bank0
   603  0072  00AC               	movwf	??_main+1
   604  0073  30F6               	movlw	246
   605  0074  00AD               	movwf	??_main+2
   606  0075  082D               	movf	??_main+2,w
   607  0076  00F3               	movwf	___bmul@multiplicand
   608  0077  0879               	movf	_decena,w
   609  0078  120A  118A  2262  120A  118A  	fcall	___bmul
   610  007D  1283               	bcf	3,5	;RP0=0, select bank0
   611  007E  1303               	bcf	3,6	;RP1=0, select bank0
   612  007F  072C               	addwf	??_main+1,w
   613  0080  0777               	addwf	_pot,w
   614  0081  00AE               	movwf	??_main+3
   615  0082  082E               	movf	??_main+3,w
   616  0083  00FA               	movwf	_unidad
   617  0084                     l1230:
   618                           
   619                           ;USART.c: 62:         centena += 48;
   620  0084  3030               	movlw	48
   621  0085  00AB               	movwf	??_main
   622  0086  082B               	movf	??_main,w
   623  0087  07F8               	addwf	_centena,f
   624  0088                     l1232:
   625                           
   626                           ;USART.c: 63:         decena += 48;
   627  0088  3030               	movlw	48
   628  0089  00AB               	movwf	??_main
   629  008A  082B               	movf	??_main,w
   630  008B  07F9               	addwf	_decena,f
   631  008C                     l1234:
   632                           
   633                           ;USART.c: 64:         unidad += 48;
   634  008C  3030               	movlw	48
   635  008D  00AB               	movwf	??_main
   636  008E  082B               	movf	??_main,w
   637  008F  07FA               	addwf	_unidad,f
   638  0090                     l1236:
   639                           
   640                           ;USART.c: 66:         if(inicio==0){
   641  0090  082F               	movf	_inicio,w
   642  0091  1D03               	btfss	3,2
   643  0092  2894               	goto	u661
   644  0093  2895               	goto	u660
   645  0094                     u661:
   646  0094  28A5               	goto	l1242
   647  0095                     u660:
   648  0095                     l1238:
   649                           
   650                           ;USART.c: 67:             Print("1. Leer Potenciometro\r");
   651  0095  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   652  0096  120A  118A  2243  120A  118A  	fcall	_Print
   653                           
   654                           ;USART.c: 68:             Print("2. Enviar Ascii\r");
   655  009B  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   656  009C  120A  118A  2243  120A  118A  	fcall	_Print
   657  00A1                     l1240:
   658                           
   659                           ;USART.c: 69:             inicio = 1;
   660  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   661  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   662  00A3  01AF               	clrf	_inicio
   663  00A4  0AAF               	incf	_inicio,f
   664  00A5                     l1242:
   665                           
   666                           ;USART.c: 72:         if(PIR1bits.RCIF == 0){
   667  00A5  1A8C               	btfsc	12,5	;volatile
   668  00A6  28A8               	goto	u671
   669  00A7  28A9               	goto	u670
   670  00A8                     u671:
   671  00A8  2821               	goto	l1224
   672  00A9                     u670:
   673  00A9  28EA               	goto	l1278
   674  00AA                     l1246:
   675                           
   676                           ;USART.c: 75:                     Print("\r");
   677  00AA  3042               	movlw	(low (((STR_4+7)-__stringbase)| (0+32768)))& (0+255)
   678  00AB  120A  118A  2243  120A  118A  	fcall	_Print
   679  00B0                     l1248:
   680                           
   681                           ;USART.c: 76:                     TX(centena);
   682  00B0  0878               	movf	_centena,w
   683  00B1  120A  118A  2277  120A  118A  	fcall	_TX
   684  00B6                     l1250:
   685                           
   686                           ;USART.c: 77:                     TX(decena);
   687  00B6  0879               	movf	_decena,w
   688  00B7  120A  118A  2277  120A  118A  	fcall	_TX
   689  00BC                     l1252:
   690                           
   691                           ;USART.c: 78:                     TX(unidad);
   692  00BC  087A               	movf	_unidad,w
   693  00BD  120A  118A  2277  120A  118A  	fcall	_TX
   694  00C2                     l1254:
   695                           
   696                           ;USART.c: 79:                     Print("\rListo\r\r");
   697  00C2  303B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   698  00C3  120A  118A  2243  120A  118A  	fcall	_Print
   699  00C8                     l1256:
   700                           
   701                           ;USART.c: 80:                     inicio = 0;
   702  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   703  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   704  00CA  01AF               	clrf	_inicio
   705  00CB                     l1258:
   706                           
   707                           ;USART.c: 81:                     indice = 0;
   708  00CB  01B1               	clrf	_indice
   709                           
   710                           ;USART.c: 82:                     break;
   711  00CC  2821               	goto	l1224
   712  00CD                     l1260:
   713                           
   714                           ;USART.c: 85:                     Print("\rIngresa un dato\r");
   715  00CD  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   716  00CE  120A  118A  2243  120A  118A  	fcall	_Print
   717  00D3                     l1262:
   718                           
   719                           ;USART.c: 86:                     ASCII = 1;
   720  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   721  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   722  00D5  01B0               	clrf	_ASCII
   723  00D6  0AB0               	incf	_ASCII,f
   724                           
   725                           ;USART.c: 88:                         while(PIR1bits.RCIF==0){
   726  00D7  28E5               	goto	l1274
   727  00D8                     l1264:
   728                           
   729                           ;USART.c: 90:                             PORTD = RCREG;
   730  00D8  081A               	movf	26,w	;volatile
   731  00D9  0088               	movwf	8	;volatile
   732  00DA                     l1266:
   733                           
   734                           ;USART.c: 91:                             Print("Listo\r\r");
   735  00DA  303C               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
   736  00DB  120A  118A  2243  120A  118A  	fcall	_Print
   737  00E0                     l1268:
   738                           
   739                           ;USART.c: 92:                             ASCII = 0;
   740  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   741  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   742  00E2  01B0               	clrf	_ASCII
   743  00E3                     l1270:
   744                           
   745                           ;USART.c: 93:                             inicio = 0;
   746  00E3  01AF               	clrf	_inicio
   747  00E4                     l1272:
   748                           
   749                           ;USART.c: 94:                             indice = 0;
   750  00E4  01B1               	clrf	_indice
   751  00E5                     l1274:
   752                           
   753                           ;USART.c: 88:                         while(PIR1bits.RCIF==0){
   754  00E5  1E8C               	btfss	12,5	;volatile
   755  00E6  28E8               	goto	u681
   756  00E7  28E9               	goto	u680
   757  00E8                     u681:
   758  00E8  28D8               	goto	l1264
   759  00E9                     u680:
   760  00E9  2821               	goto	l1224
   761  00EA                     l1278:
   762  00EA  0831               	movf	_indice,w
   763  00EB  00AB               	movwf	??_main
   764  00EC  01AC               	clrf	??_main+1
   765                           
   766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 1, Range of values is 0 to 0
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            4     3 (average)
   772                           ; direct_byte           11     8 (fixed)
   773                           ; jumptable            260     6 (fixed)
   774                           ;	Chosen strategy is simple_byte
   775  00ED  082C               	movf	??_main+1,w
   776  00EE  3A00               	xorlw	0	; case 0
   777  00EF  1903               	skipnz
   778  00F0  28F2               	goto	l1304
   779  00F1  2821               	goto	l1224
   780  00F2                     l1304:
   781                           
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 2, Range of values is 49 to 50
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            7     4 (average)
   787                           ; direct_byte           17    11 (fixed)
   788                           ; jumptable            263     9 (fixed)
   789                           ;	Chosen strategy is simple_byte
   790  00F2  082B               	movf	??_main,w
   791  00F3  3A31               	xorlw	49	; case 49
   792  00F4  1903               	skipnz
   793  00F5  28AA               	goto	l1246
   794  00F6  3A03               	xorlw	3	; case 50
   795  00F7  1903               	skipnz
   796  00F8  28CD               	goto	l1260
   797  00F9  2821               	goto	l1224
   798  00FA  120A  118A  280C   	ljmp	start
   799  00FD                     __end_of_main:
   800                           
   801                           	psect	text1
   802  01AF                     __ptext1:	
   803 ;; *************** function _setup *****************
   804 ;; Defined at:
   805 ;;		line 104 in file "USART.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0
   821 ;;      Temps:          1       0       0       0       0
   822 ;;      Totals:         1       0       0       0       0
   823 ;;Total ram usage:        1 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833  01AF                     _setup:	
   834                           ;psect for function _setup
   835                           
   836  01AF                     l934:	
   837                           ;incstack = 0
   838                           ; Regs used in _setup: [wreg+status,2+status,0]
   839                           
   840                           
   841                           ;USART.c: 106:     ANSEL =0b00000001;
   842  01AF  3001               	movlw	1
   843  01B0  1683               	bsf	3,5	;RP0=1, select bank3
   844  01B1  1703               	bsf	3,6	;RP1=1, select bank3
   845  01B2  0088               	movwf	8	;volatile
   846  01B3                     l936:
   847                           
   848                           ;USART.c: 107:     ANSELH = 0x00;
   849  01B3  0189               	clrf	9	;volatile
   850  01B4                     l938:
   851                           
   852                           ;USART.c: 109:     OSCCONbits.IRCF = 0b0100;
   853  01B4  1683               	bsf	3,5	;RP0=1, select bank1
   854  01B5  1303               	bcf	3,6	;RP1=0, select bank1
   855  01B6  080F               	movf	15,w	;volatile
   856  01B7  398F               	andlw	-113
   857  01B8  3840               	iorlw	64
   858  01B9  008F               	movwf	15	;volatile
   859  01BA                     l940:
   860                           
   861                           ;USART.c: 110:     OSCCONbits.SCS = 1;
   862  01BA  140F               	bsf	15,0	;volatile
   863  01BB                     l942:
   864                           
   865                           ;USART.c: 112:     TRISA = 0b00000001;
   866  01BB  3001               	movlw	1
   867  01BC  0085               	movwf	5	;volatile
   868  01BD                     l944:
   869                           
   870                           ;USART.c: 113:     TRISD = 0x00;
   871  01BD  0188               	clrf	8	;volatile
   872  01BE                     l946:
   873                           
   874                           ;USART.c: 114:     PORTD = 0x00;
   875  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   876  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   877  01C0  0188               	clrf	8	;volatile
   878  01C1                     l948:
   879                           
   880                           ;USART.c: 115:     PORTA = 0x00;
   881  01C1  0185               	clrf	5	;volatile
   882                           
   883                           ;USART.c: 118:     ADCON0bits.ADCS = 0b00;
   884  01C2  303F               	movlw	-193
   885  01C3  059F               	andwf	31,f	;volatile
   886  01C4                     l950:
   887                           
   888                           ;USART.c: 120:     ADCON1bits.VCFG0 = 0;
   889  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   890  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   891  01C6  121F               	bcf	31,4	;volatile
   892  01C7                     l952:
   893                           
   894                           ;USART.c: 121:     ADCON1bits.VCFG1 = 1;
   895  01C7  169F               	bsf	31,5	;volatile
   896                           
   897                           ;USART.c: 123:     ADCON0bits.CHS = 0b0000;
   898  01C8  30C3               	movlw	-61
   899  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   900  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   901  01CB  059F               	andwf	31,f	;volatile
   902  01CC                     l954:
   903                           
   904                           ;USART.c: 124:     ADCON1bits.ADFM = 0;
   905  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   906  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   907  01CE  139F               	bcf	31,7	;volatile
   908  01CF                     l956:
   909                           
   910                           ;USART.c: 125:     ADCON0bits.ADON = 1;
   911  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   912  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   913  01D1  141F               	bsf	31,0	;volatile
   914  01D2                     l958:
   915                           
   916                           ;USART.c: 126:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   917  01D2  3003               	movlw	3
   918  01D3  00F3               	movwf	??_setup
   919  01D4                     u697:
   920  01D4  0BF3               	decfsz	??_setup,f
   921  01D5  29D4               	goto	u697
   922  01D6                     l960:
   923                           
   924                           ;USART.c: 129:     TXSTAbits.SYNC = 0;
   925  01D6  1683               	bsf	3,5	;RP0=1, select bank1
   926  01D7  1303               	bcf	3,6	;RP1=0, select bank1
   927  01D8  1218               	bcf	24,4	;volatile
   928  01D9                     l962:
   929                           
   930                           ;USART.c: 130:     TXSTAbits.BRGH = 1;
   931  01D9  1518               	bsf	24,2	;volatile
   932  01DA                     l964:
   933                           
   934                           ;USART.c: 131:     BAUDCTLbits.BRG16 = 1;
   935  01DA  1683               	bsf	3,5	;RP0=1, select bank3
   936  01DB  1703               	bsf	3,6	;RP1=1, select bank3
   937  01DC  1587               	bsf	7,3	;volatile
   938  01DD                     l966:
   939                           
   940                           ;USART.c: 133:     SPBRG = 25;
   941  01DD  3019               	movlw	25
   942  01DE  1683               	bsf	3,5	;RP0=1, select bank1
   943  01DF  1303               	bcf	3,6	;RP1=0, select bank1
   944  01E0  0099               	movwf	25	;volatile
   945  01E1                     l968:
   946                           
   947                           ;USART.c: 134:     SPBRGH = 0;
   948  01E1  019A               	clrf	26	;volatile
   949  01E2                     l970:
   950                           
   951                           ;USART.c: 136:     RCSTAbits.SPEN = 1;
   952  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   953  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   954  01E4  1798               	bsf	24,7	;volatile
   955  01E5                     l972:
   956                           
   957                           ;USART.c: 137:     TXSTAbits.TX9 = 0;
   958  01E5  1683               	bsf	3,5	;RP0=1, select bank1
   959  01E6  1303               	bcf	3,6	;RP1=0, select bank1
   960  01E7  1318               	bcf	24,6	;volatile
   961  01E8                     l974:
   962                           
   963                           ;USART.c: 138:     TXSTAbits.TXEN = 1;
   964  01E8  1698               	bsf	24,5	;volatile
   965  01E9                     l976:
   966                           
   967                           ;USART.c: 139:     RCSTAbits.CREN = 1;
   968  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   969  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   970  01EB  1618               	bsf	24,4	;volatile
   971  01EC                     l978:
   972                           
   973                           ;USART.c: 141:     PIR1bits.ADIF = 0;
   974  01EC  130C               	bcf	12,6	;volatile
   975  01ED                     l980:
   976                           
   977                           ;USART.c: 142:     PIE1bits.ADIE = 1;
   978  01ED  1683               	bsf	3,5	;RP0=1, select bank1
   979  01EE  1303               	bcf	3,6	;RP1=0, select bank1
   980  01EF  170C               	bsf	12,6	;volatile
   981  01F0                     l982:
   982                           
   983                           ;USART.c: 143:     INTCONbits.PEIE = 1;
   984  01F0  170B               	bsf	11,6	;volatile
   985  01F1                     l984:
   986                           
   987                           ;USART.c: 144:     INTCONbits.GIE = 1;
   988  01F1  178B               	bsf	11,7	;volatile
   989  01F2                     l986:
   990                           
   991                           ;USART.c: 145:     PIE1bits.RCIE = 1;
   992  01F2  168C               	bsf	12,5	;volatile
   993  01F3                     l92:
   994  01F3  0008               	return
   995  01F4                     __end_of_setup:
   996                           
   997                           	psect	text2
   998  01F4                     __ptext2:	
   999 ;; *************** function ___wmul *****************
  1000 ;; Defined at:
  1001 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  multiplier      2    3[COMMON] unsigned int 
  1004 ;;  multiplicand    2    5[COMMON] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  product         2    0[BANK0 ] unsigned int 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2    3[COMMON] unsigned int 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         4       0       0       0       0
  1017 ;;      Locals:         0       2       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         4       2       0       0       0
  1020 ;;Total ram usage:        6 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030  01F4                     ___wmul:	
  1031                           ;psect for function ___wmul
  1032                           
  1033  01F4                     l1164:	
  1034                           ;incstack = 0
  1035                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1036                           
  1037  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1038  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1039  01F6  01A0               	clrf	___wmul@product
  1040  01F7  01A1               	clrf	___wmul@product+1
  1041  01F8                     l1166:
  1042  01F8  1C73               	btfss	___wmul@multiplier,0
  1043  01F9  29FB               	goto	u511
  1044  01FA  29FC               	goto	u510
  1045  01FB                     u511:
  1046  01FB  2A04               	goto	l190
  1047  01FC                     u510:
  1048  01FC                     l1168:
  1049  01FC  0875               	movf	___wmul@multiplicand,w
  1050  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1051  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1052  01FF  07A0               	addwf	___wmul@product,f
  1053  0200  1803               	skipnc
  1054  0201  0AA1               	incf	___wmul@product+1,f
  1055  0202  0876               	movf	___wmul@multiplicand+1,w
  1056  0203  07A1               	addwf	___wmul@product+1,f
  1057  0204                     l190:
  1058  0204  3001               	movlw	1
  1059  0205                     u525:
  1060  0205  1003               	clrc
  1061  0206  0DF5               	rlf	___wmul@multiplicand,f
  1062  0207  0DF6               	rlf	___wmul@multiplicand+1,f
  1063  0208  3EFF               	addlw	-1
  1064  0209  1D03               	skipz
  1065  020A  2A05               	goto	u525
  1066  020B                     l1170:
  1067  020B  3001               	movlw	1
  1068  020C                     u535:
  1069  020C  1003               	clrc
  1070  020D  0CF4               	rrf	___wmul@multiplier+1,f
  1071  020E  0CF3               	rrf	___wmul@multiplier,f
  1072  020F  3EFF               	addlw	-1
  1073  0210  1D03               	skipz
  1074  0211  2A0C               	goto	u535
  1075  0212                     l1172:
  1076  0212  0873               	movf	___wmul@multiplier,w
  1077  0213  0474               	iorwf	___wmul@multiplier+1,w
  1078  0214  1D03               	btfss	3,2
  1079  0215  2A17               	goto	u541
  1080  0216  2A18               	goto	u540
  1081  0217                     u541:
  1082  0217  29F8               	goto	l1166
  1083  0218                     u540:
  1084  0218                     l1174:
  1085  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1087  021A  0821               	movf	___wmul@product+1,w
  1088  021B  00F4               	movwf	?___wmul+1
  1089  021C  0820               	movf	___wmul@product,w
  1090  021D  00F3               	movwf	?___wmul
  1091  021E                     l192:
  1092  021E  0008               	return
  1093  021F                     __end_of___wmul:
  1094                           
  1095                           	psect	text3
  1096  0262                     __ptext3:	
  1097 ;; *************** function ___bmul *****************
  1098 ;; Defined at:
  1099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  multiplier      1    wreg     unsigned char 
  1102 ;;  multiplicand    1    3[COMMON] unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  multiplier      1    6[COMMON] unsigned char 
  1105 ;;  product         1    5[COMMON] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      unsigned char 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1115 ;;      Params:         1       0       0       0       0
  1116 ;;      Locals:         2       0       0       0       0
  1117 ;;      Temps:          1       0       0       0       0
  1118 ;;      Totals:         4       0       0       0       0
  1119 ;;Total ram usage:        4 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129  0262                     ___bmul:	
  1130                           ;psect for function ___bmul
  1131                           
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1135                           ;___bmul@multiplier stored from wreg
  1136  0262  00F6               	movwf	___bmul@multiplier
  1137  0263                     l1012:
  1138  0263  01F5               	clrf	___bmul@product
  1139  0264                     l1014:
  1140  0264  1C76               	btfss	___bmul@multiplier,0
  1141  0265  2A67               	goto	u321
  1142  0266  2A68               	goto	u320
  1143  0267                     u321:
  1144  0267  2A6C               	goto	l1018
  1145  0268                     u320:
  1146  0268                     l1016:
  1147  0268  0873               	movf	___bmul@multiplicand,w
  1148  0269  00F4               	movwf	??___bmul
  1149  026A  0874               	movf	??___bmul,w
  1150  026B  07F5               	addwf	___bmul@product,f
  1151  026C                     l1018:
  1152  026C  1003               	clrc
  1153  026D  0DF3               	rlf	___bmul@multiplicand,f
  1154  026E                     l1020:
  1155  026E  1003               	clrc
  1156  026F  0CF6               	rrf	___bmul@multiplier,f
  1157  0270  0876               	movf	___bmul@multiplier,w
  1158  0271  1D03               	btfss	3,2
  1159  0272  2A74               	goto	u331
  1160  0273  2A75               	goto	u330
  1161  0274                     u331:
  1162  0274  2A64               	goto	l1014
  1163  0275                     u330:
  1164  0275                     l1022:
  1165  0275  0875               	movf	___bmul@product,w
  1166  0276                     l216:
  1167  0276  0008               	return
  1168  0277                     __end_of___bmul:
  1169                           
  1170                           	psect	text4
  1171  00FD                     __ptext4:	
  1172 ;; *************** function ___awdiv *****************
  1173 ;; Defined at:
  1174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  divisor         2    2[BANK0 ] int 
  1177 ;;  dividend        2    4[BANK0 ] int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  quotient        2    9[BANK0 ] int 
  1180 ;;  sign            1    8[BANK0 ] unsigned char 
  1181 ;;  counter         1    7[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    2[BANK0 ] int 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       4       0       0       0
  1192 ;;      Locals:         0       4       0       0       0
  1193 ;;      Temps:          0       1       0       0       0
  1194 ;;      Totals:         0       9       0       0       0
  1195 ;;Total ram usage:        9 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205  00FD                     ___awdiv:	
  1206                           ;psect for function ___awdiv
  1207                           
  1208  00FD                     l1178:	
  1209                           ;incstack = 0
  1210                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1211                           
  1212  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1213  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1214  00FF  01A8               	clrf	___awdiv@sign
  1215  0100                     l1180:
  1216  0100  1FA3               	btfss	___awdiv@divisor+1,7
  1217  0101  2903               	goto	u551
  1218  0102  2904               	goto	u550
  1219  0103                     u551:
  1220  0103  290B               	goto	l1186
  1221  0104                     u550:
  1222  0104                     l1182:
  1223  0104  09A2               	comf	___awdiv@divisor,f
  1224  0105  09A3               	comf	___awdiv@divisor+1,f
  1225  0106  0AA2               	incf	___awdiv@divisor,f
  1226  0107  1903               	skipnz
  1227  0108  0AA3               	incf	___awdiv@divisor+1,f
  1228  0109                     l1184:
  1229  0109  01A8               	clrf	___awdiv@sign
  1230  010A  0AA8               	incf	___awdiv@sign,f
  1231  010B                     l1186:
  1232  010B  1FA5               	btfss	___awdiv@dividend+1,7
  1233  010C  290E               	goto	u561
  1234  010D  290F               	goto	u560
  1235  010E                     u561:
  1236  010E  2918               	goto	l1192
  1237  010F                     u560:
  1238  010F                     l1188:
  1239  010F  09A4               	comf	___awdiv@dividend,f
  1240  0110  09A5               	comf	___awdiv@dividend+1,f
  1241  0111  0AA4               	incf	___awdiv@dividend,f
  1242  0112  1903               	skipnz
  1243  0113  0AA5               	incf	___awdiv@dividend+1,f
  1244  0114                     l1190:
  1245  0114  3001               	movlw	1
  1246  0115  00A6               	movwf	??___awdiv
  1247  0116  0826               	movf	??___awdiv,w
  1248  0117  06A8               	xorwf	___awdiv@sign,f
  1249  0118                     l1192:
  1250  0118  01A9               	clrf	___awdiv@quotient
  1251  0119  01AA               	clrf	___awdiv@quotient+1
  1252  011A                     l1194:
  1253  011A  0822               	movf	___awdiv@divisor,w
  1254  011B  0423               	iorwf	___awdiv@divisor+1,w
  1255  011C  1903               	btfsc	3,2
  1256  011D  291F               	goto	u571
  1257  011E  2920               	goto	u570
  1258  011F                     u571:
  1259  011F  2957               	goto	l1214
  1260  0120                     u570:
  1261  0120                     l1196:
  1262  0120  01A7               	clrf	___awdiv@counter
  1263  0121  0AA7               	incf	___awdiv@counter,f
  1264  0122  292E               	goto	l1202
  1265  0123                     l1198:
  1266  0123  3001               	movlw	1
  1267  0124                     u585:
  1268  0124  1003               	clrc
  1269  0125  0DA2               	rlf	___awdiv@divisor,f
  1270  0126  0DA3               	rlf	___awdiv@divisor+1,f
  1271  0127  3EFF               	addlw	-1
  1272  0128  1D03               	skipz
  1273  0129  2924               	goto	u585
  1274  012A                     l1200:
  1275  012A  3001               	movlw	1
  1276  012B  00A6               	movwf	??___awdiv
  1277  012C  0826               	movf	??___awdiv,w
  1278  012D  07A7               	addwf	___awdiv@counter,f
  1279  012E                     l1202:
  1280  012E  1FA3               	btfss	___awdiv@divisor+1,7
  1281  012F  2931               	goto	u591
  1282  0130  2932               	goto	u590
  1283  0131                     u591:
  1284  0131  2923               	goto	l1198
  1285  0132                     u590:
  1286  0132                     l1204:
  1287  0132  3001               	movlw	1
  1288  0133                     u605:
  1289  0133  1003               	clrc
  1290  0134  0DA9               	rlf	___awdiv@quotient,f
  1291  0135  0DAA               	rlf	___awdiv@quotient+1,f
  1292  0136  3EFF               	addlw	-1
  1293  0137  1D03               	skipz
  1294  0138  2933               	goto	u605
  1295  0139  0823               	movf	___awdiv@divisor+1,w
  1296  013A  0225               	subwf	___awdiv@dividend+1,w
  1297  013B  1D03               	skipz
  1298  013C  293F               	goto	u615
  1299  013D  0822               	movf	___awdiv@divisor,w
  1300  013E  0224               	subwf	___awdiv@dividend,w
  1301  013F                     u615:
  1302  013F  1C03               	skipc
  1303  0140  2942               	goto	u611
  1304  0141  2943               	goto	u610
  1305  0142                     u611:
  1306  0142  294A               	goto	l1210
  1307  0143                     u610:
  1308  0143                     l1206:
  1309  0143  0822               	movf	___awdiv@divisor,w
  1310  0144  02A4               	subwf	___awdiv@dividend,f
  1311  0145  0823               	movf	___awdiv@divisor+1,w
  1312  0146  1C03               	skipc
  1313  0147  03A5               	decf	___awdiv@dividend+1,f
  1314  0148  02A5               	subwf	___awdiv@dividend+1,f
  1315  0149                     l1208:
  1316  0149  1429               	bsf	___awdiv@quotient,0
  1317  014A                     l1210:
  1318  014A  3001               	movlw	1
  1319  014B                     u625:
  1320  014B  1003               	clrc
  1321  014C  0CA3               	rrf	___awdiv@divisor+1,f
  1322  014D  0CA2               	rrf	___awdiv@divisor,f
  1323  014E  3EFF               	addlw	-1
  1324  014F  1D03               	skipz
  1325  0150  294B               	goto	u625
  1326  0151                     l1212:
  1327  0151  3001               	movlw	1
  1328  0152  02A7               	subwf	___awdiv@counter,f
  1329  0153  1D03               	btfss	3,2
  1330  0154  2956               	goto	u631
  1331  0155  2957               	goto	u630
  1332  0156                     u631:
  1333  0156  2932               	goto	l1204
  1334  0157                     u630:
  1335  0157                     l1214:
  1336  0157  0828               	movf	___awdiv@sign,w
  1337  0158  1903               	btfsc	3,2
  1338  0159  295B               	goto	u641
  1339  015A  295C               	goto	u640
  1340  015B                     u641:
  1341  015B  2961               	goto	l1218
  1342  015C                     u640:
  1343  015C                     l1216:
  1344  015C  09A9               	comf	___awdiv@quotient,f
  1345  015D  09AA               	comf	___awdiv@quotient+1,f
  1346  015E  0AA9               	incf	___awdiv@quotient,f
  1347  015F  1903               	skipnz
  1348  0160  0AAA               	incf	___awdiv@quotient+1,f
  1349  0161                     l1218:
  1350  0161  082A               	movf	___awdiv@quotient+1,w
  1351  0162  00A3               	movwf	?___awdiv+1
  1352  0163  0829               	movf	___awdiv@quotient,w
  1353  0164  00A2               	movwf	?___awdiv
  1354  0165                     l343:
  1355  0165  0008               	return
  1356  0166                     __end_of___awdiv:
  1357                           
  1358                           	psect	text5
  1359  0243                     __ptext5:	
  1360 ;; *************** function _Print *****************
  1361 ;; Defined at:
  1362 ;;		line 150 in file "USART.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  str             1    wreg     PTR unsigned char 
  1365 ;;		 -> STR_6(8), STR_5(18), STR_4(9), STR_3(2), 
  1366 ;;		 -> STR_2(17), STR_1(23), 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  str             1    5[COMMON] PTR unsigned char 
  1369 ;;		 -> STR_6(8), STR_5(18), STR_4(9), STR_3(2), 
  1370 ;;		 -> STR_2(17), STR_1(23), 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 2
  1387 ;; This function calls:
  1388 ;;		_TX
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394  0243                     _Print:	
  1395                           ;psect for function _Print
  1396                           
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1400                           ;Print@str stored from wreg
  1401  0243  00F5               	movwf	Print@str
  1402  0244                     l990:
  1403                           
  1404                           ;USART.c: 151:         while(*str != '\0'){
  1405  0244  2A55               	goto	l996
  1406  0245                     l992:
  1407                           
  1408                           ;USART.c: 152:             TX(*str);
  1409  0245  0875               	movf	Print@str,w
  1410  0246  0084               	movwf	4
  1411  0247  120A  118A  2166  120A  118A  	fcall	stringdir
  1412  024C  120A  118A  2277  120A  118A  	fcall	_TX
  1413  0251                     l994:
  1414                           
  1415                           ;USART.c: 153:             str++;
  1416  0251  3001               	movlw	1
  1417  0252  00F4               	movwf	??_Print
  1418  0253  0874               	movf	??_Print,w
  1419  0254  07F5               	addwf	Print@str,f
  1420  0255                     l996:
  1421                           
  1422                           ;USART.c: 151:         while(*str != '\0'){
  1423  0255  0875               	movf	Print@str,w
  1424  0256  0084               	movwf	4
  1425  0257  120A  118A  2166  120A  118A  	fcall	stringdir
  1426  025C  3A00               	xorlw	0
  1427  025D  1D03               	skipz
  1428  025E  2A60               	goto	u271
  1429  025F  2A61               	goto	u270
  1430  0260                     u271:
  1431  0260  2A45               	goto	l992
  1432  0261                     u270:
  1433  0261                     l98:
  1434  0261  0008               	return
  1435  0262                     __end_of_Print:
  1436                           
  1437                           	psect	text6
  1438  0277                     __ptext6:	
  1439 ;; *************** function _TX *****************
  1440 ;; Defined at:
  1441 ;;		line 157 in file "USART.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  dato            1    wreg     unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  dato            1    3[COMMON] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         1       0       0       0       0
  1459 ;;Total ram usage:        1 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;;		_Print
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470  0277                     _TX:	
  1471                           ;psect for function _TX
  1472                           
  1473                           
  1474                           ;incstack = 0
  1475                           ; Regs used in _TX: [wreg]
  1476                           ;TX@dato stored from wreg
  1477  0277  00F3               	movwf	TX@dato
  1478  0278                     l930:
  1479  0278                     l101:	
  1480                           ;USART.c: 159:     while(TXSTAbits.TRMT==0);
  1481                           
  1482  0278  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0279  1303               	bcf	3,6	;RP1=0, select bank1
  1484  027A  1C98               	btfss	24,1	;volatile
  1485  027B  2A7D               	goto	u261
  1486  027C  2A7E               	goto	u260
  1487  027D                     u261:
  1488  027D  2A78               	goto	l101
  1489  027E                     u260:
  1490  027E                     l932:
  1491                           
  1492                           ;USART.c: 160:         TXREG = dato;
  1493  027E  0873               	movf	TX@dato,w
  1494  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0281  0099               	movwf	25	;volatile
  1497  0282                     l104:
  1498  0282  0008               	return
  1499  0283                     __end_of_TX:
  1500                           
  1501                           	psect	text7
  1502  021F                     __ptext7:	
  1503 ;; *************** function _isr *****************
  1504 ;; Defined at:
  1505 ;;		line 35 in file "USART.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0
  1521 ;;      Temps:          3       0       0       0       0
  1522 ;;      Totals:         3       0       0       0       0
  1523 ;;Total ram usage:        3 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		Interrupt level 1
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532  021F                     _isr:	
  1533                           ;psect for function _isr
  1534                           
  1535  021F                     i1l1070:
  1536                           
  1537                           ;USART.c: 36:     if(PIR1bits.RCIF)
  1538  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0221  1E8C               	btfss	12,5	;volatile
  1541  0222  2A24               	goto	u44_21
  1542  0223  2A25               	goto	u44_20
  1543  0224                     u44_21:
  1544  0224  2A2A               	goto	i1l67
  1545  0225                     u44_20:
  1546  0225                     i1l1072:
  1547                           
  1548                           ;USART.c: 37:         indice = RCREG;
  1549  0225  081A               	movf	26,w	;volatile
  1550  0226  00F0               	movwf	??_isr
  1551  0227  0870               	movf	??_isr,w
  1552  0228  00B1               	movwf	_indice
  1553  0229  2A3C               	goto	i1l71
  1554  022A                     i1l67:	
  1555                           ;USART.c: 39:     else if(PIR1bits.ADIF){
  1556                           
  1557  022A  1F0C               	btfss	12,6	;volatile
  1558  022B  2A2D               	goto	u45_21
  1559  022C  2A2E               	goto	u45_20
  1560  022D                     u45_21:
  1561  022D  2A3C               	goto	i1l71
  1562  022E                     u45_20:
  1563  022E                     i1l1074:
  1564                           
  1565                           ;USART.c: 40:         if(ADCON0bits.CHS == 0)
  1566  022E  0C1F               	rrf	31,w	;volatile
  1567  022F  00F0               	movwf	??_isr
  1568  0230  0C70               	rrf	??_isr,w
  1569  0231  390F               	andlw	15
  1570  0232  3A00               	xorlw	0
  1571  0233  1D03               	skipz
  1572  0234  2A36               	goto	u46_21
  1573  0235  2A37               	goto	u46_20
  1574  0236                     u46_21:
  1575  0236  2A3B               	goto	i1l1078
  1576  0237                     u46_20:
  1577  0237                     i1l1076:
  1578                           
  1579                           ;USART.c: 41:             pot = ADRESH;
  1580  0237  081E               	movf	30,w	;volatile
  1581  0238  00F0               	movwf	??_isr
  1582  0239  0870               	movf	??_isr,w
  1583  023A  00F7               	movwf	_pot
  1584  023B                     i1l1078:
  1585                           
  1586                           ;USART.c: 42:         PIR1bits.ADIF = 0;
  1587  023B  130C               	bcf	12,6	;volatile
  1588  023C                     i1l71:
  1589  023C  0872               	movf	??_isr+2,w
  1590  023D  008A               	movwf	10
  1591  023E  0E71               	swapf	??_isr+1,w
  1592  023F  0083               	movwf	3
  1593  0240  0EFE               	swapf	btemp,f
  1594  0241  0E7E               	swapf	btemp,w
  1595  0242  0009               	retfie
  1596  0243                     __end_of_isr:
  1597  007E                     btemp	set	126	;btemp
  1598  007E                     wtemp0	set	126
  1599                           
  1600                           	psect	intentry
  1601  0004                     __pintentry:	
  1602                           ;incstack = 0
  1603                           ; Regs used in _isr: [wreg+status,2+status,0]
  1604                           
  1605  0004                     interrupt_function:
  1606  007E                     saved_w	set	btemp
  1607  0004  00FE               	movwf	btemp
  1608  0005  0E03               	swapf	3,w
  1609  0006  00F1               	movwf	??_isr+1
  1610  0007  080A               	movf	10,w
  1611  0008  00F2               	movwf	??_isr+2
  1612  0009  120A  118A  2A1F   	ljmp	_isr
  1613                           
  1614                           	psect	idloc
  1615                           
  1616                           ;Config register IDLOC0 @ 0x2000
  1617                           ;	unspecified, using default values
  1618  2000                     	org	8192
  1619  2000  3FFF               	dw	16383
  1620                           
  1621                           ;Config register IDLOC1 @ 0x2001
  1622                           ;	unspecified, using default values
  1623  2001                     	org	8193
  1624  2001  3FFF               	dw	16383
  1625                           
  1626                           ;Config register IDLOC2 @ 0x2002
  1627                           ;	unspecified, using default values
  1628  2002                     	org	8194
  1629  2002  3FFF               	dw	16383
  1630                           
  1631                           ;Config register IDLOC3 @ 0x2003
  1632                           ;	unspecified, using default values
  1633  2003                     	org	8195
  1634  2003  3FFF               	dw	16383
  1635                           
  1636                           	psect	config
  1637                           
  1638                           ;Config register CONFIG1 @ 0x2007
  1639                           ;	Oscillator Selection bits
  1640                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1641                           ;	Watchdog Timer Enable bit
  1642                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1643                           ;	Power-up Timer Enable bit
  1644                           ;	PWRTE = OFF, PWRT disabled
  1645                           ;	RE3/MCLR pin function select bit
  1646                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1647                           ;	Code Protection bit
  1648                           ;	CP = OFF, Program memory code protection is disabled
  1649                           ;	Data Code Protection bit
  1650                           ;	CPD = OFF, Data memory code protection is disabled
  1651                           ;	Brown Out Reset Selection bits
  1652                           ;	BOREN = OFF, BOR disabled
  1653                           ;	Internal External Switchover bit
  1654                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1655                           ;	Fail-Safe Clock Monitor Enabled bit
  1656                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1657                           ;	Low Voltage Programming Enable bit
  1658                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1659                           ;	In-Circuit Debugger Mode bit
  1660                           ;	DEBUG = 0x1, unprogrammed default
  1661  2007                     	org	8199
  1662  2007  20D4               	dw	8404
  1663                           
  1664                           ;Config register CONFIG2 @ 0x2008
  1665                           ;	Brown-out Reset Selection bit
  1666                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1667                           ;	Flash Program Memory Self Write Enable bits
  1668                           ;	WRT = OFF, Write protection off
  1669  2008                     	org	8200
  1670  2008  3FFF               	dw	16383

Data Sizes:
    Strings     67
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     15      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Print@str	PTR unsigned char  size(1) Largest target is 23
		 -> STR_6(CODE[8]), STR_5(CODE[18]), STR_4(CODE[9]), STR_3(CODE[2]), 
		 -> STR_2(CODE[17]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->___wmul
    ___awdiv->___wmul
    _Print->_TX

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1652
                                             11 BANK0      4     4      0
                              _Print
                                 _TX
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Print                                                2     2      0     265
                                              4 COMMON     2     2      0
                                 _TX
 ---------------------------------------------------------------------------------
 (1) _TX                                                   1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Print
     _TX
   _TX
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu May 05 00:55:33 2022

                      pc 0002           ___bmul@product 0075                       l92 01F3  
                     l98 0261                       _TX 0277             ___awdiv@sign 0028  
                     fsr 0004      ___wmul@multiplicand 0075                      ?_TX 0070  
                    l101 0278                      l104 0282                      l216 0276  
                    l190 0204                      l343 0165                      l192 021E  
                    l930 0278                      l932 027E                      l940 01BA  
                    l950 01C4                      l942 01BB                      l934 01AF  
                    l960 01D6                      l952 01C7                      l944 01BD  
                    l936 01B3                      l970 01E2                      l962 01D9  
                    l954 01CC                      l946 01BE                      l938 01B4  
                    l980 01ED                      l972 01E5                      l964 01DA  
                    l956 01CF                      l948 01C1                      l990 0244  
                    l982 01F0                      l974 01E8                      l966 01DD  
                    l958 01D2                      l992 0245                      l984 01F1  
                    l976 01E9                      l968 01E1                      l994 0251  
                    l986 01F2                      l978 01EC                      l996 0255  
                    u320 0268                      u321 0267                      u330 0275  
                    u331 0274                      u260 027E                      u261 027D  
                    u270 0261                      u510 01FC                      u271 0260  
                    u511 01FB                      u610 0143                      u611 0142  
                    u540 0218                      u605 0133                      u541 0217  
                    u525 0205                      u630 0157                      u550 0104  
                    u631 0156                      u615 013F                      u551 0103  
                    u535 020C                      u640 015C                      u560 010F  
                    u641 015B                      u625 014B                      u561 010E  
                    u570 0120                      u650 0027                      u571 011F  
                    u651 0026                      u660 0095                      u661 0094  
                    u590 0132                      u670 00A9                      u591 0131  
                    u671 00A8                      u680 00E9                      u585 0124  
                    u681 00E8                      u697 01D4                      _isr 021F  
                    _pot 0077                      fsr0 0004                     ??_TX 0073  
                   l1020 026E                     l1012 0263                     l1022 0275  
                   l1014 0264                     l1200 012A                     l1016 0268  
                   l1210 014A                     l1202 012E                     l1018 026C  
                   l1212 0151                     l1204 0132                     l1206 0143  
                   l1214 0157                     l1230 0084                     l1222 001C  
                   l1216 015C                     l1208 0149                     l1304 00F2  
                   l1240 00A1                     l1232 0088                     l1224 0021  
                   l1218 0161                     l1170 020B                     l1250 00B6  
                   l1242 00A5                     l1234 008C                     l1226 0027  
                   l1180 0100                     l1172 0212                     l1164 01F4  
                   l1260 00CD                     l1252 00BC                     l1236 0090  
                   l1228 0028                     l1190 0114                     l1182 0104  
                   l1174 0218                     l1166 01F8                     l1270 00E3  
                   l1262 00D3                     l1254 00C2                     l1246 00AA  
                   l1238 0095                     l1192 0118                     l1184 0109  
                   l1168 01FC                     l1272 00E4                     l1264 00D8  
                   l1256 00C8                     l1248 00B0                     l1194 011A  
                   l1186 010B                     l1178 00FD                     l1266 00DA  
                   l1274 00E5                     l1258 00CB                     l1196 0120  
                   l1188 010F                     l1268 00E0                     l1198 0123  
                   l1278 00EA                     ?_isr 0070                     STR_1 016C  
                   STR_2 0195                     STR_3 01AD                     STR_4 01A6  
                   STR_5 0183                     STR_6 01A7                     i1l71 023C  
                   i1l67 022A                     _main 001C                     btemp 007E  
                   start 000C        ___bmul@multiplier 0076                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0166                    _ASCII 0030  
                  _ANSEL 0188          ___awdiv@divisor 0022          ___awdiv@counter 0027  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTD 0008                    u44_20 0225                    u44_21 0224  
                  u45_20 022E                    u45_21 022D                    u46_20 0237  
                  u46_21 0236                    _TRISA 0085                    _TRISD 0088  
                  _TXREG 0019                    _Print 0243                    _setup 01AF  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00FD                   ??_main 002B  
                 ?_Print 0070                   _ADRESH 001E         ___awdiv@dividend 0024  
                 ?_setup 0070                   _ANSELH 0189                   TX@dato 0073  
                 i1l1070 021F                   i1l1072 0225                   i1l1074 022E  
                 i1l1076 0237                   i1l1078 023B                   _SPBRGH 009A  
                 ___bmul 0262                   ___wmul 01F4                ??___awdiv 0026  
                 _decena 0079                   _indice 0031                   _inicio 002F  
       ___awdiv@quotient 0029                   _unidad 007A                   saved_w 007E  
__end_of__initialization 0018      ___bmul@multiplicand 0073           __pcstackCOMMON 0070  
          __end_of_Print 0262            __end_of_setup 01F4               __end_of_TX 0283  
                ??_Print 0074                  ??_setup 0073               __pbssBANK0 002F  
             __pmaintext 001C                  ?___bmul 0073                  ?___wmul 0073  
             __pintentry 0004               __stringtab 0166                  ___awdiv 00FD  
                _centena 0078                  __ptext1 01AF                  __ptext2 01F4  
                __ptext3 0262                  __ptext4 00FD                  __ptext5 0243  
                __ptext6 0277                  __ptext7 021F     end_of_initialization 0018  
              _RCSTAbits 0018                _TXSTAbits 0098           __end_of___bmul 0277  
         __end_of___wmul 021F              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_isr 0243                 ??___bmul 0074                 ??___wmul 0077  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0022                __pstrings 0166        interrupt_function 0004  
         ___wmul@product 0020                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 016B               _ADCON1bits 009F  
      ___wmul@multiplier 0073                 Print@str 0075       __end_of__stringtab 016C  
             _INTCONbits 000B                 intlevel1 0000                stringcode 0166  
             _OSCCONbits 008F                 stringdir 0166                 stringtab 0166  
